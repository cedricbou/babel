2012-11-09 13:34:24,771 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,772 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,774 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,777 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,778 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#newClient1234567]
2012-11-09 13:34:24,779 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#newClient1234567]
2012-11-09 13:34:24,780 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#newClient1234567]
2012-11-09 13:34:24,781 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,783 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,784 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,784 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,786 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644647
2012-11-09 13:34:24,787 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,788 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,788 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,790 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,791 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,791 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,792 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,793 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,794 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644647
2012-11-09 13:34:24,795 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,795 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,796 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,796 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,797 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,798 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#newClient123456]
2012-11-09 13:34:24,800 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:24,801 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,802 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:24,803 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: newClient123456, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:24,803 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,804 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:24,804 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:24,805 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:24,805 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:24,806 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:24,806 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=newClient123456, street=23 rue du machin, name=Cedric Bou, countryCode=FRA, city=Lille}
2012-11-09 13:34:24,807 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:24,808 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,808 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,809 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:24,809 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,810 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,810 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,811 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644648
2012-11-09 13:34:24,812 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,813 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,814 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,815 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,816 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,818 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#newClient123456]
2012-11-09 13:34:24,819 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#newClient123456]
2012-11-09 13:34:24,819 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#newClient123456]
2012-11-09 13:34:24,820 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,821 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,821 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,822 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,834 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644648
2012-11-09 13:34:24,834 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,835 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,836 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,836 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,837 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,838 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-09 13:34:24,840 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=44,possibleID=true]
2012-11-09 13:34:24,841 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=50,possibleID=true]
2012-11-09 13:34:24,844 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'x'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'x'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2012-11-09 13:34:24,844 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,845 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 13:34:24,847 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (x) -> order0_
2012-11-09 13:34:24,847 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x -> order0_.orderCode
2012-11-09 13:34:24,848 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:24,849 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x.orderCode -> order0_.orderCode
2012-11-09 13:34:24,850 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 13:34:24,851 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-09 13:34:24,852 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-09 13:34:24,853 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 13:34:24,854 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=x.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=x}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=x, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@1e63cb6}

2012-11-09 13:34:24,855 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,855 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-09 13:34:24,856 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:24,860 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,861 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:24,863 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,864 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:24,864 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,865 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,866 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,866 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,867 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,867 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,868 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,869 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644648
2012-11-09 13:34:24,870 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,870 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,871 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,872 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,872 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,877 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#792b56b3-2242-4888-8d22-7e8a044a994f]
2012-11-09 13:34:24,879 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:24,888 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:24,889 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,889 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:24,890 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 792b56b3-2242-4888-8d22-7e8a044a994f, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:24,903 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,903 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:24,905 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:24,908 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#792b56b3-2242-4888-8d22-7e8a044a994f], was: [<unreferenced>] (initialized)
2012-11-09 13:34:24,911 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:24,911 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:34:24,912 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:24,913 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=792b56b3-2242-4888-8d22-7e8a044a994f, state=Draft, lines=[], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:24,913 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:24,915 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#792b56b3-2242-4888-8d22-7e8a044a994f]
2012-11-09 13:34:24,915 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:34:24,917 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,918 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,919 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:24,919 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,920 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,920 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,922 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644649
2012-11-09 13:34:24,922 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,922 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,923 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,923 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,924 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,925 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:24,926 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,927 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:24,927 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,928 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,928 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,929 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,929 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,930 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,930 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,931 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644649
2012-11-09 13:34:24,932 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,933 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,933 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,934 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,934 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,936 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:24,937 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,937 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:24,937 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,938 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,938 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,939 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,939 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,939 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,940 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,941 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644649
2012-11-09 13:34:24,941 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,941 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,942 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,942 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,943 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,943 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,945 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:24,946 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:24,947 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,952 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:24,953 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 9446a951-6eb2-46a0-b7b9-4213ecf54a90, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:24,953 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,954 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:24,954 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:24,954 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90], was: [<unreferenced>] (initialized)
2012-11-09 13:34:24,955 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:24,955 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:34:24,956 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:24,956 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=9446a951-6eb2-46a0-b7b9-4213ecf54a90, state=Draft, lines=[], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:24,957 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:24,958 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,958 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:34:24,959 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,959 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,960 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:24,960 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,961 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,961 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,962 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644649
2012-11-09 13:34:24,963 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:24,965 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.order.Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:24,966 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=51,possibleID=true]
2012-11-09 13:34:24,967 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=57,possibleID=true]
2012-11-09 13:34:24,970 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-09 13:34:24,970 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,971 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 13:34:24,972 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (generatedAlias0) -> order0_
2012-11-09 13:34:24,973 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> order0_.orderCode
2012-11-09 13:34:24,974 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> order0_.orderCode
2012-11-09 13:34:24,975 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:24,975 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.orderCode -> order0_.orderCode
2012-11-09 13:34:24,976 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 13:34:24,976 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} order0_.orderCode ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-09 13:34:24,977 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-09 13:34:24,978 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 13:34:24,979 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode as orderCode1_' {alias=generatedAlias0, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=generatedAlias0.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=generatedAlias0, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1e63cb6}

2012-11-09 13:34:24,979 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,980 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.order.Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:24,981 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:24,981 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,982 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,983 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,984 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:24,985 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,986 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,987 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,987 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,988 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,990 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,991 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:24,993 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,994 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:24,995 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:24,996 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:24,996 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:24,997 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,998 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,998 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,004 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644650
2012-11-09 13:34:25,005 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,005 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,006 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,006 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,007 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,007 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,009 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,010 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,010 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,011 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,011 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,012 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,013 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,014 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,015 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,016 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,017 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,018 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,018 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,019 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,019 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,023 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:34:25,026 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,031 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 1
2012-11-09 13:34:25,032 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,032 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,033 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90], was: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90] (initialized)
2012-11-09 13:34:25,035 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2012-11-09 13:34:25,039 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:34:25,040 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,040 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=1, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,041 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=9446a951-6eb2-46a0-b7b9-4213ecf54a90, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#1], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,042 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,042 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:34:25,043 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,043 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,045 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:34:25,046 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,047 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,047 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,048 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,048 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,049 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,050 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644650
2012-11-09 13:34:25,050 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,050 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,051 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,051 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,052 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,053 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,054 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,055 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,056 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,057 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,057 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,058 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,059 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,060 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,061 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,061 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,062 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,064 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,065 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,066 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,067 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,068 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,068 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,068 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,069 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,069 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,070 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:34:25,071 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,072 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 2
2012-11-09 13:34:25,073 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,074 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,074 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90], was: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90] (initialized)
2012-11-09 13:34:25,075 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2012-11-09 13:34:25,075 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:34:25,075 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,076 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=2, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:34:25,076 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=1, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,077 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=9446a951-6eb2-46a0-b7b9-4213ecf54a90, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#1, com.emo.sample.domain.order.OrderLine#2], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,078 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,078 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:34:25,079 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,079 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,080 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:34:25,081 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,081 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,082 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,082 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,083 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,083 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,084 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644650
2012-11-09 13:34:25,085 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,085 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,086 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,086 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,087 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,087 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,089 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,090 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,090 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,091 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,092 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,092 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,093 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,094 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,095 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,096 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,096 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,097 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,097 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:34:25,098 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:34:25,099 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,100 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,101 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,101 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:34:25,102 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:34:25,102 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,103 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,103 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,104 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,104 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,105 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,105 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:34:25,106 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,107 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 3
2012-11-09 13:34:25,108 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,109 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,109 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90], was: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90] (initialized)
2012-11-09 13:34:25,110 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2012-11-09 13:34:25,110 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:34:25,111 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,115 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=2, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:34:25,115 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=1, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,116 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=9446a951-6eb2-46a0-b7b9-4213ecf54a90, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#1, com.emo.sample.domain.order.OrderLine#2, com.emo.sample.domain.order.OrderLine#3], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,117 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=3, price=component[currencyCode,price]{price=499.0, currencyCode=EUR}, item=led tv, lineId=3}
2012-11-09 13:34:25,117 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,117 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:34:25,118 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,119 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,120 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:34:25,121 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,121 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,121 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,122 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,122 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,123 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,124 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644651
2012-11-09 13:34:25,124 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,125 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,126 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,127 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,128 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,129 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,129 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,130 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,130 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,131 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,132 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,133 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,134 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,134 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,135 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,136 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:34:25,137 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:34:25,137 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,138 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 2
2012-11-09 13:34:25,139 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#3]
2012-11-09 13:34:25,140 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,141 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,141 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:34:25,142 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:34:25,143 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:34:25,143 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#3]
2012-11-09 13:34:25,144 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#3]
2012-11-09 13:34:25,144 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,145 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#9446a951-6eb2-46a0-b7b9-4213ecf54a90]
2012-11-09 13:34:25,146 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,146 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,147 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,147 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,148 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,150 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644651
2012-11-09 13:34:25,150 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,150 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,151 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,151 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,152 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,153 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,154 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,155 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:25,155 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,156 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,156 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,156 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,157 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,157 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,158 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,159 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644651
2012-11-09 13:34:25,159 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,160 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,161 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,161 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,161 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,162 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,164 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:25,165 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,166 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,166 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:25,167 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 8c7018be-c7ff-4ed6-9d70-42930f41bfd6, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:25,168 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,168 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,168 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,169 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6], was: [<unreferenced>] (initialized)
2012-11-09 13:34:25,170 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:25,170 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:34:25,171 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,171 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=8c7018be-c7ff-4ed6-9d70-42930f41bfd6, state=Draft, lines=[], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,172 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:25,173 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,174 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:34:25,175 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,176 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,176 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,176 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,177 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,177 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,178 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644651
2012-11-09 13:34:25,179 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,179 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,180 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,180 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,180 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,181 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,183 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,184 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,184 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,185 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,186 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,192 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,193 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,194 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,195 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,196 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,196 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,197 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,197 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,198 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,198 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,200 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:34:25,201 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,202 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 4
2012-11-09 13:34:25,203 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,203 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,204 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6], was: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6] (initialized)
2012-11-09 13:34:25,204 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2012-11-09 13:34:25,205 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:34:25,205 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,206 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,206 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=8c7018be-c7ff-4ed6-9d70-42930f41bfd6, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#4], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,207 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,207 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:34:25,208 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,209 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,210 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:34:25,210 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,211 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,211 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,212 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,212 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,212 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,214 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644652
2012-11-09 13:34:25,214 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,214 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,215 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,216 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,216 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,217 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,218 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,219 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,220 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,221 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,221 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,222 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,222 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,224 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,225 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,225 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,226 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,227 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,227 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,228 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,229 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,229 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,230 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,230 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,231 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,231 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,232 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:34:25,233 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,235 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 5
2012-11-09 13:34:25,235 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,236 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,237 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6], was: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6] (initialized)
2012-11-09 13:34:25,237 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2012-11-09 13:34:25,238 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:34:25,238 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,239 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,239 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=8c7018be-c7ff-4ed6-9d70-42930f41bfd6, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#4, com.emo.sample.domain.order.OrderLine#5], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,240 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=5, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:34:25,240 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,241 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:34:25,241 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,242 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,243 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:34:25,244 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,244 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,245 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,245 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,246 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,246 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,247 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644652
2012-11-09 13:34:25,247 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,247 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,248 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,249 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,249 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,250 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,251 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,252 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,253 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,254 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,254 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,255 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,255 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,257 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,258 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,258 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,259 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,260 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,261 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:34:25,262 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,262 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,263 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,264 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,264 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,270 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,270 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,271 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,272 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,272 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,273 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,273 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,274 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:34:25,275 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,276 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 6
2012-11-09 13:34:25,277 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,277 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,278 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6], was: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6] (initialized)
2012-11-09 13:34:25,278 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2012-11-09 13:34:25,279 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:34:25,279 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,279 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,280 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=8c7018be-c7ff-4ed6-9d70-42930f41bfd6, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#4, com.emo.sample.domain.order.OrderLine#5, com.emo.sample.domain.order.OrderLine#6], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,281 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=6, price=component[currencyCode,price]{price=499.0, currencyCode=EUR}, item=led tv, lineId=3}
2012-11-09 13:34:25,281 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=5, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:34:25,282 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,282 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:34:25,283 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,284 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,285 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:34:25,285 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,286 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,286 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,287 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,287 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,287 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,289 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644652
2012-11-09 13:34:25,289 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,290 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,290 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,291 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,291 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,292 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,293 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,294 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,295 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,295 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,296 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,296 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,297 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,298 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,299 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,300 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,300 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,301 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,302 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:34:25,302 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,303 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,304 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 2
2012-11-09 13:34:25,305 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:34:25,306 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,307 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,308 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,308 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,309 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,309 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:34:25,310 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:34:25,310 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,311 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,312 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,312 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,313 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,313 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,314 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,314 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6], was: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6] (initialized)
2012-11-09 13:34:25,315 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2012-11-09 13:34:25,315 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:34:25,316 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,317 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:34:25,317 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=8c7018be-c7ff-4ed6-9d70-42930f41bfd6, state=Open, lines=[com.emo.sample.domain.order.OrderLine#4, com.emo.sample.domain.order.OrderLine#5, com.emo.sample.domain.order.OrderLine#6], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,318 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=6, price=component[currencyCode,price]{price=499.0, currencyCode=EUR}, item=led tv, lineId=3}
2012-11-09 13:34:25,318 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=5, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:34:25,319 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:34:25,320 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,321 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,321 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,322 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,322 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,323 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,323 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644653
2012-11-09 13:34:25,324 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,325 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,326 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,327 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,328 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,328 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,329 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,330 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,330 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,331 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,332 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,333 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,334 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,334 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,335 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,336 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:34:25,336 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,337 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,338 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 2
2012-11-09 13:34:25,339 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:34:25,340 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,341 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,346 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:34:25,347 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,348 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:34:25,348 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:34:25,349 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:34:25,350 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,350 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#8c7018be-c7ff-4ed6-9d70-42930f41bfd6]
2012-11-09 13:34:25,351 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,351 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,352 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,352 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,352 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,354 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644653
2012-11-09 13:34:25,355 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,355 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,356 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,356 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,356 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,358 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,359 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,359 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:25,360 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,360 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,360 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,361 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,361 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,361 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,362 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,362 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644653
2012-11-09 13:34:25,363 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:25,363 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,364 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,365 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:25,365 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:25,366 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,368 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:25,369 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,369 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,370 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:25,370 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: b221e101-6ea0-471b-8516-9b200608a8c0, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:25,371 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:25,371 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:25,372 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:25,373 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#b221e101-6ea0-471b-8516-9b200608a8c0], was: [<unreferenced>] (initialized)
2012-11-09 13:34:25,373 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:25,374 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:34:25,374 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:25,375 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=b221e101-6ea0-471b-8516-9b200608a8c0, state=Draft, lines=[], forCustomerCode=dd274b45-332b-4ddf-880c-fe8b169ff56f}
2012-11-09 13:34:25,376 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:25,377 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,377 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:34:25,378 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:25,378 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:25,379 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:25,379 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,380 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,380 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,382 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644653
2012-11-09 13:34:25,383 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:34:25,384 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:25,385 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:25,386 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:34:25,387 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:25,387 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,388 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,389 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,389 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:25,390 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,391 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,392 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,393 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,394 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#b221e101-6ea0-471b-8516-9b200608a8c0]
2012-11-09 13:34:25,394 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,395 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:34:25,395 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:25,396 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:25,396 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:25,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:25,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:25,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:25,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8532d1
2012-11-09 13:34:25,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@139a82d
2012-11-09 13:34:25,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dc88c7
2012-11-09 13:34:25,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:25,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:25,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:25,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:25,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:25,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:25,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:25,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:25,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:25,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:25,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:25,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:25,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:25,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:25,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:25,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:25,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:25,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:25,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:25,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:25,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:25,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:25,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:25,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:25,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:25,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:25,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:25,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:25,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:25,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:25,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:25,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:25,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:25,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9d672e
2012-11-09 13:34:25,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:25,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:25,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:25,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d1339b
2012-11-09 13:34:25,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:25,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:25,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:25,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:25,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:25,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:25,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:25,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c568d5
2012-11-09 13:34:25,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c89b0a
2012-11-09 13:34:25,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:25,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:25,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:25,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:25,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:25,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:25,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@19ddf4e
2012-11-09 13:34:25,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:25,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:25,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:25,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:25,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:25,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:25,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@37601e
2012-11-09 13:34:25,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:25,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:25,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@193bcf
2012-11-09 13:34:25,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:25,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:25,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1728f89
2012-11-09 13:34:25,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@1ad1594
2012-11-09 13:34:25,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:25,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18e3a71
2012-11-09 13:34:25,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9eded9
2012-11-09 13:34:25,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@388429
2012-11-09 13:34:25,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6cac2b
2012-11-09 13:34:25,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9b4ec2
2012-11-09 13:34:25,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fb761
2012-11-09 13:34:25,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19078d4
2012-11-09 13:34:25,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ecda63
2012-11-09 13:34:25,677 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 13:34:25,678 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 13:34:25,678 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:25,679 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:25,679 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 13:34:25,679 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 13:34:25,680 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 13:34:25,680 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 13:34:25,681 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 13:34:25,685 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 13:34:25,685 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 13:34:25,686 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 13:34:25,686 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 13:34:25,687 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 13:34:25,688 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 13:34:25,688 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@6eb38a
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@eef406
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@1cc8bbe
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 13:34:25,689 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 13:34:25,690 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 13:34:25,692 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 13:34:25,693 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 13:34:25,694 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 13:34:25,697 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 13:34:25,699 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 13:34:25,701 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 13:34:25,702 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 13:34:25,703 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 13:34:25,704 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 13:34:25,705 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 13:34:25,707 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 13:34:25,707 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 13:34:25,708 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 13:34:25,709 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 13:34:25,710 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 13:34:25,710 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 13:34:25,711 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 13:34:25,712 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:25,712 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 13:34:25,713 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 13:34:25,714 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,715 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 13:34:25,715 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 13:34:25,716 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 13:34:25,717 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,717 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 13:34:25,718 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 13:34:25,718 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 13:34:25,718 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,719 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 13:34:25,719 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 13:34:25,720 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 13:34:25,720 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,721 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 13:34:25,721 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 13:34:25,722 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 13:34:25,722 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,723 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 13:34:25,723 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 13:34:25,724 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 13:34:25,724 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,725 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 13:34:25,725 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 13:34:25,726 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 13:34:25,726 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 13:34:25,727 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:25,727 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 13:34:25,728 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 13:34:25,730 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,730 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 13:34:25,731 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 13:34:25,731 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 13:34:25,732 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,733 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 13:34:25,733 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 13:34:25,734 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 13:34:25,734 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 13:34:25,735 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,735 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,736 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,737 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,738 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 13:34:25,738 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:34:25,739 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:34:25,739 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,740 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 13:34:25,740 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,741 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 13:34:25,741 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 13:34:25,742 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 13:34:25,743 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:25,744 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:25,744 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 13:34:25,745 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 13:34:25,746 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,747 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 13:34:25,747 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 13:34:25,748 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 13:34:25,749 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 13:34:25,750 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 13:34:25,750 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 13:34:25,751 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,751 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 13:34:25,752 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 13:34:25,752 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 13:34:25,753 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,754 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,755 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 13:34:25,759 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 13:34:25,760 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 13:34:25,761 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:25,761 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 13:34:25,762 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 13:34:25,762 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:34:25,763 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:34:25,763 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 13:34:25,764 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 13:34:25,764 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 13:34:25,764 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 13:34:25,765 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 13:34:25,765 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 13:34:25,766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 13:34:25,766 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 13:34:25,767 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 13:34:25,767 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 13:34:25,768 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 13:34:25,768 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 13:34:25,769 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 13:34:25,769 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 13:34:25,770 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 13:34:25,770 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 13:34:25,770 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 13:34:25,771 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 13:34:25,771 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,772 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 13:34:25,772 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 13:34:25,772 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:25,773 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 13:34:25,773 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 13:34:25,774 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 13:34:25,774 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 13:34:25,776 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:34:25,777 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:34:25,778 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:34:25,778 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 13:34:25,781 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:34:25,782 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 13:34:25,783 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 13:34:25,783 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 13:34:25,784 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 13:34:25,784 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 13:34:25,784 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 13:34:25,785 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 13:34:25,785 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 13:34:25,785 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:34:25,786 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 13:34:25,786 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 13:34:25,787 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 13:34:25,787 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 13:34:25,788 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 13:34:25,788 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 13:34:25,788 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 13:34:25,789 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 13:34:25,789 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 13:34:25,790 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 13:34:25,790 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 13:34:25,790 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 13:34:25,791 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 13:34:25,792 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 13:34:25,792 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 13:34:25,792 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 13:34:25,793 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 13:34:25,793 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 13:34:25,793 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 13:34:25,794 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 13:34:25,794 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 13:34:25,795 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 13:34:25,796 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter2226434968966839094.jar, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;C:\Program Files\Heroku\bin;C:\Program Files\ruby-1.9.2\bin;C:\Program Files\git\bin;C:\Program Files\git\cmd;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@1cc8bbe, surefire.test.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_01\jre, sun.java.command=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter2226434968966839094.jar C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire7586567173852155835tmp C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire5128029321214978642tmp, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_01\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_01\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Cedroic\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 13:34:25,800 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:25,801 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:25,801 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:25,803 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 13:34:25,804 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 13:34:25,804 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_7_, order_.state as state7_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 13:34:25,804 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:25,805 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:34:25,805 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 13:34:25,807 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 13:34:25,807 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 13:34:25,808 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city6_, client_.countryCode as countryC3_6_, client_.name as name6_, client_.street as street6_, client_.zip as zip6_ from Client client_ where client_.clientCode=?
2012-11-09 13:34:25,808 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:25,808 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:25,809 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 13:34:25,810 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:25,811 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 13:34:25,811 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item8_, orderline_.lineId as lineId8_, orderline_.currencyCode as currency4_8_, orderline_.price as price8_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 13:34:25,811 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 13:34:25,812 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 13:34:25,812 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 13:34:25,817 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:25,818 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:25,818 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:25,818 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 13:34:25,819 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 13:34:25,819 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:25,820 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:25,821 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,821 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,822 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,823 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,823 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,824 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,824 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,825 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:25,826 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:25,826 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:25,827 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,828 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,829 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,830 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,830 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,831 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,831 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,832 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,833 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,834 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,834 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,835 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:25,835 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,836 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,837 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,837 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,838 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,839 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,839 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,840 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,840 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,841 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,842 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,843 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:25,843 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_7_1_, lines0_.id as id1_, lines0_.id as id8_0_, lines0_.item as item8_0_, lines0_.lineId as lineId8_0_, lines0_.currencyCode as currency4_8_0_, lines0_.price as price8_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:25,844 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: f3dd80a2-90f3-444d-a184-c8e134e13317 (<unnamed>)
2012-11-09 13:34:25,845 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 13:34:25,845 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 13:34:25,845 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 13:34:25,846 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 13:34:25,846 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 13:34:25,850 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 13:34:25,851 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-11-09 13:34:25,872 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644658
2012-11-09 13:34:25,873 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644658
2012-11-09 13:34:25,877 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:34:25,885 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644658
2012-11-09 13:34:25,886 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644658
2012-11-09 13:34:25,894 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:34:25,897 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 13:34:28,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:28,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:28,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:28,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8532d1
2012-11-09 13:34:28,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@139a82d
2012-11-09 13:34:28,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dc88c7
2012-11-09 13:34:28,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:28,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:28,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:28,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:28,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:28,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:28,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:28,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:28,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:28,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:28,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:28,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:28,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:28,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:28,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:28,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:28,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:28,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:28,930 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:28,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:28,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:28,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:28,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:28,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:28,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:28,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:28,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:28,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:28,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:28,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:28,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:28,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:28,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:28,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:28,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:28,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:28,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9d672e
2012-11-09 13:34:28,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:28,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:28,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:28,941 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d1339b
2012-11-09 13:34:28,941 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:28,941 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:28,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:28,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:28,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:28,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:28,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:28,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:28,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:28,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:28,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c568d5
2012-11-09 13:34:28,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c89b0a
2012-11-09 13:34:28,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:28,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:28,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:28,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:28,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:28,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:28,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@19ddf4e
2012-11-09 13:34:28,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:28,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:28,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:28,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:28,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:28,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:28,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@37601e
2012-11-09 13:34:28,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:28,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:28,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@193bcf
2012-11-09 13:34:28,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:28,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:28,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1728f89
2012-11-09 13:34:28,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@1ad1594
2012-11-09 13:34:28,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:28,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:28,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@76aa0e
2012-11-09 13:34:28,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9692e9
2012-11-09 13:34:28,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1872a61
2012-11-09 13:34:28,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ef7c67
2012-11-09 13:34:28,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d06330
2012-11-09 13:34:28,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11fe5c1
2012-11-09 13:34:28,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1250247
2012-11-09 13:34:28,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b8a7ce
2012-11-09 13:34:28,954 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 13:34:28,954 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 13:34:28,955 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:28,955 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:28,955 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 13:34:28,956 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 13:34:28,956 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 13:34:28,956 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 13:34:28,956 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 13:34:28,957 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 13:34:28,957 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 13:34:28,957 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 13:34:28,958 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 13:34:28,958 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 13:34:28,958 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 13:34:28,959 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: EnvironmentClassLoader[web-app:production/webapp/default/ROOT]
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@110edc2
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@11c5876
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 13:34:28,959 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 13:34:28,960 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 13:34:28,962 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 13:34:28,963 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 13:34:28,964 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 13:34:28,965 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 13:34:28,967 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 13:34:28,968 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 13:34:28,969 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 13:34:28,970 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 13:34:28,972 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 13:34:28,974 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 13:34:28,976 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 13:34:28,976 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 13:34:28,978 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 13:34:28,983 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 13:34:28,984 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 13:34:28,984 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 13:34:28,985 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 13:34:28,985 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:28,986 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 13:34:28,986 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 13:34:28,987 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:28,988 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 13:34:28,989 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 13:34:28,990 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 13:34:28,990 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:28,991 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 13:34:28,991 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 13:34:28,991 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 13:34:28,992 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:28,992 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 13:34:28,993 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 13:34:28,993 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 13:34:28,994 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:28,995 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 13:34:28,995 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 13:34:28,996 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 13:34:28,996 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:28,996 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 13:34:28,997 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 13:34:28,997 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 13:34:28,998 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:28,998 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 13:34:28,999 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 13:34:28,999 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 13:34:29,000 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 13:34:29,001 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:29,001 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 13:34:29,001 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 13:34:29,003 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,003 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 13:34:29,004 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 13:34:29,004 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 13:34:29,005 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,005 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 13:34:29,006 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 13:34:29,006 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 13:34:29,006 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 13:34:29,007 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,007 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,008 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,008 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,009 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 13:34:29,009 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:34:29,010 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:34:29,010 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:29,010 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 13:34:29,011 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,011 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 13:34:29,011 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 13:34:29,012 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 13:34:29,012 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:29,013 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:29,013 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 13:34:29,014 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 13:34:29,015 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,016 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 13:34:29,017 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 13:34:29,018 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 13:34:29,018 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,019 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 13:34:29,020 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 13:34:29,020 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 13:34:29,021 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,021 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 13:34:29,021 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 13:34:29,022 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 13:34:29,022 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,023 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,023 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 13:34:29,024 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 13:34:29,024 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 13:34:29,025 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:29,026 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 13:34:29,026 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 13:34:29,026 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:34:29,027 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:34:29,027 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 13:34:29,027 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 13:34:29,028 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 13:34:29,028 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 13:34:29,028 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 13:34:29,029 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 13:34:29,029 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 13:34:29,029 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 13:34:29,030 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 13:34:29,030 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 13:34:29,031 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 13:34:29,031 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 13:34:29,031 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 13:34:29,032 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 13:34:29,032 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 13:34:29,032 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 13:34:29,032 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 13:34:29,033 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 13:34:29,033 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:29,033 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 13:34:29,034 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 13:34:29,034 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:29,035 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 13:34:29,035 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 13:34:29,036 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 13:34:29,036 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 13:34:29,037 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:34:29,039 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:34:29,040 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:34:29,040 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 13:34:29,043 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:34:29,044 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 13:34:29,045 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 13:34:29,045 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 13:34:29,046 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 13:34:29,046 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 13:34:29,046 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 13:34:29,047 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 13:34:29,047 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 13:34:29,048 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:34:29,048 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 13:34:29,049 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 13:34:29,049 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 13:34:29,050 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 13:34:29,051 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 13:34:29,051 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 13:34:29,052 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 13:34:29,052 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 13:34:29,052 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 13:34:29,052 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 13:34:29,053 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 13:34:29,053 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 13:34:29,053 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 13:34:29,054 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 13:34:29,054 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 13:34:29,054 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 13:34:29,055 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 13:34:29,055 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 13:34:29,055 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 13:34:29,056 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 13:34:29,056 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 13:34:29,056 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 13:34:29,057 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter2226434968966839094.jar, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;C:\Program Files\Heroku\bin;C:\Program Files\ruby-1.9.2\bin;C:\Program Files\git\bin;C:\Program Files\git\cmd;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@11c5876, surefire.test.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_01\jre, sun.java.command=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter2226434968966839094.jar C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire7586567173852155835tmp C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire5128029321214978642tmp, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_01\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_01\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Cedroic\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 13:34:29,062 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:29,063 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:29,063 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:29,066 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 13:34:29,066 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 13:34:29,066 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_13_, order_.state as state13_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 13:34:29,067 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:29,067 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:34:29,067 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 13:34:29,070 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 13:34:29,071 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 13:34:29,071 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city12_, client_.countryCode as countryC3_12_, client_.name as name12_, client_.street as street12_, client_.zip as zip12_ from Client client_ where client_.clientCode=?
2012-11-09 13:34:29,072 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:29,072 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:29,072 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 13:34:29,074 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:29,079 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 13:34:29,080 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item14_, orderline_.lineId as lineId14_, orderline_.currencyCode as currency4_14_, orderline_.price as price14_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 13:34:29,080 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 13:34:29,081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 13:34:29,081 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 13:34:29,082 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:29,082 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:29,083 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:29,083 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 13:34:29,084 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 13:34:29,084 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:29,085 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:29,086 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,087 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,088 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,089 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,089 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,090 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,091 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,092 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:29,093 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:29,094 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:29,094 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,095 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,096 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,096 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,097 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,098 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,098 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,099 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,100 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,101 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,102 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,103 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,103 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,104 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,104 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,105 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,106 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,106 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,107 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,108 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,108 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,109 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,109 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,110 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:29,110 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_13_1_, lines0_.id as id1_, lines0_.id as id14_0_, lines0_.item as item14_0_, lines0_.lineId as lineId14_0_, lines0_.currencyCode as currency4_14_0_, lines0_.price as price14_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:29,111 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: be3d3e14-183b-4788-a301-b0bbbc2c269b (<unnamed>)
2012-11-09 13:34:29,111 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 13:34:29,112 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 13:34:29,112 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 13:34:29,112 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 13:34:29,113 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 13:34:29,116 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 13:34:29,117 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-11-09 13:34:29,152 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644691
2012-11-09 13:34:29,154 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644691
2012-11-09 13:34:29,162 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:34:29,173 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644691
2012-11-09 13:34:29,174 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644691
2012-11-09 13:34:29,182 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:34:29,184 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 13:34:29,517 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644695
2012-11-09 13:34:29,518 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:29,519 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:29,523 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'clientCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-09 13:34:29,524 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:29,524 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 13:34:29,525 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (generatedAlias0) -> client0_
2012-11-09 13:34:29,526 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 13:34:29,527 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 13:34:29,527 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : clientCode -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:29,528 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.clientCode -> client0_.clientCode
2012-11-09 13:34:29,528 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 13:34:29,529 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} client0_.clientCode ) ( FromClause{level=1} Client client0_ ) ( where ( = ( client0_.clientCode client0_.clientCode clientCode ) ? ) ) )
2012-11-09 13:34:29,529 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 13:34:29,530 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 13:34:29,531 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode as clientCode12_' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.clientCode' {propertyName=clientCode,dereferenceType=ALL,propertyPath=clientCode,path=generatedAlias0.clientCode,tableAlias=client0_,className=com.emo.sample.domain.Client,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'clientCode' {originalText=clientCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1e63cb6}

2012-11-09 13:34:29,531 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:29,532 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:29,532 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,533 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:29,540 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:29,541 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:29,542 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:29,543 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:29,544 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:29,544 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:29,544 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:29,546 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644695
2012-11-09 13:34:29,546 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:29,546 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:29,547 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:29,548 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:29,548 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:29,549 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,550 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:29,551 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:29,552 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:29,552 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 1234, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:29,553 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:29,553 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:29,553 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:29,554 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:29,554 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:29,555 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:29,555 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=1 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:34:29,556 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:29,557 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:29,557 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:29,558 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:29,558 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:29,559 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:29,559 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:29,576 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644695
2012-11-09 13:34:29,576 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:29,577 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:29,577 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:29,589 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:29,590 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:29,590 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:29,591 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:29,593 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:29,594 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,594 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,595 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,596 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:29,596 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:29,597 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:29,597 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:29,597 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:34:29,598 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:29,598 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:29,599 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:34:29,599 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:29,601 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:29,601 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:29,602 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:29,602 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:29,602 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:29,603 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:29,603 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644696
2012-11-09 13:34:29,604 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:29,604 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:29,605 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:29,605 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:29,606 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:29,606 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:29,608 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:29,609 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:29,609 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,610 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,611 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,611 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:29,612 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:29,612 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:29,613 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:29,613 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:34:29,614 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:29,615 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:29,615 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=46207, clientCode=1234, street=23 rue c6b81e20-0a40-4e0d-9d8e-91cb832d20d0, name=toto, countryCode=6b8, city=e20-0a40-}
2012-11-09 13:34:29,616 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:29,617 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:29,617 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:29,618 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:29,618 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:29,619 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:29,619 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:29,622 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644696
2012-11-09 13:34:29,622 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:29,623 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:29,623 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:29,624 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:29,624 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:29,624 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:29,626 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:29,626 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:29,627 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,628 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,628 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:29,629 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:29,629 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:29,629 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:29,630 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:29,630 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:34:29,631 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:29,631 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:29,631 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:34:29,632 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:29,633 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:29,634 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:29,634 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:29,634 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:29,635 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:29,635 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:31,153 [resin-port-8080-16] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644711
2012-11-09 13:34:31,154 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:31,154 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:31,154 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:31,155 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:31,155 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:31,155 [resin-port-8080-16] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:31,157 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:31,158 [resin-port-8080-16] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:31,158 [resin-port-8080-16] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,159 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,160 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,160 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:31,160 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:31,161 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:31,161 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:31,161 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:31,161 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:31,162 [resin-port-8080-16] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:31,162 [resin-port-8080-16] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:34:31,162 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:31,163 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:31,163 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:31,163 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:31,164 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:31,541 [resin-port-8080-14] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644715
2012-11-09 13:34:31,541 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:31,541 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:31,542 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:31,543 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:31,544 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:31,544 [resin-port-8080-14] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:31,546 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:31,547 [resin-port-8080-14] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:31,548 [resin-port-8080-14] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,548 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,549 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,549 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:31,550 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:31,550 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:31,550 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:31,551 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:31,551 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:31,551 [resin-port-8080-14] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:31,551 [resin-port-8080-14] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:34:31,552 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:31,552 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:31,552 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:31,553 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:31,553 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:31,554 [resin-port-8080-14] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644715
2012-11-09 13:34:31,554 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:31,554 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:31,555 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:31,555 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:31,555 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:31,556 [resin-port-8080-14] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:31,557 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:31,558 [resin-port-8080-14] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:31,559 [resin-port-8080-14] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,559 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,560 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:34:31,560 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:31,561 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:31,561 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:31,561 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:31,562 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:34:31,562 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:31,562 [resin-port-8080-14] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:31,563 [resin-port-8080-14] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=80818, clientCode=1234, street=23 rue 12c6393d-234a-409f-8e54-2e292e9e85a8, name=toto, countryCode=2c6, city=93d-234}
2012-11-09 13:34:31,563 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:31,564 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:31,565 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:31,565 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:31,565 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:31,566 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:31,566 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:31,849 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 13:34:31,850 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 13:34:31,873 [Thread-1] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 13:34:31,873 [Thread-1] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 13:35:35,260 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-09 13:35:35,274 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-09 13:35:35,278 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-09 13:35:35,281 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-09 13:35:35,318 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-09 13:35:35,945 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:35:36,007 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:35:36,042 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:35:36,050 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 13:36:38,959 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-09 13:36:38,973 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-09 13:36:38,977 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-09 13:36:38,980 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-09 13:36:39,018 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-09 13:36:39,657 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:36:39,722 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:36:39,756 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:36:39,764 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
