2012-10-30 01:01:49,558 [resin-port-8080-24] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:01:49,577 [resin-port-8080-24] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:01:49,594 [resin-port-8080-24] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:01:49,603 [resin-port-8080-24] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:01:50,719 [resin-port-8080-24] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:01:50,730 [resin-port-8080-24] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:02:59,006 [resin-port-8080-22] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 01:02:59,024 [resin-port-8080-22] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 01:02:59,028 [resin-port-8080-22] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 01:02:59,031 [resin-port-8080-22] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 01:02:59,077 [resin-port-8080-22] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:02:59,528 [resin-port-8080-22] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:02:59,643 [resin-port-8080-22] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:02:59,662 [resin-port-8080-22] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:02:59,680 [resin-port-8080-22] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:02:59,689 [resin-port-8080-22] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:03:00,823 [resin-port-8080-22] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:03:00,833 [resin-port-8080-22] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:04:01,111 [resin-port-8080-19] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 01:04:01,128 [resin-port-8080-19] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 01:04:01,132 [resin-port-8080-19] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 01:04:01,135 [resin-port-8080-19] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 01:04:01,179 [resin-port-8080-19] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:04:01,621 [resin-port-8080-19] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:04:01,734 [resin-port-8080-19] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:04:01,755 [resin-port-8080-19] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:04:01,772 [resin-port-8080-19] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:04:01,781 [resin-port-8080-19] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:04:02,898 [resin-port-8080-19] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:04:02,909 [resin-port-8080-19] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:04:34,515 [resin-port-8080-29] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 01:04:34,532 [resin-port-8080-29] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 01:04:34,536 [resin-port-8080-29] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 01:04:34,539 [resin-port-8080-29] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 01:04:34,581 [resin-port-8080-29] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:04:35,016 [resin-port-8080-29] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:04:35,129 [resin-port-8080-29] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:04:35,149 [resin-port-8080-29] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:04:35,166 [resin-port-8080-29] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:04:35,175 [resin-port-8080-29] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:04:36,287 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:04:36,299 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:04:36,404 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:06:41,976 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 01:06:41,997 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 01:06:42,001 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 01:06:42,004 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 01:06:42,047 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:06:42,498 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:06:42,604 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:06:42,628 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:06:42,647 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:06:42,656 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:06:43,584 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:06:43,596 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:06:46,969 [resin-port-8080-13] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:06:46,987 [resin-port-8080-13] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:06:46,994 [resin-port-8080-13] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:06:46,995 [resin-port-8080-13] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:06:46,997 [resin-port-8080-13] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:06:46,997 [resin-port-8080-13] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:06:47,013 [resin-port-8080-13] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-10-30 01:06:47,052 [resin-port-8080-13] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:06:47,058 [resin-port-8080-13] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:06:49,251 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:06:49,266 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:06:49,272 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:06:49,273 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:06:49,274 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:06:49,274 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:06:49,288 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-10-30 01:06:49,307 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:06:49,309 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:14,161 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 01:08:14,182 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 01:08:14,186 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 01:08:14,189 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 01:08:14,232 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:08:14,691 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:08:14,798 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:08:14,821 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:08:14,840 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:08:14,849 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:08:15,783 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:15,795 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:19,239 [resin-port-8080-30] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:08:19,255 [resin-port-8080-30] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:08:19,261 [resin-port-8080-30] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:08:19,262 [resin-port-8080-30] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:08:19,264 [resin-port-8080-30] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:08:19,265 [resin-port-8080-30] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:08:19,280 [resin-port-8080-30] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-10-30 01:08:19,320 [resin-port-8080-30] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:19,325 [resin-port-8080-30] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:19,420 [resin-port-8080-30] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:21,562 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:08:21,578 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:08:21,585 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:08:21,590 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:08:21,590 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:08:21,591 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:08:21,605 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-10-30 01:08:21,644 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:21,647 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:08:45,657 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:11:05,840 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 01:11:05,858 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 01:11:05,861 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 01:11:05,864 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 01:11:05,912 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 01:11:06,364 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 01:11:06,474 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 01:11:06,493 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 01:11:06,517 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 01:11:06,525 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 01:11:07,480 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 01:11:07,492 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 22:54:56,050 [resin-port-8080-29] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-30 22:54:56,066 [resin-port-8080-29] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-30 22:54:56,070 [resin-port-8080-29] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-30 22:54:56,073 [resin-port-8080-29] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-30 22:54:56,112 [resin-port-8080-29] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-30 22:54:56,540 [resin-port-8080-29] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-30 22:54:56,640 [resin-port-8080-29] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-30 22:54:56,659 [resin-port-8080-29] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-30 22:54:56,676 [resin-port-8080-29] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-30 22:54:56,691 [resin-port-8080-29] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-30 22:54:57,698 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 22:54:57,709 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 22:54:57,809 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-30 22:54:58,203 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:34:46,269 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 21:34:46,328 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 21:34:46,332 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 21:34:46,335 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 21:34:46,471 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 21:34:47,572 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 21:34:47,771 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 21:34:47,794 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 21:34:47,815 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 21:34:47,835 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 21:34:49,283 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:34:49,299 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:34:58,840 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 21:34:58,861 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 21:34:58,865 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 21:34:58,868 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 21:34:58,910 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 21:34:59,369 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 21:34:59,481 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 21:34:59,503 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 21:34:59,525 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 21:34:59,540 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 21:35:00,527 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:35:00,548 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:35:27,069 [resin-port-8080-14] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 21:35:27,086 [resin-port-8080-14] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 21:35:27,090 [resin-port-8080-14] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 21:35:27,093 [resin-port-8080-14] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 21:35:27,134 [resin-port-8080-14] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 21:35:27,562 [resin-port-8080-14] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 21:35:27,665 [resin-port-8080-14] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 21:35:27,683 [resin-port-8080-14] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 21:35:27,702 [resin-port-8080-14] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 21:35:27,710 [resin-port-8080-14] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 21:35:28,746 [resin-port-8080-14] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:35:28,757 [resin-port-8080-14] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:35:28,858 [resin-port-8080-14] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:35:29,351 [resin-port-8080-14] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:36:11,185 [resin-port-8080-29] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 21:36:11,204 [resin-port-8080-29] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 21:36:11,208 [resin-port-8080-29] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 21:36:11,211 [resin-port-8080-29] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 21:36:11,251 [resin-port-8080-29] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 21:36:11,675 [resin-port-8080-29] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 21:36:11,993 [resin-port-8080-29] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 21:36:12,011 [resin-port-8080-29] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 21:36:12,028 [resin-port-8080-29] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 21:36:12,036 [resin-port-8080-29] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 21:36:12,926 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 21:36:12,937 [resin-port-8080-29] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:19:28,706 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:19:28,723 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:19:28,727 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:19:28,730 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:19:28,771 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:19:29,210 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:19:29,317 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:19:29,336 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:19:29,355 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:19:29,363 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:19:29,455 [main] INFO  org.hibernate.validator.internal.util.Version.<clinit>(Version.java:27) - HV000001: Hibernate Validator 4.3.0.Final
2012-11-04 22:19:30,504 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:19:30,515 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:27:27,987 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:27:28,004 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:27:28,008 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:27:28,011 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:27:28,053 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:27:28,498 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:27:28,603 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:27:28,620 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:27:28,639 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:27:28,648 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:27:28,719 [main] INFO  org.hibernate.validator.util.Version.<clinit>(Version.java:24) - Hibernate Validator 4.2.0.Final
2012-11-04 22:27:29,719 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:27:29,731 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:29:41,808 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:29:41,825 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:29:41,828 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:29:41,831 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:29:41,873 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:29:42,318 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:29:42,425 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:29:42,443 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:29:42,462 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:29:42,470 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:29:42,544 [main] INFO  org.hibernate.validator.util.Version.<clinit>(Version.java:24) - Hibernate Validator 4.2.0.Final
2012-11-04 22:29:43,531 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:29:43,542 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:30:52,549 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:30:52,566 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:30:52,570 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:30:52,573 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:30:52,616 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:30:53,059 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:30:53,164 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:30:53,181 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:30:53,199 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:30:53,207 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:30:53,279 [main] INFO  org.hibernate.validator.util.Version.<clinit>(Version.java:24) - Hibernate Validator 4.2.0.Final
2012-11-04 22:30:54,255 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:30:54,267 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:30:54,360 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:35:30,766 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:35:30,783 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:35:30,787 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:35:30,790 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:35:30,832 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:35:31,284 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:35:31,392 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:35:31,411 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:35:31,430 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:35:31,438 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:35:32,363 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:35:32,375 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:35:32,464 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:36:03,078 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:36:03,095 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:36:03,099 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:36:03,102 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:36:03,144 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:36:03,589 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:36:03,695 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:36:03,738 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:36:03,757 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:36:03,765 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:36:04,682 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:36:04,693 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:39:52,628 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:39:52,645 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:39:52,649 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:39:52,652 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:39:52,694 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:39:53,143 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:39:53,249 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:39:53,268 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:39:53,287 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:39:53,296 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:39:54,216 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:39:54,229 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:39:54,319 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:40:58,147 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:40:58,165 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:40:58,168 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:40:58,171 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:40:58,213 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:40:58,659 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:40:58,767 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:40:58,785 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:40:58,805 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:40:58,813 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:40:59,757 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:40:59,771 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:42:02,393 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:42:02,411 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:42:02,415 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:42:02,418 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:42:02,460 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:42:02,905 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:42:03,011 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:42:03,030 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:42:03,049 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:42:03,058 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:42:03,992 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:42:04,006 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:42:04,092 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:43:50,656 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:43:50,673 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:43:50,677 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:43:50,680 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:43:50,723 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:43:51,169 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:43:51,274 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:43:51,295 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:43:51,314 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:43:51,322 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:43:52,240 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:43:52,252 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:51:30,896 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:51:30,913 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:51:30,917 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:51:30,920 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:51:30,962 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:51:31,407 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:51:31,514 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:51:31,532 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:51:31,552 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:51:31,561 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:51:32,478 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:51:32,490 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:57:29,786 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 22:57:29,803 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 22:57:29,806 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 22:57:29,809 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 22:57:29,852 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 22:57:30,294 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 22:57:30,399 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 22:57:30,418 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 22:57:30,437 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 22:57:30,445 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 22:57:31,377 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:57:31,389 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 22:57:31,609 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:14:23,133 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:14:23,150 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:14:23,153 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:14:23,156 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:14:23,198 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:14:23,662 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:14:23,771 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:14:23,789 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:14:23,808 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:14:23,816 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:14:24,756 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:14:37,682 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:14:37,699 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:14:37,703 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:14:37,706 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:14:37,748 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:14:38,187 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:14:38,293 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:14:38,311 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:14:38,330 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:14:38,338 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:14:39,256 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:14:39,934 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:49:40,124 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:49:40,141 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:49:40,145 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:49:40,148 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:49:40,193 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:49:40,654 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:49:40,758 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:49:40,776 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:49:40,798 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:49:40,806 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:49:41,682 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:51:37,889 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:51:37,908 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:51:37,912 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:51:37,915 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:51:37,960 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:51:38,426 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:51:38,535 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:51:38,553 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:51:38,575 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:51:38,583 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:51:39,454 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:51:40,010 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -22, SQLState: S0002
2012-11-04 23:51:40,010 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.SalesOrder_orderCode as SalesOrder1_1_3_, orderline2_.internalId as lines2_3_, orderline2_.internalId as internalId2_0_, orderline2_.item as item2_0_, orderline2_.lineId as lineId2_0_, orderline2_.price as price2_0_ from SalesOrder order0_ left outer join SalesOrder_OrderLine lines1_ on order0_.orderCode=lines1_.SalesOrder_orderCode left outer join OrderLine orderline2_ on lines1_.lines_internalId=orderline2_.internalId where order0_.orderCode=?]
2012-11-04 23:51:40,044 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.SalesOrder_orderCode as SalesOrder1_1_3_, orderline2_.internalId as lines2_3_, orderline2_.internalId as internalId2_0_, orderline2_.item as item2_0_, orderline2_.lineId as lineId2_0_, orderline2_.price as price2_0_ from SalesOrder order0_ left outer join SalesOrder_OrderLine lines1_ on order0_.orderCode=lines1_.SalesOrder_orderCode left outer join OrderLine orderline2_ on lines1_.lines_internalId=orderline2_.internalId where order0_.orderCode=?]
2012-11-04 23:51:40,094 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -22, SQLState: S0002
2012-11-04 23:51:40,094 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.SalesOrder_orderCode as SalesOrder1_1_3_, orderline2_.internalId as lines2_3_, orderline2_.internalId as internalId2_0_, orderline2_.item as item2_0_, orderline2_.lineId as lineId2_0_, orderline2_.price as price2_0_ from SalesOrder order0_ left outer join SalesOrder_OrderLine lines1_ on order0_.orderCode=lines1_.SalesOrder_orderCode left outer join OrderLine orderline2_ on lines1_.lines_internalId=orderline2_.internalId where order0_.orderCode=?]
2012-11-04 23:51:40,096 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.SalesOrder_orderCode as SalesOrder1_1_3_, orderline2_.internalId as lines2_3_, orderline2_.internalId as internalId2_0_, orderline2_.item as item2_0_, orderline2_.lineId as lineId2_0_, orderline2_.price as price2_0_ from SalesOrder order0_ left outer join SalesOrder_OrderLine lines1_ on order0_.orderCode=lines1_.SalesOrder_orderCode left outer join OrderLine orderline2_ on lines1_.lines_internalId=orderline2_.internalId where order0_.orderCode=?]
2012-11-04 23:55:20,226 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:55:20,244 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:55:20,248 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:55:20,251 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:55:20,296 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:55:20,759 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:55:20,867 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:55:20,886 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:55:20,908 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:55:20,916 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:55:21,843 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:55:22,404 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -22, SQLState: S0002
2012-11-04 23:55:22,405 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:55:22,407 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:55:22,429 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -22, SQLState: S0002
2012-11-04 23:55:22,429 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:55:22,431 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:58:53,120 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:58:53,137 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:58:53,141 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:58:53,144 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:58:53,189 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:58:53,676 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:58:53,782 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:58:53,801 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:58:53,823 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:58:53,832 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:58:54,711 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:58:55,293 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -22, SQLState: S0002
2012-11-04 23:58:55,293 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:58:55,295 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:58:55,317 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -22, SQLState: S0002
2012-11-04 23:58:55,318 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:58:55,319 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Table not found in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:59:35,949 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-04 23:59:35,967 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-04 23:59:35,971 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-04 23:59:35,974 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-04 23:59:36,029 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-04 23:59:36,518 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-04 23:59:36,627 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-04 23:59:36,646 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-04 23:59:36,669 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-04 23:59:36,678 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-04 23:59:37,585 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-04 23:59:38,156 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -28, SQLState: S0022
2012-11-04 23:59:38,157 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Column not found: LINES1_.INTERNALID in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:59:38,159 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Column not found: LINES1_.INTERNALID in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:59:38,183 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -28, SQLState: S0022
2012-11-04 23:59:38,184 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Column not found: LINES1_.INTERNALID in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-04 23:59:38,186 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Column not found: LINES1_.INTERNALID in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines5_1_3_, lines1_.internalId as internalId3_, lines1_.internalId as internalId2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:00:28,136 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:00:28,153 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:00:28,157 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:00:28,160 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:00:28,205 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:00:28,669 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:00:28,776 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:00:28,793 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:00:28,815 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:00:28,824 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:00:29,696 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:00:50,197 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:00:50,214 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:00:50,218 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:00:50,221 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:00:50,266 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:00:50,729 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:00:50,835 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:00:50,854 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:00:50,879 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:00:50,887 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:00:51,770 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:02:12,327 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:02:12,344 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:02:12,348 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:02:12,351 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:02:12,397 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:02:12,862 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:02:12,967 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:02:12,987 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:02:13,009 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:02:13,018 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:02:13,907 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:02:22,640 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:02:22,657 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:02:22,661 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:02:22,664 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:02:22,709 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:02:23,176 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:02:23,282 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:02:23,300 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:02:23,322 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:02:23,330 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:02:24,205 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:02:56,884 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:02:56,901 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:02:56,905 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:02:56,908 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:02:56,953 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:02:57,420 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:02:57,527 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:02:57,546 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:02:57,568 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:02:57,577 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:02:58,457 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:44:08,606 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:44:08,624 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:44:08,627 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:44:08,630 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:44:08,676 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:44:09,222 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:44:09,328 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:44:09,346 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:44:09,365 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:44:09,373 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:44:10,246 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE; ''
2012-11-05 00:44:10,276 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:44:10,821 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -28, SQLState: S0022
2012-11-05 00:44:10,822 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Column not found: LINES1_.CURRENCYCODE in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:44:10,825 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Column not found: LINES1_.CURRENCYCODE in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:44:10,848 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -28, SQLState: S0022
2012-11-05 00:44:10,850 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Column not found: LINES1_.CURRENCYCODE in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:44:10,850 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Column not found: LINES1_.CURRENCYCODE in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:44:10,857 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -28, SQLState: S0022
2012-11-05 00:44:10,858 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - Column not found: LINES1_.CURRENCYCODE in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:44:10,859 [main] INFO  org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:157) - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: Column not found: LINES1_.CURRENCYCODE in statement [select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?]
2012-11-05 00:45:17,120 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:45:17,138 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:45:17,142 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:45:17,146 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:45:17,192 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:45:17,699 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:45:17,812 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:45:17,831 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:45:17,850 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:45:17,858 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:45:18,729 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE; ''
2012-11-05 00:45:18,760 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:47:44,448 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:47:44,465 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:47:44,469 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:47:44,472 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:47:44,518 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:47:45,031 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:47:45,138 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:47:45,156 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:47:45,175 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:47:45,183 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:47:46,066 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE; ''
2012-11-05 00:47:46,097 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:47:46,810 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE; ''
2012-11-05 00:49:17,195 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:49:17,212 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:49:17,216 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:49:17,219 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:49:17,265 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:49:17,779 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:49:17,887 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:49:17,906 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:49:17,924 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:49:17,932 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:49:18,826 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:49:18,863 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:49:19,572 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -20, SQLState: IM001
2012-11-05 00:49:19,573 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - This function is not supported
2012-11-05 00:49:58,595 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 00:49:58,612 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 00:49:58,616 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 00:49:58,619 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 00:49:58,665 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-11-05 00:49:59,180 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 00:49:59,286 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 00:49:59,305 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 00:49:59,324 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 00:49:59,332 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 00:50:00,220 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:50:00,256 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:50:00,953 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 00:50:00,964 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -20, SQLState: IM001
2012-11-05 00:50:00,965 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - This function is not supported
2012-11-05 00:59:39,232 [main] ERROR org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:324) - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1c9be00] to prepare test instance [com.emo.acceptances.NewOrderTest@1d91e00]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot create inner bean 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#1016962' of type [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] while setting bean property 'jpaVendorAdapter'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#1016962' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:733)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot create inner bean 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#1016962' of type [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] while setting bean property 'jpaVendorAdapter'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#1016962' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:424)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:277)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.<init>(PersistenceExceptionTranslationInterceptor.java:79)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor.<init>(PersistenceExceptionTranslationAdvisor.java:70)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor.setBeanFactory(PersistenceExceptionTranslationPostProcessor.java:103)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 36 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#1016962' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 54 more
Caused by: java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 56 more
2012-11-05 00:59:39,458 [main] ERROR org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:324) - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1c9be00] to prepare test instance [com.emo.acceptances.NewOrderTest@1d356a0]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot create inner bean 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#69d6be' of type [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] while setting bean property 'jpaVendorAdapter'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#69d6be' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:733)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot create inner bean 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#69d6be' of type [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] while setting bean property 'jpaVendorAdapter'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#69d6be' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:424)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:277)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.<init>(PersistenceExceptionTranslationInterceptor.java:79)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor.<init>(PersistenceExceptionTranslationAdvisor.java:70)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor.setBeanFactory(PersistenceExceptionTranslationPostProcessor.java:103)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 36 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#69d6be' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 54 more
Caused by: java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 56 more
2012-11-05 00:59:39,650 [main] ERROR org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:324) - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1c9be00] to prepare test instance [com.emo.acceptances.NewOrderTest@3f415f]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot create inner bean 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#e30beb' of type [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] while setting bean property 'jpaVendorAdapter'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#e30beb' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:733)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot create inner bean 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#e30beb' of type [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] while setting bean property 'jpaVendorAdapter'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#e30beb' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:281)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:120)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:424)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:277)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.<init>(PersistenceExceptionTranslationInterceptor.java:79)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor.<init>(PersistenceExceptionTranslationAdvisor.java:70)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor.setBeanFactory(PersistenceExceptionTranslationPostProcessor.java:103)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 36 more
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter] for bean with name 'org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter#e30beb' defined in class path resource [applicationContext-sample.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1262)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:433)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:270)
	... 54 more
Caused by: java.lang.ClassNotFoundException: org.springframework.orm.jpa.vendor.Hibernate4JpaVendorAdapter
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:258)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1254)
	... 56 more
2012-11-05 01:03:01,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b66f5d
2012-11-05 01:03:01,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b66f5d
2012-11-05 01:03:01,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b66f5d
2012-11-05 01:03:01,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@b3ae54
2012-11-05 01:03:01,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bc1199
2012-11-05 01:03:01,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@16a45c4
2012-11-05 01:03:01,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@5fdc60
2012-11-05 01:03:01,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@5fdc60
2012-11-05 01:03:01,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fdc60
2012-11-05 01:03:01,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1df663
2012-11-05 01:03:01,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1df663
2012-11-05 01:03:01,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1df663
2012-11-05 01:03:01,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@1d22080
2012-11-05 01:03:01,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@1d22080
2012-11-05 01:03:01,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d22080
2012-11-05 01:03:01,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@1639a4b
2012-11-05 01:03:01,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@1639a4b
2012-11-05 01:03:01,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1639a4b
2012-11-05 01:03:01,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@34bc8a
2012-11-05 01:03:01,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@34bc8a
2012-11-05 01:03:01,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34bc8a
2012-11-05 01:03:01,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@74bd75
2012-11-05 01:03:01,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@74bd75
2012-11-05 01:03:01,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74bd75
2012-11-05 01:03:01,711 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@1bbd50b
2012-11-05 01:03:01,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@1bbd50b
2012-11-05 01:03:01,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bbd50b
2012-11-05 01:03:01,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b2b78
2012-11-05 01:03:01,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b2b78
2012-11-05 01:03:01,719 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b6607a
2012-11-05 01:03:01,719 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b6607a
2012-11-05 01:03:01,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@821bf7
2012-11-05 01:03:01,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@821bf7
2012-11-05 01:03:01,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@1451c3a
2012-11-05 01:03:01,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1451c3a
2012-11-05 01:03:01,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1e0dee5
2012-11-05 01:03:01,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e0dee5
2012-11-05 01:03:01,732 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@c91010
2012-11-05 01:03:01,732 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c91010
2012-11-05 01:03:01,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e86299
2012-11-05 01:03:01,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e86299
2012-11-05 01:03:01,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e86299
2012-11-05 01:03:01,739 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1510d11
2012-11-05 01:03:01,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@b2a5f5
2012-11-05 01:03:01,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b2a5f5
2012-11-05 01:03:01,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b2a5f5
2012-11-05 01:03:01,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1a614
2012-11-05 01:03:01,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@10510c7
2012-11-05 01:03:01,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10510c7
2012-11-05 01:03:01,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@11e5ed9
2012-11-05 01:03:01,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@11e5ed9
2012-11-05 01:03:01,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@f0e58b
2012-11-05 01:03:01,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f0e58b
2012-11-05 01:03:01,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@1f42649
2012-11-05 01:03:01,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f42649
2012-11-05 01:03:01,758 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19b6c59
2012-11-05 01:03:01,759 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19b6c59
2012-11-05 01:03:01,760 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e8b38b
2012-11-05 01:03:01,762 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d9954b
2012-11-05 01:03:01,764 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@1d135b6
2012-11-05 01:03:01,765 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d135b6
2012-11-05 01:03:01,765 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@1d135b6
2012-11-05 01:03:01,767 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@694dca
2012-11-05 01:03:01,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@694dca
2012-11-05 01:03:01,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@694dca
2012-11-05 01:03:01,770 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1a05ea4
2012-11-05 01:03:01,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@a0a1cb
2012-11-05 01:03:01,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@a0a1cb
2012-11-05 01:03:01,774 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@a0a1cb
2012-11-05 01:03:01,777 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@125f54e
2012-11-05 01:03:01,778 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@125f54e
2012-11-05 01:03:01,778 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@125f54e
2012-11-05 01:03:01,781 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@5e96c1
2012-11-05 01:03:01,795 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@13442f1
2012-11-05 01:03:01,796 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13442f1
2012-11-05 01:03:01,797 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d5013f
2012-11-05 01:03:01,805 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@c13917
2012-11-05 01:03:01,805 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c13917
2012-11-05 01:03:01,807 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d0e2d2
2012-11-05 01:03:01,809 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@6fd7d9
2012-11-05 01:03:01,816 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1d899fe
2012-11-05 01:03:01,817 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d899fe
2012-11-05 01:03:01,818 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41d78e
2012-11-05 01:03:01,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@aee743
2012-11-05 01:03:01,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@d0e73c
2012-11-05 01:03:01,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@fd5428
2012-11-05 01:03:01,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1a04b1f
2012-11-05 01:03:01,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@a41a80
2012-11-05 01:03:01,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c7f3e3
2012-11-05 01:03:01,821 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cc63a
2012-11-05 01:03:01,866 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 01:03:01,883 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 01:03:01,887 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 01:03:01,890 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 01:03:01,919 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-05 01:03:01,920 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-05 01:03:01,922 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:01,922 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:01,925 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-05 01:03:01,926 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-05 01:03:01,929 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-05 01:03:01,930 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-05 01:03:01,931 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-05 01:03:01,933 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-05 01:03:01,934 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-05 01:03:01,935 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-05 01:03:01,937 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-05 01:03:01,938 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-05 01:03:01,940 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-05 01:03:01,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b66f5d
2012-11-05 01:03:01,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b66f5d
2012-11-05 01:03:01,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b66f5d
2012-11-05 01:03:01,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@b3ae54
2012-11-05 01:03:01,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@bc1199
2012-11-05 01:03:01,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@16a45c4
2012-11-05 01:03:01,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@5fdc60
2012-11-05 01:03:01,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@5fdc60
2012-11-05 01:03:01,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fdc60
2012-11-05 01:03:01,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1df663
2012-11-05 01:03:01,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1df663
2012-11-05 01:03:01,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1df663
2012-11-05 01:03:01,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@1d22080
2012-11-05 01:03:01,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@1d22080
2012-11-05 01:03:01,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d22080
2012-11-05 01:03:01,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@1639a4b
2012-11-05 01:03:01,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@1639a4b
2012-11-05 01:03:01,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1639a4b
2012-11-05 01:03:01,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@34bc8a
2012-11-05 01:03:01,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@34bc8a
2012-11-05 01:03:01,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34bc8a
2012-11-05 01:03:01,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@74bd75
2012-11-05 01:03:01,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@74bd75
2012-11-05 01:03:01,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74bd75
2012-11-05 01:03:01,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@1bbd50b
2012-11-05 01:03:01,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@1bbd50b
2012-11-05 01:03:01,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bbd50b
2012-11-05 01:03:01,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18b2b78
2012-11-05 01:03:01,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18b2b78
2012-11-05 01:03:01,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b6607a
2012-11-05 01:03:01,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b6607a
2012-11-05 01:03:01,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@821bf7
2012-11-05 01:03:01,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@821bf7
2012-11-05 01:03:01,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@1451c3a
2012-11-05 01:03:01,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1451c3a
2012-11-05 01:03:01,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1e0dee5
2012-11-05 01:03:01,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e0dee5
2012-11-05 01:03:01,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@c91010
2012-11-05 01:03:01,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c91010
2012-11-05 01:03:01,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e86299
2012-11-05 01:03:01,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e86299
2012-11-05 01:03:01,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e86299
2012-11-05 01:03:01,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1510d11
2012-11-05 01:03:01,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@b2a5f5
2012-11-05 01:03:01,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b2a5f5
2012-11-05 01:03:01,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b2a5f5
2012-11-05 01:03:01,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1a614
2012-11-05 01:03:01,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@10510c7
2012-11-05 01:03:01,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10510c7
2012-11-05 01:03:01,962 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@11e5ed9
2012-11-05 01:03:01,962 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@11e5ed9
2012-11-05 01:03:01,962 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@f0e58b
2012-11-05 01:03:01,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@f0e58b
2012-11-05 01:03:01,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@1f42649
2012-11-05 01:03:01,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f42649
2012-11-05 01:03:01,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19b6c59
2012-11-05 01:03:01,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19b6c59
2012-11-05 01:03:01,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e8b38b
2012-11-05 01:03:01,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d9954b
2012-11-05 01:03:01,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@1d135b6
2012-11-05 01:03:01,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d135b6
2012-11-05 01:03:01,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@1d135b6
2012-11-05 01:03:01,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@694dca
2012-11-05 01:03:01,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@694dca
2012-11-05 01:03:01,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@694dca
2012-11-05 01:03:01,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1a05ea4
2012-11-05 01:03:01,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@a0a1cb
2012-11-05 01:03:01,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@a0a1cb
2012-11-05 01:03:01,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@a0a1cb
2012-11-05 01:03:01,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@125f54e
2012-11-05 01:03:01,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@125f54e
2012-11-05 01:03:01,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@125f54e
2012-11-05 01:03:01,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@5e96c1
2012-11-05 01:03:01,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@13442f1
2012-11-05 01:03:01,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13442f1
2012-11-05 01:03:01,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d5013f
2012-11-05 01:03:01,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@c13917
2012-11-05 01:03:01,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c13917
2012-11-05 01:03:01,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d0e2d2
2012-11-05 01:03:01,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@6fd7d9
2012-11-05 01:03:01,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1d899fe
2012-11-05 01:03:01,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d899fe
2012-11-05 01:03:01,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ec072b
2012-11-05 01:03:01,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cac211
2012-11-05 01:03:01,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18b1ab5
2012-11-05 01:03:01,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1868ae6
2012-11-05 01:03:01,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@903d8
2012-11-05 01:03:01,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1db9672
2012-11-05 01:03:01,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1723c3f
2012-11-05 01:03:01,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d18542
2012-11-05 01:03:01,976 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-05 01:03:01,977 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-05 01:03:01,977 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:01,977 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:01,978 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-05 01:03:01,978 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-05 01:03:01,978 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-05 01:03:01,979 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-05 01:03:01,979 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-05 01:03:01,979 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-05 01:03:01,980 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-05 01:03:01,980 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-05 01:03:01,980 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-05 01:03:01,980 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-05 01:03:01,981 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-05 01:03:01,983 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1ff5ea7
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@8af4b4
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@c75ad4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-05 01:03:01,987 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-05 01:03:02,002 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-05 01:03:02,004 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-05 01:03:02,074 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-05 01:03:02,076 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-05 01:03:02,078 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-05 01:03:02,079 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-05 01:03:02,081 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-05 01:03:02,083 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-05 01:03:02,085 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-05 01:03:02,087 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-05 01:03:02,090 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-05 01:03:02,093 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.mains.WebMain
2012-11-05 01:03:02,094 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.CommandUtils
2012-11-05 01:03:02,096 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.EmbeddedServer
2012-11-05 01:03:02,139 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-05 01:03:02,140 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-05 01:03:02,193 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-05 01:03:02,210 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-05 01:03:02,256 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-05 01:03:02,257 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-05 01:03:02,263 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-05 01:03:02,303 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-05 01:03:02,319 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-05 01:03:02,327 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-05 01:03:02,372 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,379 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-05 01:03:02,383 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-05 01:03:02,386 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-05 01:03:02,394 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,394 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-05 01:03:02,395 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-05 01:03:02,395 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-05 01:03:02,396 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,396 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-05 01:03:02,397 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-05 01:03:02,398 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-05 01:03:02,398 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,399 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-05 01:03:02,399 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-05 01:03:02,400 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-05 01:03:02,400 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,401 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-05 01:03:02,401 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-05 01:03:02,401 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-05 01:03:02,402 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,402 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-05 01:03:02,403 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-05 01:03:02,403 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-05 01:03:02,407 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-05 01:03:02,407 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-05 01:03:02,408 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-05 01:03:02,408 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-05 01:03:02,438 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,438 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-05 01:03:02,439 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-05 01:03:02,439 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-05 01:03:02,440 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,440 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-05 01:03:02,440 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-05 01:03:02,441 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-05 01:03:02,442 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-05 01:03:02,443 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,445 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,464 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,465 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,467 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-05 01:03:02,469 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-05 01:03:02,471 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-05 01:03:02,473 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:02,479 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-05 01:03:02,479 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,480 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-05 01:03:02,488 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-05 01:03:02,489 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-05 01:03:02,489 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-05 01:03:02,490 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-05 01:03:02,490 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-05 01:03:02,490 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-05 01:03:02,500 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,501 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-05 01:03:02,502 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-05 01:03:02,502 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-05 01:03:02,503 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,503 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-05 01:03:02,504 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-05 01:03:02,504 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-05 01:03:02,505 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,505 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-05 01:03:02,506 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-05 01:03:02,506 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-05 01:03:02,507 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,514 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,515 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-05 01:03:02,516 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-05 01:03:02,516 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-05 01:03:02,516 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:02,517 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-05 01:03:02,517 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-05 01:03:02,518 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-05 01:03:02,518 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-05 01:03:02,519 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-05 01:03:02,520 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-05 01:03:02,520 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-05 01:03:02,521 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-05 01:03:02,521 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-05 01:03:02,521 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-05 01:03:02,521 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-05 01:03:02,522 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-05 01:03:02,522 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-05 01:03:02,522 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-05 01:03:02,523 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-05 01:03:02,523 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-05 01:03:02,523 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-05 01:03:02,523 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-05 01:03:02,525 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-05 01:03:02,527 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-05 01:03:02,528 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-05 01:03:02,528 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-05 01:03:02,528 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:02,529 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-05 01:03:02,530 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-05 01:03:02,536 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-05 01:03:02,537 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-05 01:03:02,537 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-05 01:03:02,537 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-05 01:03:02,538 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-05 01:03:02,582 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 01:03:02,652 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2012-11-05 01:03:02,652 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2012-11-05 01:03:02,653 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 3.0
2012-11-05 01:03:02,699 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 01:03:02,717 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 01:03:02,739 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-05 01:03:02,740 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-05 01:03:02,740 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-05 01:03:02,740 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-05 01:03:02,741 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-05 01:03:02,741 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-05 01:03:02,741 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): disabled
2012-11-05 01:03:02,742 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-05 01:03:02,742 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 01:03:02,746 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-05 01:03:02,747 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-05 01:03:02,747 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-05 01:03:02,748 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-05 01:03:02,748 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-05 01:03:02,752 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 01:03:02,753 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-05 01:03:02,753 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-05 01:03:02,754 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-05 01:03:02,755 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-05 01:03:02,756 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-05 01:03:02,758 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-05 01:03:02,758 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-05 01:03:02,759 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-05 01:03:02,759 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-05 01:03:02,759 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-05 01:03:02,760 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-05 01:03:02,761 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-05 01:03:02,761 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-05 01:03:02,761 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-05 01:03:02,776 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-05 01:03:02,789 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-05 01:03:02,789 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre7\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre7/bin/client;C:/Program Files/Java/jre7/bin;C:/Program Files/Java/jre7/lib/i386;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;D:\springsource\sts-2.8.1.RELEASE;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@c75ad4, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/418/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/416/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/417/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 56801 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.emo.acceptances.NewOrderTest, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-05 01:03:02,920 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-05 01:03:02,921 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-05 01:03:02,921 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-05 01:03:03,051 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-05 01:03:03,052 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-05 01:03:03,052 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_1_, order_.state as state1_ from SalesOrder order_ where order_.orderCode=?
2012-11-05 01:03:03,053 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-05 01:03:03,053 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-05 01:03:03,053 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-05 01:03:03,058 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-05 01:03:03,059 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-05 01:03:03,059 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city0_, client_.countryCode as countryC3_0_, client_.name as name0_, client_.street as street0_, client_.zip as zip0_ from Client client_ where client_.clientCode=?
2012-11-05 01:03:03,060 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-05 01:03:03,060 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-05 01:03:03,060 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-05 01:03:03,066 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-05 01:03:03,067 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-05 01:03:03,067 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item2_, orderline_.lineId as lineId2_, orderline_.currencyCode as currency4_2_, orderline_.price as price2_ from OrderLine orderline_ where orderline_.id=?
2012-11-05 01:03:03,067 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-05 01:03:03,068 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-05 01:03:03,068 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-05 01:03:03,068 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (null, ?, ?, ?, ?)
2012-11-05 01:03:03,080 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:03,080 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-05 01:03:03,081 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-05 01:03:03,081 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-05 01:03:03,113 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:03,114 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:03,115 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,116 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,116 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,117 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,118 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,119 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,119 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,120 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:03,137 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:03,138 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:03,139 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,140 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,140 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,141 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,141 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,142 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,143 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,143 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,144 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,145 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,146 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,146 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:03,147 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,147 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,148 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,149 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,149 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,150 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,150 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,151 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,152 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,152 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,153 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,154 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:03,160 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:03,163 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@433c6
2012-11-05 01:03:03,164 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: a6b38739-b95d-4628-af84-eeeedbda953a (<unnamed>)
2012-11-05 01:03:03,164 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-05 01:03:03,164 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-05 01:03:03,165 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-05 01:03:03,165 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-05 01:03:03,173 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-05 01:03:03,253 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:55) - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@25c11b
2012-11-05 01:03:03,254 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-05 01:03:03,676 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737836
2012-11-05 01:03:03,687 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737836
2012-11-05 01:03:03,776 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 01:03:03,800 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737838
2012-11-05 01:03:03,801 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737838
2012-11-05 01:03:03,816 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 01:03:04,044 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737840
2012-11-05 01:03:04,048 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,048 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,049 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,049 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,049 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,119 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-05 01:03:04,126 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=44,possibleID=true]
2012-11-05 01:03:04,127 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=50,possibleID=true]
2012-11-05 01:03:04,136 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'x'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'x'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2012-11-05 01:03:04,136 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:04,175 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-05 01:03:04,204 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (x) -> order0_
2012-11-05 01:03:04,218 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x -> order0_.orderCode
2012-11-05 01:03:04,220 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@821bf7
2012-11-05 01:03:04,222 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x.orderCode -> order0_.orderCode
2012-11-05 01:03:04,226 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-05 01:03:04,226 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-05 01:03:04,239 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-05 01:03:04,240 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-05 01:03:04,241 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=x.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=x}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=x, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@821bf7}

2012-11-05 01:03:04,242 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:04,252 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-05 01:03:04,252 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,253 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:04,310 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,371 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,372 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-05 01:03:04,377 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,379 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,379 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,379 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,381 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,382 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,383 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,385 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737843
2012-11-05 01:03:04,385 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,385 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,386 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,386 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,387 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,433 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,439 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:04,446 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,447 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,447 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-05 01:03:04,457 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: af383640-6dee-4484-a5ba-fb114f00c20a, using strategy: org.hibernate.id.Assigned
2012-11-05 01:03:04,486 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,487 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-05 01:03:04,489 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-05 01:03:04,496 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a], was: [<unreferenced>] (initialized)
2012-11-05 01:03:04,499 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-05 01:03:04,500 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-05 01:03:04,502 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-05 01:03:04,503 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=af383640-6dee-4484-a5ba-fb114f00c20a, state=NEW, lines=[], forCustomerCode=79b123b6-8f2a-4e0e-be1e-bd638e571cb9}
2012-11-05 01:03:04,518 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-05 01:03:04,521 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,521 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-05 01:03:04,524 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,524 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,525 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-05 01:03:04,525 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,525 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,526 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,528 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737845
2012-11-05 01:03:04,534 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:04,536 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.order.Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:04,537 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=51,possibleID=true]
2012-11-05 01:03:04,538 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=57,possibleID=true]
2012-11-05 01:03:04,542 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-05 01:03:04,542 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:04,543 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-05 01:03:04,544 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (generatedAlias0) -> order0_
2012-11-05 01:03:04,545 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> order0_.orderCode
2012-11-05 01:03:04,545 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> order0_.orderCode
2012-11-05 01:03:04,546 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@821bf7
2012-11-05 01:03:04,546 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.orderCode -> order0_.orderCode
2012-11-05 01:03:04,547 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-05 01:03:04,547 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} order0_.orderCode ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-05 01:03:04,550 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-05 01:03:04,550 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-05 01:03:04,551 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode as orderCode1_' {alias=generatedAlias0, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=generatedAlias0.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=generatedAlias0, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@821bf7}

2012-11-05 01:03:04,552 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:04,552 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.order.Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:04,553 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,553 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:04,566 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,566 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,567 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,568 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,570 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,573 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,574 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,575 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,577 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,578 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:04,579 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,580 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,581 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,582 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,582 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-05 01:03:04,582 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,583 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,583 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,590 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737845
2012-11-05 01:03:04,591 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,591 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,591 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,591 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,592 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,592 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:04,593 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,594 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,595 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,596 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,596 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,596 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,597 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,598 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:04,598 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,599 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,599 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#af383640-6dee-4484-a5ba-fb114f00c20a]
2012-11-05 01:03:04,600 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,600 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-05 01:03:04,601 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,601 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-05 01:03:04,606 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-05 01:03:04,615 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - This function is not supported [n/a]
java.sql.SQLException: This function is not supported
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.notSupported(Unknown Source)
	at org.hsqldb.jdbc.jdbcConnection.prepareStatement(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy39.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$2.doPrepare(StatementPreparerImpl.java:105)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:103)
	at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:55)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2765)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3276)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:362)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:203)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:183)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:167)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:320)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:126)
	at org.hibernate.ejb.event.EJB3PersistEventListener.saveWithGeneratedId(EJB3PersistEventListener.java:78)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:208)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:151)
	at org.hibernate.internal.SessionImpl.firePersistOnFlush(SessionImpl.java:783)
	at org.hibernate.internal.SessionImpl.persistOnFlush(SessionImpl.java:776)
	at org.hibernate.engine.spi.CascadingAction$8.cascade(CascadingAction.java:347)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:380)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:323)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:208)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:409)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:350)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:326)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:208)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:160)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:151)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:88)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1127)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:325)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.beforeTransactionCommit(JdbcTransaction.java:101)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:175)
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:73)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:512)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:754)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:723)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:394)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:120)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy35.handle(Unknown Source)
	at com.emo.skeleton.framework.CommandDispatcher.processCommands(CommandDispatcher.java:39)
	at com.emo.acceptances.NewOrderTest.holdLines(NewOrderTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2012-11-05 01:03:04,620 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -20, SQLState: IM001
2012-11-05 01:03:04,620 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - This function is not supported
2012-11-05 01:03:04,623 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-05 01:03:04,623 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-05 01:03:04,624 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-05 01:03:04,624 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,633 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,633 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,633 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,645 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737846
2012-11-05 01:03:04,646 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,646 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,647 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,647 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,647 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,648 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,649 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,650 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-05 01:03:04,650 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,651 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,651 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,651 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,651 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,652 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,652 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,652 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737846
2012-11-05 01:03:04,653 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,653 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,653 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,654 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,654 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,654 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,655 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:04,656 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,657 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,657 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-05 01:03:04,657 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 6952aa11-1e46-4786-bd6b-b52c347810d6, using strategy: org.hibernate.id.Assigned
2012-11-05 01:03:04,658 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,659 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-05 01:03:04,659 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-05 01:03:04,660 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#6952aa11-1e46-4786-bd6b-b52c347810d6], was: [<unreferenced>] (initialized)
2012-11-05 01:03:04,660 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-05 01:03:04,660 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-05 01:03:04,661 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-05 01:03:04,661 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=6952aa11-1e46-4786-bd6b-b52c347810d6, state=NEW, lines=[], forCustomerCode=79b123b6-8f2a-4e0e-be1e-bd638e571cb9}
2012-11-05 01:03:04,662 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-05 01:03:04,663 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,663 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-05 01:03:04,663 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,664 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,664 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-05 01:03:04,664 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,678 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,678 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,679 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737846
2012-11-05 01:03:04,680 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:04,680 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,681 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,681 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,682 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,683 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,683 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,684 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,684 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,684 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,685 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:04,686 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,686 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,687 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#6952aa11-1e46-4786-bd6b-b52c347810d6]
2012-11-05 01:03:04,687 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,688 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-05 01:03:04,688 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,688 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,689 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,690 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737846
2012-11-05 01:03:04,691 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,691 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,691 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,691 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,692 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,693 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,694 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,695 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-05 01:03:04,695 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,696 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,696 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,696 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,696 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,697 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,697 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,698 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737846
2012-11-05 01:03:04,698 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,698 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,699 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,699 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,699 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,700 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#3eebad6a-5172-4ca3-bbf1-d1fe6b693f6a]
2012-11-05 01:03:04,701 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:04,702 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:04,703 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,703 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-05 01:03:04,703 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 3eebad6a-5172-4ca3-bbf1-d1fe6b693f6a, using strategy: org.hibernate.id.Assigned
2012-11-05 01:03:04,704 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,704 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-05 01:03:04,705 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-05 01:03:04,705 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#3eebad6a-5172-4ca3-bbf1-d1fe6b693f6a], was: [<unreferenced>] (initialized)
2012-11-05 01:03:04,705 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-05 01:03:04,706 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-05 01:03:04,706 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-05 01:03:04,706 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=3eebad6a-5172-4ca3-bbf1-d1fe6b693f6a, state=NEW, lines=[], forCustomerCode=79b123b6-8f2a-4e0e-be1e-bd638e571cb9}
2012-11-05 01:03:04,707 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-05 01:03:04,708 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#3eebad6a-5172-4ca3-bbf1-d1fe6b693f6a]
2012-11-05 01:03:04,708 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-05 01:03:04,708 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,709 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,709 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-05 01:03:04,709 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,709 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,710 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,710 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737847
2012-11-05 01:03:04,711 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:04,711 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:04,711 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:04,712 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:04,712 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:04,713 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:04,716 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:04,716 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-05 01:03:04,717 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:04,717 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:04,717 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:04,718 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:04,718 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:04,718 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:04,718 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:04,727 [Thread-1] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-05 01:03:04,728 [Thread-1] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-05 01:03:11,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@1dbfb7a
2012-11-05 01:03:11,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@1dbfb7a
2012-11-05 01:03:11,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1dbfb7a
2012-11-05 01:03:11,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58560
2012-11-05 01:03:11,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@58eeec
2012-11-05 01:03:11,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@60302e
2012-11-05 01:03:11,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@f0cae7
2012-11-05 01:03:11,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@f0cae7
2012-11-05 01:03:11,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f0cae7
2012-11-05 01:03:11,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1244a6
2012-11-05 01:03:11,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1244a6
2012-11-05 01:03:11,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1244a6
2012-11-05 01:03:11,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@21043b
2012-11-05 01:03:11,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@21043b
2012-11-05 01:03:11,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21043b
2012-11-05 01:03:11,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@5883fc
2012-11-05 01:03:11,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@5883fc
2012-11-05 01:03:11,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5883fc
2012-11-05 01:03:11,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@4a1425
2012-11-05 01:03:11,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@4a1425
2012-11-05 01:03:11,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a1425
2012-11-05 01:03:11,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1687e27
2012-11-05 01:03:11,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1687e27
2012-11-05 01:03:11,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1687e27
2012-11-05 01:03:11,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@10472ac
2012-11-05 01:03:11,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@10472ac
2012-11-05 01:03:11,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10472ac
2012-11-05 01:03:11,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a95192
2012-11-05 01:03:11,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a95192
2012-11-05 01:03:11,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10a7f17
2012-11-05 01:03:11,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10a7f17
2012-11-05 01:03:11,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@bc0279
2012-11-05 01:03:11,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@bc0279
2012-11-05 01:03:11,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@55ecab
2012-11-05 01:03:11,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55ecab
2012-11-05 01:03:11,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@11deaee
2012-11-05 01:03:11,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11deaee
2012-11-05 01:03:11,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1eaee49
2012-11-05 01:03:11,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1eaee49
2012-11-05 01:03:11,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@aa6bfd
2012-11-05 01:03:11,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@aa6bfd
2012-11-05 01:03:11,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@aa6bfd
2012-11-05 01:03:11,688 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@561369
2012-11-05 01:03:11,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@1114668
2012-11-05 01:03:11,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1114668
2012-11-05 01:03:11,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1114668
2012-11-05 01:03:11,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12d9a56
2012-11-05 01:03:11,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@19c4c8e
2012-11-05 01:03:11,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19c4c8e
2012-11-05 01:03:11,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@3b9b12
2012-11-05 01:03:11,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b9b12
2012-11-05 01:03:11,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@eb691
2012-11-05 01:03:11,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@eb691
2012-11-05 01:03:11,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@f3c353
2012-11-05 01:03:11,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f3c353
2012-11-05 01:03:11,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@155bfb7
2012-11-05 01:03:11,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@155bfb7
2012-11-05 01:03:11,709 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d8835d
2012-11-05 01:03:11,711 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d1a5ea
2012-11-05 01:03:11,713 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@c2ffbc
2012-11-05 01:03:11,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@c2ffbc
2012-11-05 01:03:11,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@c2ffbc
2012-11-05 01:03:11,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@179f7d7
2012-11-05 01:03:11,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@179f7d7
2012-11-05 01:03:11,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@179f7d7
2012-11-05 01:03:11,719 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@119e2c1
2012-11-05 01:03:11,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1e3b325
2012-11-05 01:03:11,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e3b325
2012-11-05 01:03:11,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1e3b325
2012-11-05 01:03:11,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f8989d
2012-11-05 01:03:11,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f8989d
2012-11-05 01:03:11,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f8989d
2012-11-05 01:03:11,731 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@b1e15c
2012-11-05 01:03:11,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@fd2c69
2012-11-05 01:03:11,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fd2c69
2012-11-05 01:03:11,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4fce76
2012-11-05 01:03:11,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@165b2e4
2012-11-05 01:03:11,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@165b2e4
2012-11-05 01:03:11,756 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@14003fc
2012-11-05 01:03:11,758 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@da7ebb
2012-11-05 01:03:11,764 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1a04b1f
2012-11-05 01:03:11,764 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a04b1f
2012-11-05 01:03:11,766 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@173b35c
2012-11-05 01:03:11,767 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1046e2c
2012-11-05 01:03:11,767 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dd24de
2012-11-05 01:03:11,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19fa017
2012-11-05 01:03:11,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c77b27
2012-11-05 01:03:11,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@664e41
2012-11-05 01:03:11,769 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@9b91b5
2012-11-05 01:03:11,769 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17b3de2
2012-11-05 01:03:11,810 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-05 01:03:11,824 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-05 01:03:11,828 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-05 01:03:11,831 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-05 01:03:11,859 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-05 01:03:11,860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-05 01:03:11,862 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:11,862 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:11,865 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-05 01:03:11,866 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-05 01:03:11,868 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-05 01:03:11,870 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-05 01:03:11,871 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-05 01:03:11,872 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-05 01:03:11,874 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-05 01:03:11,875 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-05 01:03:11,876 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-05 01:03:11,878 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-05 01:03:11,880 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-05 01:03:11,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@1dbfb7a
2012-11-05 01:03:11,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@1dbfb7a
2012-11-05 01:03:11,886 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1dbfb7a
2012-11-05 01:03:11,886 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58560
2012-11-05 01:03:11,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@58eeec
2012-11-05 01:03:11,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@60302e
2012-11-05 01:03:11,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@f0cae7
2012-11-05 01:03:11,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@f0cae7
2012-11-05 01:03:11,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f0cae7
2012-11-05 01:03:11,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1244a6
2012-11-05 01:03:11,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1244a6
2012-11-05 01:03:11,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1244a6
2012-11-05 01:03:11,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@21043b
2012-11-05 01:03:11,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@21043b
2012-11-05 01:03:11,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21043b
2012-11-05 01:03:11,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@5883fc
2012-11-05 01:03:11,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@5883fc
2012-11-05 01:03:11,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5883fc
2012-11-05 01:03:11,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@4a1425
2012-11-05 01:03:11,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@4a1425
2012-11-05 01:03:11,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a1425
2012-11-05 01:03:11,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1687e27
2012-11-05 01:03:11,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1687e27
2012-11-05 01:03:11,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1687e27
2012-11-05 01:03:11,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@10472ac
2012-11-05 01:03:11,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@10472ac
2012-11-05 01:03:11,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10472ac
2012-11-05 01:03:11,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a95192
2012-11-05 01:03:11,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a95192
2012-11-05 01:03:11,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10a7f17
2012-11-05 01:03:11,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10a7f17
2012-11-05 01:03:11,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@bc0279
2012-11-05 01:03:11,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@bc0279
2012-11-05 01:03:11,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@55ecab
2012-11-05 01:03:11,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55ecab
2012-11-05 01:03:11,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@11deaee
2012-11-05 01:03:11,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@11deaee
2012-11-05 01:03:11,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1eaee49
2012-11-05 01:03:11,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1eaee49
2012-11-05 01:03:11,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@aa6bfd
2012-11-05 01:03:11,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@aa6bfd
2012-11-05 01:03:11,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@aa6bfd
2012-11-05 01:03:11,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@561369
2012-11-05 01:03:11,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@1114668
2012-11-05 01:03:11,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1114668
2012-11-05 01:03:11,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1114668
2012-11-05 01:03:11,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12d9a56
2012-11-05 01:03:11,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@19c4c8e
2012-11-05 01:03:11,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@19c4c8e
2012-11-05 01:03:11,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@3b9b12
2012-11-05 01:03:11,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b9b12
2012-11-05 01:03:11,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@eb691
2012-11-05 01:03:11,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@eb691
2012-11-05 01:03:11,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@f3c353
2012-11-05 01:03:11,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f3c353
2012-11-05 01:03:11,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@155bfb7
2012-11-05 01:03:11,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@155bfb7
2012-11-05 01:03:11,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d8835d
2012-11-05 01:03:11,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d1a5ea
2012-11-05 01:03:11,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@c2ffbc
2012-11-05 01:03:11,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@c2ffbc
2012-11-05 01:03:11,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@c2ffbc
2012-11-05 01:03:11,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@179f7d7
2012-11-05 01:03:11,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@179f7d7
2012-11-05 01:03:11,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@179f7d7
2012-11-05 01:03:11,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@119e2c1
2012-11-05 01:03:11,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1e3b325
2012-11-05 01:03:11,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1e3b325
2012-11-05 01:03:11,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1e3b325
2012-11-05 01:03:11,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f8989d
2012-11-05 01:03:11,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f8989d
2012-11-05 01:03:11,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f8989d
2012-11-05 01:03:11,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@b1e15c
2012-11-05 01:03:11,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@fd2c69
2012-11-05 01:03:11,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@fd2c69
2012-11-05 01:03:11,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4fce76
2012-11-05 01:03:11,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@165b2e4
2012-11-05 01:03:11,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@165b2e4
2012-11-05 01:03:11,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@14003fc
2012-11-05 01:03:11,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@da7ebb
2012-11-05 01:03:11,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1a04b1f
2012-11-05 01:03:11,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a04b1f
2012-11-05 01:03:11,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@179290f
2012-11-05 01:03:11,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@176d1fc
2012-11-05 01:03:11,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d41d12
2012-11-05 01:03:11,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c094f6
2012-11-05 01:03:11,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@173d72d
2012-11-05 01:03:11,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34037e
2012-11-05 01:03:11,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d16e55
2012-11-05 01:03:11,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1a291f2
2012-11-05 01:03:11,920 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-05 01:03:11,920 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-05 01:03:11,921 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:11,921 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-05 01:03:11,922 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-05 01:03:11,922 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-05 01:03:11,923 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-05 01:03:11,923 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-05 01:03:11,923 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-05 01:03:11,924 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-05 01:03:11,924 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-05 01:03:11,924 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-05 01:03:11,924 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-05 01:03:11,925 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-05 01:03:11,925 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-05 01:03:11,928 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@e80a59
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4f51e8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@18a7440
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-05 01:03:11,932 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-05 01:03:11,946 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-05 01:03:11,948 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-05 01:03:12,018 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-05 01:03:12,019 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-05 01:03:12,021 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-05 01:03:12,023 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-05 01:03:12,024 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-05 01:03:12,026 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-05 01:03:12,028 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-05 01:03:12,029 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-05 01:03:12,030 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-05 01:03:12,033 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.mains.WebMain
2012-11-05 01:03:12,034 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.CommandUtils
2012-11-05 01:03:12,035 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.EmbeddedServer
2012-11-05 01:03:12,077 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-05 01:03:12,078 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-05 01:03:12,122 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-05 01:03:12,138 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-05 01:03:12,185 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-05 01:03:12,185 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-05 01:03:12,192 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-05 01:03:12,231 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-05 01:03:12,245 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-05 01:03:12,253 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-05 01:03:12,297 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,303 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-05 01:03:12,308 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-05 01:03:12,311 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-05 01:03:12,318 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,319 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-05 01:03:12,319 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-05 01:03:12,319 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-05 01:03:12,320 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,320 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-05 01:03:12,321 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-05 01:03:12,322 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-05 01:03:12,322 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,323 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-05 01:03:12,323 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-05 01:03:12,323 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-05 01:03:12,324 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,324 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-05 01:03:12,325 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-05 01:03:12,325 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-05 01:03:12,326 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,326 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-05 01:03:12,327 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-05 01:03:12,327 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-05 01:03:12,330 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-05 01:03:12,330 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-05 01:03:12,331 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-05 01:03:12,331 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-05 01:03:12,359 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,359 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-05 01:03:12,360 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-05 01:03:12,360 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-05 01:03:12,361 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,362 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-05 01:03:12,362 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-05 01:03:12,362 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-05 01:03:12,364 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-05 01:03:12,364 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,366 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,386 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,388 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,390 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-05 01:03:12,392 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-05 01:03:12,393 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-05 01:03:12,394 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:12,399 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-05 01:03:12,400 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,400 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-05 01:03:12,408 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-05 01:03:12,408 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-05 01:03:12,409 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-05 01:03:12,409 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-05 01:03:12,410 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-05 01:03:12,410 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-05 01:03:12,417 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,418 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-05 01:03:12,418 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-05 01:03:12,419 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-05 01:03:12,419 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,420 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-05 01:03:12,420 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-05 01:03:12,421 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-05 01:03:12,421 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,421 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-05 01:03:12,422 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-05 01:03:12,422 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-05 01:03:12,423 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,427 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,428 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-05 01:03:12,429 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-05 01:03:12,429 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-05 01:03:12,430 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-05 01:03:12,431 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-05 01:03:12,431 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-05 01:03:12,431 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-05 01:03:12,432 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-05 01:03:12,433 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-05 01:03:12,434 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-05 01:03:12,434 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-05 01:03:12,434 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-05 01:03:12,435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-05 01:03:12,435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-05 01:03:12,435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-05 01:03:12,436 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-05 01:03:12,436 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-05 01:03:12,436 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-05 01:03:12,437 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-05 01:03:12,437 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-05 01:03:12,437 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-05 01:03:12,437 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-05 01:03:12,439 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-05 01:03:12,441 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-05 01:03:12,441 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-05 01:03:12,441 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-05 01:03:12,442 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:12,442 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-05 01:03:12,444 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-05 01:03:12,449 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-05 01:03:12,450 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-05 01:03:12,450 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-05 01:03:12,450 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-05 01:03:12,451 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-05 01:03:12,496 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-05 01:03:12,560 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2012-11-05 01:03:12,561 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2012-11-05 01:03:12,561 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 3.0
2012-11-05 01:03:12,608 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-05 01:03:12,627 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-11-05 01:03:12,649 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-05 01:03:12,650 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-05 01:03:12,650 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-05 01:03:12,650 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-05 01:03:12,651 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-05 01:03:12,651 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-05 01:03:12,651 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): disabled
2012-11-05 01:03:12,652 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-05 01:03:12,652 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-05 01:03:12,657 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-05 01:03:12,657 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-05 01:03:12,658 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-05 01:03:12,658 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-05 01:03:12,658 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-05 01:03:12,662 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-05 01:03:12,663 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-05 01:03:12,663 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-05 01:03:12,663 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-05 01:03:12,664 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-05 01:03:12,664 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-05 01:03:12,666 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-05 01:03:12,666 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-05 01:03:12,667 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-05 01:03:12,667 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-05 01:03:12,667 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-05 01:03:12,668 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-05 01:03:12,668 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-05 01:03:12,668 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-05 01:03:12,669 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-05 01:03:12,683 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-05 01:03:12,696 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-05 01:03:12,696 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre7\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre7/bin/client;C:/Program Files/Java/jre7/bin;C:/Program Files/Java/jre7/lib/i386;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;D:\springsource\sts-2.8.1.RELEASE;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@18a7440, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/418/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/416/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/417/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 56803 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.emo.acceptances.NewOrderTest:holdLines, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-05 01:03:12,824 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-05 01:03:12,825 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-05 01:03:12,826 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-05 01:03:12,954 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-05 01:03:12,955 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-05 01:03:12,955 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_1_, order_.state as state1_ from SalesOrder order_ where order_.orderCode=?
2012-11-05 01:03:12,956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-05 01:03:12,956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-05 01:03:12,956 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-05 01:03:12,962 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-05 01:03:12,962 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-05 01:03:12,963 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city0_, client_.countryCode as countryC3_0_, client_.name as name0_, client_.street as street0_, client_.zip as zip0_ from Client client_ where client_.clientCode=?
2012-11-05 01:03:12,963 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-05 01:03:12,964 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-05 01:03:12,965 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-05 01:03:12,970 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-05 01:03:12,971 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-05 01:03:12,971 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item2_, orderline_.lineId as lineId2_, orderline_.currencyCode as currency4_2_, orderline_.price as price2_ from OrderLine orderline_ where orderline_.id=?
2012-11-05 01:03:12,972 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-05 01:03:12,972 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-05 01:03:12,973 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-05 01:03:12,973 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (null, ?, ?, ?, ?)
2012-11-05 01:03:12,985 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:12,985 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-05 01:03:12,986 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-05 01:03:12,986 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-05 01:03:13,018 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:13,019 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:13,020 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,021 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,021 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,022 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,023 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,024 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,024 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,025 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:13,041 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:13,042 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:13,042 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,043 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,044 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,044 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,045 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,045 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,046 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,047 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,047 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,048 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,048 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,049 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-05 01:03:13,050 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,050 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,051 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,051 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,052 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,053 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,053 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,054 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,055 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,056 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,057 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,061 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-05 01:03:13,068 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:13,072 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d60df3
2012-11-05 01:03:13,072 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: 2e000a67-ae92-4be3-8f84-8a26168b0bd7 (<unnamed>)
2012-11-05 01:03:13,073 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-05 01:03:13,073 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-05 01:03:13,073 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-05 01:03:13,074 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-05 01:03:13,082 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-05 01:03:13,152 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:55) - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@7622b3
2012-11-05 01:03:13,153 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-05 01:03:13,496 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737934
2012-11-05 01:03:13,506 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737935
2012-11-05 01:03:13,595 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 01:03:13,617 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737936
2012-11-05 01:03:13,618 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737936
2012-11-05 01:03:13,633 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-05 01:03:13,849 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737938
2012-11-05 01:03:13,853 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:13,853 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:13,854 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:13,854 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:13,855 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:13,923 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-05 01:03:13,930 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=44,possibleID=true]
2012-11-05 01:03:13,930 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=50,possibleID=true]
2012-11-05 01:03:13,939 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'x'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'x'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2012-11-05 01:03:13,940 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:13,979 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-05 01:03:14,007 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (x) -> order0_
2012-11-05 01:03:14,019 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x -> order0_.orderCode
2012-11-05 01:03:14,021 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@bc0279
2012-11-05 01:03:14,023 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x.orderCode -> order0_.orderCode
2012-11-05 01:03:14,027 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-05 01:03:14,027 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-05 01:03:14,039 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-05 01:03:14,040 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-05 01:03:14,041 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=x.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=x}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=x, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@bc0279}

2012-11-05 01:03:14,042 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:14,052 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-05 01:03:14,053 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:14,053 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:14,110 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:14,163 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:14,164 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-05 01:03:14,169 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:14,170 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:14,171 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:14,171 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:14,173 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:14,174 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:14,175 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:14,176 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737941
2012-11-05 01:03:14,177 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:14,177 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:14,177 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:14,178 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:14,178 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:14,195 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,196 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-05 01:03:14,203 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:14,203 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:14,204 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-05 01:03:14,214 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 60554e4b-cd96-4299-8caf-67ab227f7523, using strategy: org.hibernate.id.Assigned
2012-11-05 01:03:14,241 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:14,242 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-05 01:03:14,244 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-05 01:03:14,250 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523], was: [<unreferenced>] (initialized)
2012-11-05 01:03:14,253 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-05 01:03:14,254 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-05 01:03:14,256 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-05 01:03:14,257 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=60554e4b-cd96-4299-8caf-67ab227f7523, state=NEW, lines=[], forCustomerCode=a929e922-317f-4485-9097-a0122bc7fb37}
2012-11-05 01:03:14,274 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-05 01:03:14,277 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,277 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-05 01:03:14,279 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-05 01:03:14,279 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:14,280 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-05 01:03:14,280 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:14,280 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:14,280 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:14,283 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737942
2012-11-05 01:03:14,289 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:14,291 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.order.Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:14,292 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=51,possibleID=true]
2012-11-05 01:03:14,293 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=57,possibleID=true]
2012-11-05 01:03:14,297 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-05 01:03:14,297 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:14,298 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-05 01:03:14,298 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (generatedAlias0) -> order0_
2012-11-05 01:03:14,299 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> order0_.orderCode
2012-11-05 01:03:14,300 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> order0_.orderCode
2012-11-05 01:03:14,300 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@bc0279
2012-11-05 01:03:14,301 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.orderCode -> order0_.orderCode
2012-11-05 01:03:14,301 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-05 01:03:14,302 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} order0_.orderCode ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-05 01:03:14,304 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-05 01:03:14,305 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-05 01:03:14,306 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode as orderCode1_' {alias=generatedAlias0, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
    |  \-[SQL_TOKEN] SqlFragment: 'order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=generatedAlias0.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=generatedAlias0, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@bc0279}

2012-11-05 01:03:14,306 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:14,307 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.order.Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:14,307 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:14,307 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-05 01:03:14,324 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:14,325 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:14,325 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:14,326 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:14,328 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,331 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,332 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,333 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:14,335 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,336 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:14,336 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,338 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:14,339 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,339 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:14,339 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-05 01:03:14,340 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:14,340 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:14,340 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:14,348 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13520737943
2012-11-05 01:03:14,348 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-05 01:03:14,349 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-05 01:03:14,349 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-05 01:03:14,349 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-05 01:03:14,349 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-05 01:03:14,351 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-05 01:03:14,359 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select top ? order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-05 01:03:14,360 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-05 01:03:14,361 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,361 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,362 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,362 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-05 01:03:14,363 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,363 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-05 01:03:14,364 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,365 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:14,365 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#60554e4b-cd96-4299-8caf-67ab227f7523]
2012-11-05 01:03:14,366 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-05 01:03:14,366 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-05 01:03:14,367 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-05 01:03:14,367 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-05 01:03:14,376 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-05 01:03:14,381 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - This function is not supported [n/a]
java.sql.SQLException: This function is not supported
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.notSupported(Unknown Source)
	at org.hsqldb.jdbc.jdbcConnection.prepareStatement(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy39.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$2.doPrepare(StatementPreparerImpl.java:105)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareStatement(StatementPreparerImpl.java:103)
	at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:55)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2765)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3276)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:362)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:203)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:183)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:167)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:320)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:126)
	at org.hibernate.ejb.event.EJB3PersistEventListener.saveWithGeneratedId(EJB3PersistEventListener.java:78)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:208)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:151)
	at org.hibernate.internal.SessionImpl.firePersistOnFlush(SessionImpl.java:783)
	at org.hibernate.internal.SessionImpl.persistOnFlush(SessionImpl.java:776)
	at org.hibernate.engine.spi.CascadingAction$8.cascade(CascadingAction.java:347)
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:380)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:323)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:208)
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:409)
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:350)
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:326)
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:208)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:160)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:151)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:88)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:51)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1127)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:325)
	at org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.beforeTransactionCommit(JdbcTransaction.java:101)
	at org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:175)
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:73)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:512)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:754)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:723)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:394)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:120)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy35.handle(Unknown Source)
	at com.emo.skeleton.framework.CommandDispatcher.processCommands(CommandDispatcher.java:39)
	at com.emo.acceptances.NewOrderTest.holdLines(NewOrderTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2012-11-05 01:03:14,385 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -20, SQLState: IM001
2012-11-05 01:03:14,385 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - This function is not supported
2012-11-05 01:03:14,388 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-05 01:03:14,388 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-05 01:03:14,388 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-05 01:03:14,388 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-05 01:03:14,397 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-05 01:03:14,397 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-05 01:03:14,397 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-05 01:03:14,412 [Thread-1] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-05 01:03:14,413 [Thread-1] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-05 01:07:20,421 [main] ERROR org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:324) - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1959622] to prepare test instance [com.emo.acceptances.NewOrderTest@1b3bd0d]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource': Invocation of init method failed; nested exception is org.springframework.dao.DataAccessResourceFailureException: Failed to execute database script; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement at line 4 of resource class path resource [sample/jpa/config/schema.sql]: /*Tables*/
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:527)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:733)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:454)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-sample.xml]: Cannot resolve reference to bean 'dataSource' while setting bean property 'dataSource'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource': Invocation of init method failed; nested exception is org.springframework.dao.DataAccessResourceFailureException: Failed to execute database script; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement at line 4 of resource class path resource [sample/jpa/config/schema.sql]: /*Tables*/
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:328)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:106)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1360)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1118)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:424)
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:277)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.<init>(PersistenceExceptionTranslationInterceptor.java:79)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor.<init>(PersistenceExceptionTranslationAdvisor.java:70)
	at org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor.setBeanFactory(PersistenceExceptionTranslationPostProcessor.java:103)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1475)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	... 36 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource': Invocation of init method failed; nested exception is org.springframework.dao.DataAccessResourceFailureException: Failed to execute database script; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement at line 4 of resource class path resource [sample/jpa/config/schema.sql]: /*Tables*/
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:322)
	... 54 more
Caused by: org.springframework.dao.DataAccessResourceFailureException: Failed to execute database script; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement at line 4 of resource class path resource [sample/jpa/config/schema.sql]: /*Tables*/
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:56)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:136)
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean.afterPropertiesSet(EmbeddedDatabaseFactoryBean.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 61 more
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement at line 4 of resource class path resource [sample/jpa/config/schema.sql]: /*Tables*/
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:199)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:132)
	at org.springframework.jdbc.datasource.init.CompositeDatabasePopulator.populate(CompositeDatabasePopulator.java:55)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:47)
	... 65 more
Caused by: java.sql.SQLSyntaxErrorException: unexpected end of statement
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCStatement.fetchResult(Unknown Source)
	at org.hsqldb.jdbc.JDBCStatement.execute(Unknown Source)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:184)
	... 68 more
Caused by: org.hsqldb.HsqlException: unexpected end of statement
	at org.hsqldb.error.Error.parseError(Unknown Source)
	at org.hsqldb.ParserBase.unexpectedToken(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatements(Unknown Source)
	at org.hsqldb.Session.executeDirectStatement(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 71 more
2012-11-05 01:08:32,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@644784
2012-11-05 01:08:32,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@644784
2012-11-05 01:08:32,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@644784
2012-11-05 01:08:32,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e46f11
2012-11-05 01:08:32,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@245558
2012-11-05 01:08:32,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@b0237c
2012-11-05 01:08:32,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1ad9b63
2012-11-05 01:08:32,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1ad9b63
2012-11-05 01:08:32,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1ad9b63
2012-11-05 01:08:32,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@c5d468
2012-11-05 01:08:32,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@c5d468
2012-11-05 01:08:32,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c5d468
2012-11-05 01:08:32,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@8a3930
2012-11-05 01:08:32,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@8a3930
2012-11-05 01:08:32,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8a3930
2012-11-05 01:08:32,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@15e780a
2012-11-05 01:08:32,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@15e780a
2012-11-05 01:08:32,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15e780a
2012-11-05 01:08:32,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@6418d9
2012-11-05 01:08:32,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@6418d9
2012-11-05 01:08:32,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6418d9
2012-11-05 01:08:32,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@719ebf
2012-11-05 01:08:32,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@719ebf
2012-11-05 01:08:32,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@719ebf
2012-11-05 01:08:32,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@16103e5
2012-11-05 01:08:32,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@16103e5
2012-11-05 01:08:32,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16103e5
2012-11-05 01:08:32,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ae93c5
2012-11-05 01:08:32,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ae93c5
2012-11-05 01:08:32,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@a69b6c
2012-11-05 01:08:32,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@a69b6c
2012-11-05 01:08:32,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@4a25ab
2012-11-05 01:08:32,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a25ab
2012-11-05 01:08:32,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@19e7258
2012-11-05 01:08:32,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@19e7258
2012-11-05 01:08:32,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@86411
2012-11-05 01:08:32,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@86411
2012-11-05 01:08:32,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@e2b11f
2012-11-05 01:08:32,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e2b11f
2012-11-05 01:08:32,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@ec621e
2012-11-05 01:08:32,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ec621e
2012-11-05 01:08:32,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ec621e
2012-11-05 01:08:32,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@106aa39
2012-11-05 01:08:32,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@18926ef
2012-11-05 01:08:32,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18926ef
2012-11-05 01:08:32,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18926ef
2012-11-05 01:08:32,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ab210
2012-11-05 01:08:32,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@1092204
2012-11-05 01:08:32,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1092204
2012-11-05 01:08:32,688 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@983a61
2012-11-05 01:08:32,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@983a61
2012-11-05 01:08:32,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37bc9e
2012-11-05 01:08:32,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37bc9e
2012-11-05 01:08:32,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@1460d69
2012-11-05 01:08:32,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1460d69
2012-11-05 01:08:32,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3d350f
2012-11-05 01:08:32,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3d350f
2012-11-05 01:08:32,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18c8195
2012-11-05 01:08:32,705 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a5d24b
2012-11-05 01:08:32,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@1c4560a
2012-11-05 01:08:32,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1c4560a
2012-11-05 01:08:32,709 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@1c4560a
2012-11-05 01:08:32,711 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1921360
2012-11-05 01:08:32,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1921360
2012-11-05 01:08:32,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1921360
2012-11-05 01:08:32,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1af655e
2012-11-05 01:08:32,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@192cb49
2012-11-05 01:08:32,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@192cb49
2012-11-05 01:08:32,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@192cb49
