2012-11-09 13:30:30,352 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,355 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,356 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,358 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,360 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,361 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,362 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,363 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,364 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,364 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,364 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,371 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642303
2012-11-09 13:30:30,372 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,372 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,373 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,374 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,374 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,375 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,376 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,378 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,378 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,380 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,381 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,381 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,382 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,383 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,385 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,386 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,386 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,387 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,388 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,389 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,389 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,394 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:30:30,396 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:30,401 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 1
2012-11-09 13:30:30,403 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,403 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,404 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6], was: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6] (initialized)
2012-11-09 13:30:30,406 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2012-11-09 13:30:30,407 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:30:30,407 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,408 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=1, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,409 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=4eabb578-f204-44e5-8cab-016ff65bbad6, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#1], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,410 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,410 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:30:30,411 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,412 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:30,414 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:30:30,415 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,415 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,416 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,416 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,417 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,418 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,419 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642304
2012-11-09 13:30:30,419 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,420 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,420 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,421 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,422 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,422 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,424 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,425 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,426 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,427 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,427 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,433 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,433 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,434 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,435 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,436 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,437 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,438 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,439 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,440 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,441 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,441 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,442 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,442 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,443 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,443 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,444 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:30:30,445 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:30,446 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 2
2012-11-09 13:30:30,447 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,447 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,448 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6], was: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6] (initialized)
2012-11-09 13:30:30,448 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2012-11-09 13:30:30,449 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:30:30,449 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,449 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=2, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:30:30,450 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=1, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,450 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=4eabb578-f204-44e5-8cab-016ff65bbad6, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#1, com.emo.sample.domain.order.OrderLine#2], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,451 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,451 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:30:30,451 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,452 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:30,453 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:30:30,454 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,454 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,455 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,455 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,455 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,456 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,456 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642304
2012-11-09 13:30:30,457 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,457 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,458 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,458 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,458 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,459 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,461 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,462 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,462 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,463 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,464 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,464 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,465 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,466 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,467 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,467 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,468 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,469 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,469 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:30:30,470 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:30:30,471 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,472 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,473 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,473 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:30:30,474 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:30:30,475 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,476 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,476 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,477 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,477 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,477 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,478 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:30:30,479 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:30,480 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 3
2012-11-09 13:30:30,481 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,481 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,482 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6], was: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6] (initialized)
2012-11-09 13:30:30,482 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2012-11-09 13:30:30,483 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:30:30,483 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,483 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=2, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:30:30,484 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=1, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,484 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=3, price=component[currencyCode,price]{price=499.0, currencyCode=EUR}, item=led tv, lineId=3}
2012-11-09 13:30:30,484 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=4eabb578-f204-44e5-8cab-016ff65bbad6, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#1, com.emo.sample.domain.order.OrderLine#2, com.emo.sample.domain.order.OrderLine#3], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,485 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,485 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:30:30,486 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,486 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:30,488 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:30:30,488 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,489 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,489 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,489 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,490 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,490 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,491 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642304
2012-11-09 13:30:30,491 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,492 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,493 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,494 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,495 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,496 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,496 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,497 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,497 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,498 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,503 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,504 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,505 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,505 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,506 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,507 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:30:30,507 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:30:30,508 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,509 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 2
2012-11-09 13:30:30,509 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#3]
2012-11-09 13:30:30,510 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,511 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,512 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#1]
2012-11-09 13:30:30,512 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:30:30,513 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#2]
2012-11-09 13:30:30,514 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#3]
2012-11-09 13:30:30,515 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#3]
2012-11-09 13:30:30,515 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,516 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#4eabb578-f204-44e5-8cab-016ff65bbad6]
2012-11-09 13:30:30,517 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,517 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,518 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,519 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,519 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,521 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642305
2012-11-09 13:30:30,522 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,523 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,524 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,524 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,525 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,526 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,527 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,528 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:30:30,529 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,529 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,530 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,530 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,531 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,532 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,532 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,533 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642305
2012-11-09 13:30:30,534 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,534 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,535 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,535 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,536 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,537 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,538 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:30,539 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,540 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,541 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:30:30,541 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 20ea1580-8c9b-485a-bdde-9df0dc06a681, using strategy: org.hibernate.id.Assigned
2012-11-09 13:30:30,542 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,543 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,544 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,544 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681], was: [<unreferenced>] (initialized)
2012-11-09 13:30:30,545 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:30:30,546 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:30:30,546 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,547 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=20ea1580-8c9b-485a-bdde-9df0dc06a681, state=Draft, lines=[], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,548 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:30:30,549 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,550 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:30:30,550 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,551 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,551 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,552 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,552 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,553 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,554 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642305
2012-11-09 13:30:30,555 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,556 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,556 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,557 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,557 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,558 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,560 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,561 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,562 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,563 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,563 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,564 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,565 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,566 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,567 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,568 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,569 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,569 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,570 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,571 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,571 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,572 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:30:30,573 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:30,575 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 4
2012-11-09 13:30:30,576 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,576 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,577 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681], was: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681] (initialized)
2012-11-09 13:30:30,578 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2012-11-09 13:30:30,579 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:30:30,579 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,580 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,580 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=20ea1580-8c9b-485a-bdde-9df0dc06a681, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#4], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,581 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,582 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:30:30,582 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,587 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:30,588 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:30:30,588 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,589 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,589 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,590 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,590 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,590 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,591 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642305
2012-11-09 13:30:30,591 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,592 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,592 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,593 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,593 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,594 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,595 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,596 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,597 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,597 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,598 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,598 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,599 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,600 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,601 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,602 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,602 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,603 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,604 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,604 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,605 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,606 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,606 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,606 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,607 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,607 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,608 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:30:30,609 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:30,610 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 5
2012-11-09 13:30:30,611 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,611 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,611 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681], was: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681] (initialized)
2012-11-09 13:30:30,612 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2012-11-09 13:30:30,612 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:30:30,613 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,613 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,614 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=20ea1580-8c9b-485a-bdde-9df0dc06a681, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#4, com.emo.sample.domain.order.OrderLine#5], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,614 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=5, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:30:30,615 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,615 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:30:30,615 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,616 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:30,617 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:30:30,618 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,618 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,619 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,620 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,620 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,621 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,622 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642306
2012-11-09 13:30:30,622 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,623 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,624 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,624 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,625 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,626 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,628 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,629 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,629 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,630 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,631 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,632 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,632 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,634 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,635 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,636 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,637 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,638 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,639 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:30:30,640 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,641 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,642 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,643 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,644 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,645 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,646 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,646 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,647 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,648 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,648 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,649 [main] DEBUG org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:202) - Executing identity-insert immediately
2012-11-09 13:30:30,650 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:30,651 [main] DEBUG org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:93) - Natively generated identity: 6
2012-11-09 13:30:30,652 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,653 [main] DEBUG org.hibernate.engine.spi.CollectionEntry.preFlush(CollectionEntry.java:199) - Collection dirty: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,654 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681], was: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681] (initialized)
2012-11-09 13:30:30,654 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2012-11-09 13:30:30,655 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
2012-11-09 13:30:30,656 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,656 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,657 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=20ea1580-8c9b-485a-bdde-9df0dc06a681, state=Draft, lines=[com.emo.sample.domain.order.OrderLine#4, com.emo.sample.domain.order.OrderLine#5, com.emo.sample.domain.order.OrderLine#6], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,657 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=6, price=component[currencyCode,price]{price=499.0, currencyCode=EUR}, item=led tv, lineId=3}
2012-11-09 13:30:30,658 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=5, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:30:30,659 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1262) - Deleting rows of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,659 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.deleteRows(AbstractCollectionPersister.java:1344) - No rows to delete
2012-11-09 13:30:30,663 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1369) - Inserting rows of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,664 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:30,665 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.insertRows(AbstractCollectionPersister.java:1444) - Done inserting rows: 1 inserted
2012-11-09 13:30:30,665 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,666 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,666 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,666 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,667 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,667 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,668 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 13:30:30,669 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642306
2012-11-09 13:30:30,669 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,670 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,670 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,671 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,671 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,671 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,673 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,674 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,674 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,675 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,676 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,676 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,677 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,678 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,679 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,679 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,680 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,681 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,681 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:30:30,682 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,683 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,683 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 2
2012-11-09 13:30:30,684 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:30:30,685 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,686 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,687 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,687 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,688 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,688 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:30:30,689 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:30:30,689 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,690 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,690 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,691 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,691 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,692 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,692 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,693 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681], was: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681] (initialized)
2012-11-09 13:30:30,693 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2012-11-09 13:30:30,694 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:30:30,694 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,695 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=4, price=component[currencyCode,price]{price=3.9, currencyCode=EUR}, item=boardgame, lineId=1}
2012-11-09 13:30:30,695 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=20ea1580-8c9b-485a-bdde-9df0dc06a681, state=Open, lines=[com.emo.sample.domain.order.OrderLine#4, com.emo.sample.domain.order.OrderLine#5, com.emo.sample.domain.order.OrderLine#6], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,695 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=6, price=component[currencyCode,price]{price=499.0, currencyCode=EUR}, item=led tv, lineId=3}
2012-11-09 13:30:30,696 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.OrderLine{internalId=5, price=component[currencyCode,price]{price=2.55, currencyCode=EUR}, item=candy bag, lineId=2}
2012-11-09 13:30:30,697 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:30:30,698 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,698 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,698 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,699 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,699 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,699 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,700 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,701 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,702 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,703 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,704 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,704 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,705 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,706 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,706 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,707 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,708 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,709 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,710 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,710 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,711 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,712 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,712 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 1
2012-11-09 13:30:30,713 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,713 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,714 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 2
2012-11-09 13:30:30,715 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:30:30,716 [main] DEBUG org.hibernate.loader.Loader.readCollectionElement(Loader.java:1164) - Found row of collection: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,717 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,717 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#4]
2012-11-09 13:30:30,718 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,718 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#5]
2012-11-09 13:30:30,719 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:30:30,719 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.OrderLine#6]
2012-11-09 13:30:30,720 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,720 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#20ea1580-8c9b-485a-bdde-9df0dc06a681]
2012-11-09 13:30:30,721 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,721 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,722 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,722 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,723 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,725 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,725 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,726 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,727 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,727 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,728 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,733 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,734 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,734 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:30:30,735 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,735 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,736 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,736 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,737 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,737 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,737 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,738 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,738 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,739 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,739 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,740 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,740 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,741 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#ec3d771f-6b48-4c8f-a70f-96e7c0796227]
2012-11-09 13:30:30,742 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:30,743 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,744 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,744 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:30:30,744 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: ec3d771f-6b48-4c8f-a70f-96e7c0796227, using strategy: org.hibernate.id.Assigned
2012-11-09 13:30:30,745 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,745 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,746 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,747 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#ec3d771f-6b48-4c8f-a70f-96e7c0796227], was: [<unreferenced>] (initialized)
2012-11-09 13:30:30,747 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:30:30,747 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:30:30,748 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,748 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=ec3d771f-6b48-4c8f-a70f-96e7c0796227, state=Draft, lines=[], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,749 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:30:30,750 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#ec3d771f-6b48-4c8f-a70f-96e7c0796227]
2012-11-09 13:30:30,750 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:30:30,751 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,751 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,751 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,752 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,752 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,752 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,753 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,754 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,754 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,755 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,755 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,756 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,757 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,758 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,758 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:30:30,759 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,760 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,760 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,761 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,761 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,762 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,763 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,764 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,765 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,766 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,767 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,767 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,767 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,769 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,770 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,771 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:30:30,771 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,772 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,772 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,773 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,774 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,774 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,775 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,776 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,776 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:30,777 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,778 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,778 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:30,779 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:30,780 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.order.Order#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,781 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:30,782 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:224) - No collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,782 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,783 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:30:30,783 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: b7bcaa9a-44fa-425f-9ea4-5abf21286c53, using strategy: org.hibernate.id.Assigned
2012-11-09 13:30:30,784 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:30,784 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:30,785 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:30,785 [main] DEBUG org.hibernate.engine.internal.Collections.processReachableCollection(Collections.java:191) - Collection found: [com.emo.sample.domain.order.Order.lines#b7bcaa9a-44fa-425f-9ea4-5abf21286c53], was: [<unreferenced>] (initialized)
2012-11-09 13:30:30,787 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:30:30,787 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2012-11-09 13:30:30,788 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:30,788 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.order.Order{orderCode=b7bcaa9a-44fa-425f-9ea4-5abf21286c53, state=Draft, lines=[], forCustomerCode=e8dae82d-6b55-4eb8-913e-f8c5c30641d7}
2012-11-09 13:30:30,789 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:30:30,790 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1149) - Inserting collection: [com.emo.sample.domain.order.Order.lines#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,791 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1236) - Collection was empty
2012-11-09 13:30:30,792 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:30,792 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:30,793 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:30,794 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,794 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,795 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:30,796 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642307
2012-11-09 13:30:30,797 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Order as generatedAlias0 where generatedAlias0.orderCode=:param0
2012-11-09 13:30:30,799 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:30,799 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:30,801 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select order0_.orderCode as orderCode1_, order0_.forCustomerCode as forCusto2_1_, order0_.state as state1_ from SalesOrder order0_ where order0_.orderCode=? limit ?
2012-11-09 13:30:30,802 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:30,806 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.order.Order#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,807 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.order.Order#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,808 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.order.Order#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,808 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:30,809 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2154) - Loading collection: [com.emo.sample.domain.order.Order.lines#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,810 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:30,811 [main] DEBUG org.hibernate.loader.Loader.handleEmptyCollections(Loader.java:1230) - Result set contains (possibly empty) collection: [com.emo.sample.domain.order.Order.lines#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,811 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:229) - 1 collections were found in result set for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,812 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollection(CollectionLoadContext.java:266) - Collection fully initialized: [com.emo.sample.domain.order.Order.lines#b7bcaa9a-44fa-425f-9ea4-5abf21286c53]
2012-11-09 13:30:30,812 [main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext.endLoadingCollections(CollectionLoadContext.java:236) - 1 collections initialized for role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:30,812 [main] DEBUG org.hibernate.loader.Loader.loadCollection(Loader.java:2174) - Done loading collection
2012-11-09 13:30:30,813 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:30,813 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:30,813 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:31,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b7114a
2012-11-09 13:30:31,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b7114a
2012-11-09 13:30:31,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b7114a
2012-11-09 13:30:31,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11552dd
2012-11-09 13:30:31,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@597692
2012-11-09 13:30:31,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@51a0c9
2012-11-09 13:30:31,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@fb7989
2012-11-09 13:30:31,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@fb7989
2012-11-09 13:30:31,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@fb7989
2012-11-09 13:30:31,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@d79cbb
2012-11-09 13:30:31,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@d79cbb
2012-11-09 13:30:31,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d79cbb
2012-11-09 13:30:31,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@13db55e
2012-11-09 13:30:31,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@13db55e
2012-11-09 13:30:31,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13db55e
2012-11-09 13:30:31,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@159d713
2012-11-09 13:30:31,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@159d713
2012-11-09 13:30:31,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@159d713
2012-11-09 13:30:31,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@12a9eff
2012-11-09 13:30:31,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@12a9eff
2012-11-09 13:30:31,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@12a9eff
2012-11-09 13:30:31,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@e6e2f2
2012-11-09 13:30:31,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@e6e2f2
2012-11-09 13:30:31,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e6e2f2
2012-11-09 13:30:31,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@14a123f
2012-11-09 13:30:31,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@14a123f
2012-11-09 13:30:31,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14a123f
2012-11-09 13:30:31,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6dd170
2012-11-09 13:30:31,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6dd170
2012-11-09 13:30:31,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@94ef06
2012-11-09 13:30:31,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@94ef06
2012-11-09 13:30:31,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@55bcd7
2012-11-09 13:30:31,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@55bcd7
2012-11-09 13:30:31,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@80dabf
2012-11-09 13:30:31,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@80dabf
2012-11-09 13:30:31,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@18c9692
2012-11-09 13:30:31,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18c9692
2012-11-09 13:30:31,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@b68ab7
2012-11-09 13:30:31,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b68ab7
2012-11-09 13:30:31,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@9a9672
2012-11-09 13:30:31,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9a9672
2012-11-09 13:30:31,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9a9672
2012-11-09 13:30:31,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1052fd
2012-11-09 13:30:31,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@16d3814
2012-11-09 13:30:31,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16d3814
2012-11-09 13:30:31,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16d3814
2012-11-09 13:30:31,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f3a110
2012-11-09 13:30:31,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@142f46a
2012-11-09 13:30:31,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@142f46a
2012-11-09 13:30:31,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@5f326c
2012-11-09 13:30:31,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f326c
2012-11-09 13:30:31,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12ac165
2012-11-09 13:30:31,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12ac165
2012-11-09 13:30:31,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@1520844
2012-11-09 13:30:31,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1520844
2012-11-09 13:30:31,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1799a40
2012-11-09 13:30:31,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1799a40
2012-11-09 13:30:31,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@138b5c6
2012-11-09 13:30:31,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3b847
2012-11-09 13:30:31,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@1a54b82
2012-11-09 13:30:31,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a54b82
2012-11-09 13:30:31,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@1a54b82
2012-11-09 13:30:31,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8a93de
2012-11-09 13:30:31,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8a93de
2012-11-09 13:30:31,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8a93de
2012-11-09 13:30:31,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1886c83
2012-11-09 13:30:31,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@6f258a
2012-11-09 13:30:31,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f258a
2012-11-09 13:30:31,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@6f258a
2012-11-09 13:30:31,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1cd0400
2012-11-09 13:30:31,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1cd0400
2012-11-09 13:30:31,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1cd0400
2012-11-09 13:30:31,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@17f0ced
2012-11-09 13:30:31,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@e80a28
2012-11-09 13:30:31,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e80a28
2012-11-09 13:30:31,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@eb3965
2012-11-09 13:30:31,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1fcb3d3
2012-11-09 13:30:31,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fcb3d3
2012-11-09 13:30:31,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@fcabd6
2012-11-09 13:30:31,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@2bf86
2012-11-09 13:30:31,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1ff0777
2012-11-09 13:30:31,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ff0777
2012-11-09 13:30:31,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19078d4
2012-11-09 13:30:31,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ecda63
2012-11-09 13:30:31,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@f5d2fd
2012-11-09 13:30:31,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@eef406
2012-11-09 13:30:31,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d6e17a
2012-11-09 13:30:31,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d1ac3
2012-11-09 13:30:31,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f7f86c
2012-11-09 13:30:31,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d6b986
2012-11-09 13:30:31,095 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 13:30:31,095 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 13:30:31,095 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:30:31,096 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:30:31,096 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 13:30:31,096 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 13:30:31,097 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 13:30:31,097 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 13:30:31,097 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 13:30:31,098 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 13:30:31,098 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 13:30:31,098 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 13:30:31,098 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 13:30:31,099 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 13:30:31,099 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 13:30:31,102 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1cd2e5f
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e23ec
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@d89c9a
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 13:30:31,102 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 13:30:31,103 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 13:30:31,105 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 13:30:31,106 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 13:30:31,107 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 13:30:31,109 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 13:30:31,110 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 13:30:31,111 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 13:30:31,113 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 13:30:31,114 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 13:30:31,115 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 13:30:31,116 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 13:30:31,118 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 13:30:31,118 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 13:30:31,119 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 13:30:31,120 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 13:30:31,121 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 13:30:31,121 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 13:30:31,122 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 13:30:31,122 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:30:31,123 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 13:30:31,123 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 13:30:31,124 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,125 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 13:30:31,126 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 13:30:31,126 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 13:30:31,126 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,127 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 13:30:31,127 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 13:30:31,128 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 13:30:31,128 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,129 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 13:30:31,129 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 13:30:31,129 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 13:30:31,130 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,130 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 13:30:31,131 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 13:30:31,131 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 13:30:31,132 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,136 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 13:30:31,136 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 13:30:31,137 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 13:30:31,137 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,138 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 13:30:31,138 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 13:30:31,139 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 13:30:31,139 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 13:30:31,140 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:30:31,140 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 13:30:31,141 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 13:30:31,143 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,143 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 13:30:31,144 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 13:30:31,144 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 13:30:31,145 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,145 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 13:30:31,146 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 13:30:31,146 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 13:30:31,147 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 13:30:31,148 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,148 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,149 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,149 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,150 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 13:30:31,150 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:30:31,151 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:30:31,151 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:31,151 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 13:30:31,152 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,153 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 13:30:31,153 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 13:30:31,153 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 13:30:31,154 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 13:30:31,154 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:30:31,155 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 13:30:31,155 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 13:30:31,157 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,157 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 13:30:31,158 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 13:30:31,158 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 13:30:31,158 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,159 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 13:30:31,159 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 13:30:31,160 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 13:30:31,160 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,161 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 13:30:31,161 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 13:30:31,161 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 13:30:31,162 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,163 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,163 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 13:30:31,164 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 13:30:31,164 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 13:30:31,165 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:31,165 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 13:30:31,166 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 13:30:31,166 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:30:31,167 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:30:31,167 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 13:30:31,167 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 13:30:31,168 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 13:30:31,168 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 13:30:31,168 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 13:30:31,169 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 13:30:31,169 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 13:30:31,170 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 13:30:31,170 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 13:30:31,171 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 13:30:31,171 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 13:30:31,171 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 13:30:31,172 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 13:30:31,172 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 13:30:31,172 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 13:30:31,173 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 13:30:31,173 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 13:30:31,173 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 13:30:31,174 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:31,174 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 13:30:31,174 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 13:30:31,175 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 13:30:31,175 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 13:30:31,175 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 13:30:31,176 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 13:30:31,176 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 13:30:31,177 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:30:31,179 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:30:31,179 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:30:31,180 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 13:30:31,182 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:30:31,183 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 13:30:31,184 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 13:30:31,184 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 13:30:31,185 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 13:30:31,185 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 13:30:31,185 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 13:30:31,185 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 13:30:31,186 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 13:30:31,186 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:30:31,187 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 13:30:31,187 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 13:30:31,188 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 13:30:31,188 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 13:30:31,188 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 13:30:31,188 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 13:30:31,192 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 13:30:31,193 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 13:30:31,193 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 13:30:31,193 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 13:30:31,194 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 13:30:31,194 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 13:30:31,194 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 13:30:31,195 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 13:30:31,195 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 13:30:31,195 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 13:30:31,196 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 13:30:31,196 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 13:30:31,196 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 13:30:31,197 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 13:30:31,197 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 13:30:31,198 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 13:30:31,198 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter4097799707458597989.jar, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;C:\Program Files\Heroku\bin;C:\Program Files\ruby-1.9.2\bin;C:\Program Files\git\bin;C:\Program Files\git\cmd;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@d89c9a, surefire.test.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_01\jre, sun.java.command=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter4097799707458597989.jar C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire1178864086273591079tmp C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire1583335113711808044tmp, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_01\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_01\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Cedroic\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 13:30:31,203 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:30:31,203 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:30:31,204 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:30:31,206 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 13:30:31,206 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 13:30:31,207 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_7_, order_.state as state7_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 13:30:31,207 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:30:31,207 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:30:31,208 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 13:30:31,209 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 13:30:31,210 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 13:30:31,210 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city6_, client_.countryCode as countryC3_6_, client_.name as name6_, client_.street as street6_, client_.zip as zip6_ from Client client_ where client_.clientCode=?
2012-11-09 13:30:31,210 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:30:31,211 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:30:31,211 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 13:30:31,213 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 13:30:31,213 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 13:30:31,213 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item8_, orderline_.lineId as lineId8_, orderline_.currencyCode as currency4_8_, orderline_.price as price8_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 13:30:31,214 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 13:30:31,214 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 13:30:31,214 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 13:30:31,215 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:31,215 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:31,216 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:31,216 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 13:30:31,216 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 13:30:31,217 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:31,218 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:31,219 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,219 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,220 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,221 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,221 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,222 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,223 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,223 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:31,224 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:31,225 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:31,226 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,226 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,227 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,227 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,228 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,229 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,229 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,230 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,230 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,231 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,232 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,232 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:31,233 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,234 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,234 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,235 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,235 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,236 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,237 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,237 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,238 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,239 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,239 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,244 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:31,244 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_7_1_, lines0_.id as id1_, lines0_.id as id8_0_, lines0_.item as item8_0_, lines0_.lineId as lineId8_0_, lines0_.currencyCode as currency4_8_0_, lines0_.price as price8_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:31,245 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: 94d7eaa1-76e3-43cb-b1d5-bbc44ce24f5c (<unnamed>)
2012-11-09 13:30:31,245 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 13:30:31,245 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 13:30:31,246 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 13:30:31,246 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 13:30:31,246 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 13:30:31,250 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 13:30:31,250 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-11-09 13:30:31,272 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642312
2012-11-09 13:30:31,273 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642312
2012-11-09 13:30:31,277 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:30:31,285 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642312
2012-11-09 13:30:31,286 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642312
2012-11-09 13:30:31,290 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:30:31,292 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 13:30:34,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b7114a
2012-11-09 13:30:34,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@b7114a
2012-11-09 13:30:34,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b7114a
2012-11-09 13:30:34,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11552dd
2012-11-09 13:30:34,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@597692
2012-11-09 13:30:34,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@51a0c9
2012-11-09 13:30:34,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@fb7989
2012-11-09 13:30:34,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@fb7989
2012-11-09 13:30:34,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@fb7989
2012-11-09 13:30:34,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@d79cbb
2012-11-09 13:30:34,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@d79cbb
2012-11-09 13:30:34,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d79cbb
2012-11-09 13:30:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@13db55e
2012-11-09 13:30:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@13db55e
2012-11-09 13:30:34,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13db55e
2012-11-09 13:30:34,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@159d713
2012-11-09 13:30:34,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@159d713
2012-11-09 13:30:34,313 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@159d713
2012-11-09 13:30:34,313 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@12a9eff
2012-11-09 13:30:34,314 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@12a9eff
2012-11-09 13:30:34,315 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@12a9eff
2012-11-09 13:30:34,315 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@e6e2f2
2012-11-09 13:30:34,316 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@e6e2f2
2012-11-09 13:30:34,316 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e6e2f2
2012-11-09 13:30:34,317 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@14a123f
2012-11-09 13:30:34,317 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@14a123f
2012-11-09 13:30:34,318 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14a123f
2012-11-09 13:30:34,318 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6dd170
2012-11-09 13:30:34,319 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6dd170
2012-11-09 13:30:34,319 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@94ef06
2012-11-09 13:30:34,320 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@94ef06
2012-11-09 13:30:34,321 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@55bcd7
2012-11-09 13:30:34,321 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@55bcd7
2012-11-09 13:30:34,322 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@80dabf
2012-11-09 13:30:34,322 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@80dabf
2012-11-09 13:30:34,323 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@18c9692
2012-11-09 13:30:34,324 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18c9692
2012-11-09 13:30:34,324 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@b68ab7
2012-11-09 13:30:34,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b68ab7
2012-11-09 13:30:34,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@9a9672
2012-11-09 13:30:34,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9a9672
2012-11-09 13:30:34,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9a9672
2012-11-09 13:30:34,327 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1052fd
2012-11-09 13:30:34,327 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@16d3814
2012-11-09 13:30:34,328 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16d3814
2012-11-09 13:30:34,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16d3814
2012-11-09 13:30:34,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f3a110
2012-11-09 13:30:34,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@142f46a
2012-11-09 13:30:34,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@142f46a
2012-11-09 13:30:34,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@5f326c
2012-11-09 13:30:34,332 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5f326c
2012-11-09 13:30:34,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12ac165
2012-11-09 13:30:34,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12ac165
2012-11-09 13:30:34,334 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@1520844
2012-11-09 13:30:34,334 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1520844
2012-11-09 13:30:34,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1799a40
2012-11-09 13:30:34,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1799a40
2012-11-09 13:30:34,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@138b5c6
2012-11-09 13:30:34,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a3b847
2012-11-09 13:30:34,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@1a54b82
2012-11-09 13:30:34,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a54b82
2012-11-09 13:30:34,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@1a54b82
2012-11-09 13:30:34,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8a93de
2012-11-09 13:30:34,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8a93de
2012-11-09 13:30:34,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8a93de
2012-11-09 13:30:34,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1886c83
2012-11-09 13:30:34,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@6f258a
2012-11-09 13:30:34,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f258a
2012-11-09 13:30:34,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@6f258a
2012-11-09 13:30:34,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1cd0400
2012-11-09 13:30:34,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1cd0400
2012-11-09 13:30:34,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1cd0400
2012-11-09 13:30:34,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@17f0ced
2012-11-09 13:30:34,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@e80a28
2012-11-09 13:30:34,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e80a28
2012-11-09 13:30:34,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@eb3965
2012-11-09 13:30:34,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1fcb3d3
2012-11-09 13:30:34,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fcb3d3
2012-11-09 13:30:34,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@fcabd6
2012-11-09 13:30:34,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@2bf86
2012-11-09 13:30:34,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1ff0777
2012-11-09 13:30:34,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ff0777
2012-11-09 13:30:34,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ea346e
2012-11-09 13:30:34,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18254d
2012-11-09 13:30:34,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13920da
2012-11-09 13:30:34,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19becbd
2012-11-09 13:30:34,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d3a9a4
2012-11-09 13:30:34,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1265d48
2012-11-09 13:30:34,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b63c34
2012-11-09 13:30:34,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12a8822
2012-11-09 13:30:34,349 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 13:30:34,350 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 13:30:34,351 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:30:34,351 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:30:34,352 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 13:30:34,352 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 13:30:34,353 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 13:30:34,354 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 13:30:34,354 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 13:30:34,355 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 13:30:34,356 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 13:30:34,356 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 13:30:34,357 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 13:30:34,357 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 13:30:34,358 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 13:30:34,359 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: EnvironmentClassLoader[web-app:production/webapp/default/ROOT]
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@14f9de9
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@fd0ba8
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 13:30:34,359 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 13:30:34,360 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 13:30:34,362 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 13:30:34,364 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 13:30:34,370 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 13:30:34,371 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 13:30:34,373 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 13:30:34,374 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 13:30:34,375 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 13:30:34,376 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 13:30:34,377 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 13:30:34,378 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 13:30:34,380 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 13:30:34,380 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 13:30:34,382 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 13:30:34,383 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 13:30:34,383 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 13:30:34,384 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 13:30:34,385 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 13:30:34,386 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:30:34,386 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 13:30:34,387 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 13:30:34,389 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,390 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 13:30:34,390 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 13:30:34,391 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 13:30:34,392 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,392 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 13:30:34,393 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 13:30:34,394 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 13:30:34,394 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,395 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 13:30:34,396 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 13:30:34,396 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 13:30:34,397 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,398 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 13:30:34,398 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 13:30:34,399 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 13:30:34,400 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,400 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 13:30:34,401 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 13:30:34,402 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 13:30:34,403 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,403 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 13:30:34,404 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 13:30:34,405 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 13:30:34,406 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 13:30:34,406 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:30:34,407 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 13:30:34,408 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 13:30:34,409 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,410 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 13:30:34,411 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 13:30:34,411 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 13:30:34,412 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,413 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 13:30:34,413 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 13:30:34,414 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 13:30:34,415 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 13:30:34,415 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,416 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,417 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,418 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,418 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 13:30:34,419 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:30:34,420 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:30:34,420 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:34,421 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 13:30:34,422 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,423 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 13:30:34,423 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 13:30:34,424 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 13:30:34,424 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 13:30:34,425 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:30:34,426 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 13:30:34,427 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 13:30:34,428 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,429 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 13:30:34,429 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 13:30:34,430 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 13:30:34,431 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,432 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 13:30:34,432 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 13:30:34,433 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 13:30:34,434 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,434 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 13:30:34,435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 13:30:34,436 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 13:30:34,437 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,438 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,439 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 13:30:34,439 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 13:30:34,440 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 13:30:34,441 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:30:34,442 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 13:30:34,442 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 13:30:34,443 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:30:34,444 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:30:34,444 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 13:30:34,445 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 13:30:34,446 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 13:30:34,446 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 13:30:34,447 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 13:30:34,448 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 13:30:34,448 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 13:30:34,449 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 13:30:34,449 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 13:30:34,450 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 13:30:34,451 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 13:30:34,452 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 13:30:34,452 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 13:30:34,453 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 13:30:34,453 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 13:30:34,454 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 13:30:34,455 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 13:30:34,455 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 13:30:34,456 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:34,456 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 13:30:34,457 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 13:30:34,457 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 13:30:34,458 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 13:30:34,458 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 13:30:34,459 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 13:30:34,459 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 13:30:34,461 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:30:34,462 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:30:34,463 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:30:34,464 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 13:30:34,467 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:30:34,468 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 13:30:34,468 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 13:30:34,469 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 13:30:34,469 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 13:30:34,469 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 13:30:34,470 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 13:30:34,470 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 13:30:34,470 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 13:30:34,470 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:30:34,471 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 13:30:34,472 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 13:30:34,473 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 13:30:34,473 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 13:30:34,474 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 13:30:34,474 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 13:30:34,475 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 13:30:34,476 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 13:30:34,476 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 13:30:34,477 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 13:30:34,477 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 13:30:34,478 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 13:30:34,478 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 13:30:34,479 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 13:30:34,480 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 13:30:34,480 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 13:30:34,481 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 13:30:34,482 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 13:30:34,482 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 13:30:34,483 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 13:30:34,483 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 13:30:34,484 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 13:30:34,485 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter4097799707458597989.jar, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;C:\Program Files\Heroku\bin;C:\Program Files\ruby-1.9.2\bin;C:\Program Files\git\bin;C:\Program Files\git\cmd;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@fd0ba8, surefire.test.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_01\jre, sun.java.command=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter4097799707458597989.jar C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire1178864086273591079tmp C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire1583335113711808044tmp, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_01\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_01\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Cedroic\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 13:30:34,494 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:30:34,495 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:30:34,495 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:30:34,497 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 13:30:34,498 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 13:30:34,498 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_13_, order_.state as state13_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 13:30:34,499 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:30:34,499 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:30:34,499 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 13:30:34,501 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 13:30:34,502 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 13:30:34,502 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city12_, client_.countryCode as countryC3_12_, client_.name as name12_, client_.street as street12_, client_.zip as zip12_ from Client client_ where client_.clientCode=?
2012-11-09 13:30:34,502 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:30:34,503 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:30:34,503 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 13:30:34,505 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 13:30:34,506 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 13:30:34,506 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item14_, orderline_.lineId as lineId14_, orderline_.currencyCode as currency4_14_, orderline_.price as price14_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 13:30:34,506 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 13:30:34,507 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 13:30:34,507 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 13:30:34,507 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:30:34,508 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:30:34,508 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:30:34,509 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 13:30:34,509 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 13:30:34,510 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:34,511 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:34,511 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,512 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,513 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,513 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,514 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,514 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,515 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,516 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:30:34,516 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:34,517 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:30:34,518 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,519 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,519 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,520 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,521 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,521 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,522 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,523 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,523 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,524 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,524 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,525 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,526 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,526 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,527 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,527 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,528 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,529 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,530 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,530 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,531 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,531 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,532 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,532 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id14_0_, orderline0_.item as item14_0_, orderline0_.lineId as lineId14_0_, orderline0_.currencyCode as currency4_14_0_, orderline0_.price as price14_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:30:34,534 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_13_1_, lines0_.id as id1_, lines0_.id as id14_0_, lines0_.item as item14_0_, lines0_.lineId as lineId14_0_, lines0_.currencyCode as currency4_14_0_, lines0_.price as price14_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:30:34,534 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: 4f63679a-8543-4ac9-a1b8-288622febbee (<unnamed>)
2012-11-09 13:30:34,535 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 13:30:34,535 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 13:30:34,536 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 13:30:34,536 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 13:30:34,537 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 13:30:34,541 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 13:30:34,542 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-11-09 13:30:34,576 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642345
2012-11-09 13:30:34,578 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642345
2012-11-09 13:30:34,587 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:30:34,598 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642345
2012-11-09 13:30:34,599 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642345
2012-11-09 13:30:34,607 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:30:34,609 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 13:30:34,936 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642349
2012-11-09 13:30:34,937 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:34,938 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:34,941 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'clientCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-09 13:30:34,942 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:30:34,942 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 13:30:34,943 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (generatedAlias0) -> client0_
2012-11-09 13:30:34,943 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 13:30:34,944 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 13:30:34,945 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : clientCode -> org.hibernate.type.StringType@55bcd7
2012-11-09 13:30:34,945 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.clientCode -> client0_.clientCode
2012-11-09 13:30:34,945 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 13:30:34,946 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} client0_.clientCode ) ( FromClause{level=1} Client client0_ ) ( where ( = ( client0_.clientCode client0_.clientCode clientCode ) ? ) ) )
2012-11-09 13:30:34,946 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 13:30:34,947 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 13:30:34,948 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode as clientCode12_' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.clientCode' {propertyName=clientCode,dereferenceType=ALL,propertyPath=clientCode,path=generatedAlias0.clientCode,tableAlias=client0_,className=com.emo.sample.domain.Client,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'clientCode' {originalText=clientCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@55bcd7}

2012-11-09 13:30:34,948 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:30:34,949 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:34,949 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,949 [resin-port-8080-29] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:30:34,956 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:34,957 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:34,958 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:34,959 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:34,960 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:34,960 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:34,961 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:34,961 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642349
2012-11-09 13:30:34,962 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:34,962 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:34,963 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:34,963 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:34,963 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:34,964 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:34,979 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:30:34,980 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:34,981 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:30:34,981 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 1234, using strategy: org.hibernate.id.Assigned
2012-11-09 13:30:34,982 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:34,983 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:34,983 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:34,984 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:30:34,984 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:34,985 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:34,985 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=1 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:30:34,986 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:30:34,987 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:34,987 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:34,988 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:34,988 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:34,988 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:34,989 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:35,005 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642350
2012-11-09 13:30:35,005 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:35,006 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:35,006 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:35,006 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:35,007 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:35,007 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:35,008 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:35,010 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:35,010 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:30:35,011 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:35,012 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:35,012 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:35,012 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:35,012 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:35,013 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:35,013 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:30:35,013 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:35,014 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:35,014 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:30:35,015 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:30:35,016 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:35,016 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:35,016 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:35,017 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:35,017 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:35,017 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:36,532 [resin-port-8080-14] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642365
2012-11-09 13:30:36,533 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:36,533 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:36,534 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:36,534 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:36,535 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:36,535 [resin-port-8080-14] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:36,537 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:36,538 [resin-port-8080-14] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:36,538 [resin-port-8080-14] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,539 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,539 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,540 [resin-port-8080-14] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:36,540 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:36,540 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:36,541 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:36,541 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:30:36,541 [resin-port-8080-14] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:36,541 [resin-port-8080-14] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:36,542 [resin-port-8080-14] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:30:36,542 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:36,542 [resin-port-8080-14] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:36,543 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:36,543 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:36,543 [resin-port-8080-14] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:36,921 [resin-port-8080-16] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642369
2012-11-09 13:30:36,922 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:36,922 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:36,923 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:36,923 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:36,923 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:36,924 [resin-port-8080-16] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:36,925 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:36,926 [resin-port-8080-16] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:36,926 [resin-port-8080-16] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,927 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,928 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,928 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:36,928 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:36,929 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:36,929 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:36,929 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:30:36,930 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:36,930 [resin-port-8080-16] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:36,930 [resin-port-8080-16] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:30:36,931 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:36,931 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:36,931 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:36,931 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:36,932 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:36,932 [resin-port-8080-16] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642369
2012-11-09 13:30:36,933 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:36,933 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:36,934 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:36,934 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:36,934 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:36,935 [resin-port-8080-16] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:36,936 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:36,937 [resin-port-8080-16] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:36,938 [resin-port-8080-16] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,938 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,939 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,939 [resin-port-8080-16] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:36,939 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:36,940 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:36,940 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:36,940 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:30:36,941 [resin-port-8080-16] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:36,941 [resin-port-8080-16] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:36,941 [resin-port-8080-16] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=13244, clientCode=1234, street=23 rue 631bd14e-27ae-4fdd-92ee-bb409bfdc43a, name=toto, countryCode=31b, city=14e-27a}
2012-11-09 13:30:36,942 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:30:36,943 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:36,943 [resin-port-8080-16] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:36,943 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:36,944 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:36,944 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:36,944 [resin-port-8080-16] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:36,950 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642369
2012-11-09 13:30:36,951 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:36,951 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:36,952 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:36,953 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:36,953 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:36,954 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:36,956 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:36,957 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:36,957 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,958 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,959 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,959 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:36,960 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:36,960 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:36,960 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:36,961 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:30:36,961 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:36,961 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:36,962 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 13:30:36,963 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:30:36,964 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:36,964 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:36,965 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:36,965 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:36,966 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:36,966 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:36,967 [resin-port-8080-29] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524642369
2012-11-09 13:30:36,968 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:30:36,968 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:30:36,968 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:30:36,969 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:30:36,969 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:30:36,970 [resin-port-8080-29] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:30:36,971 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode12_, client0_.city as city12_, client0_.countryCode as countryC3_12_, client0_.name as name12_, client0_.street as street12_, client0_.zip as zip12_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:30:36,972 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:30:36,973 [resin-port-8080-29] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,973 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,974 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 13:30:36,974 [resin-port-8080-29] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:30:36,975 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:30:36,975 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:30:36,975 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:30:36,975 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:30:36,976 [resin-port-8080-29] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:30:36,976 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:30:36,976 [resin-port-8080-29] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=69074, clientCode=1234, street=23 rue 71e429b3-67be-4f7c-91e3-7ca65443ebf9, name=toto, countryCode=1e4, city=9b3-67be-4}
2012-11-09 13:30:36,977 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:30:36,978 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:30:36,978 [resin-port-8080-29] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:30:36,979 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:30:36,979 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:30:36,979 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:30:36,980 [resin-port-8080-29] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:30:37,254 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 13:30:37,255 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 13:30:37,289 [Thread-1] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 13:30:37,290 [Thread-1] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 13:34:21,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:21,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:21,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:21,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8532d1
2012-11-09 13:34:21,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@139a82d
2012-11-09 13:34:21,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dc88c7
2012-11-09 13:34:21,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:21,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:21,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:21,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:21,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:21,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:21,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:21,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:21,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:21,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:21,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:21,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:21,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:21,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:21,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:21,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:21,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:21,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:21,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:21,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:21,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:21,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:21,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:21,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:21,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:21,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:21,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:21,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:21,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:21,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:21,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:21,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:21,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:21,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:21,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:21,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:21,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9d672e
2012-11-09 13:34:21,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:21,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:21,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:21,684 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d1339b
2012-11-09 13:34:21,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:21,688 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:21,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:21,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:21,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:21,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:21,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:21,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:21,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:21,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:21,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c568d5
2012-11-09 13:34:21,705 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c89b0a
2012-11-09 13:34:21,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:21,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:21,709 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:21,711 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:21,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:21,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:21,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@19ddf4e
2012-11-09 13:34:21,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:21,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:21,718 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:21,720 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:21,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:21,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:21,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@37601e
2012-11-09 13:34:21,733 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:21,734 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:21,735 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@193bcf
2012-11-09 13:34:21,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:21,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:21,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1728f89
2012-11-09 13:34:21,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@1ad1594
2012-11-09 13:34:21,756 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:21,757 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:21,758 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19c0a9d
2012-11-09 13:34:21,759 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17d009c
2012-11-09 13:34:21,760 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b32b8f
2012-11-09 13:34:21,760 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f0ed72
2012-11-09 13:34:21,761 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@750372
2012-11-09 13:34:21,761 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@355060
2012-11-09 13:34:21,762 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2fe238
2012-11-09 13:34:21,762 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ad0726
2012-11-09 13:34:21,799 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-09 13:34:21,811 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-09 13:34:21,814 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-09 13:34:21,821 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-09 13:34:21,844 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 13:34:21,846 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 13:34:21,848 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:21,848 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:21,851 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 13:34:21,852 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 13:34:21,855 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 13:34:21,856 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 13:34:21,858 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 13:34:21,859 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 13:34:21,860 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 13:34:21,862 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 13:34:21,863 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 13:34:21,865 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 13:34:21,867 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 13:34:21,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:21,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:21,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@bc040f
2012-11-09 13:34:21,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8532d1
2012-11-09 13:34:21,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@139a82d
2012-11-09 13:34:21,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dc88c7
2012-11-09 13:34:21,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:21,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:21,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12249c8
2012-11-09 13:34:21,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:21,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:21,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7191d6
2012-11-09 13:34:21,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:21,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:21,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3cc381
2012-11-09 13:34:21,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:21,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:21,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@f0269d
2012-11-09 13:34:21,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:21,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:21,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13ff97c
2012-11-09 13:34:21,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:21,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:21,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c4ee24
2012-11-09 13:34:21,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:21,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:21,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@468d0b
2012-11-09 13:34:21,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:21,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b6add
2012-11-09 13:34:21,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:21,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d1b194
2012-11-09 13:34:21,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:21,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:21,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:21,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@139a005
2012-11-09 13:34:21,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:21,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d15ee4
2012-11-09 13:34:21,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:21,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c3931a
2012-11-09 13:34:21,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:21,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:21,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@aca7bf
2012-11-09 13:34:21,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9d672e
2012-11-09 13:34:21,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:21,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:21,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@379ada
2012-11-09 13:34:21,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d1339b
2012-11-09 13:34:21,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:21,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f8a19f
2012-11-09 13:34:21,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:21,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@949d89
2012-11-09 13:34:21,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:21,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17dacb8
2012-11-09 13:34:21,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:21,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7b6097
2012-11-09 13:34:21,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:21,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a91b1
2012-11-09 13:34:21,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@c568d5
2012-11-09 13:34:21,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@c89b0a
2012-11-09 13:34:21,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:21,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:21,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@9af3ee
2012-11-09 13:34:21,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:21,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:21,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13d510
2012-11-09 13:34:21,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@19ddf4e
2012-11-09 13:34:21,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:21,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:21,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f8f099
2012-11-09 13:34:21,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:21,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:21,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@fcd689
2012-11-09 13:34:21,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@37601e
2012-11-09 13:34:21,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:21,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@116630b
2012-11-09 13:34:21,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@193bcf
2012-11-09 13:34:21,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:21,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1037517
2012-11-09 13:34:21,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1728f89
2012-11-09 13:34:21,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@1ad1594
2012-11-09 13:34:21,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:21,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1efb93a
2012-11-09 13:34:21,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@85a6fa
2012-11-09 13:34:21,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@956b74
2012-11-09 13:34:21,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c1cd99
2012-11-09 13:34:21,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a0f9bc
2012-11-09 13:34:21,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6bba7a
2012-11-09 13:34:21,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9fd10a
2012-11-09 13:34:21,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5508ab
2012-11-09 13:34:21,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ac317e
2012-11-09 13:34:21,927 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 13:34:21,927 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 13:34:21,928 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:21,929 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 13:34:21,929 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 13:34:21,930 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 13:34:21,930 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 13:34:21,931 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 13:34:21,931 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 13:34:21,932 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 13:34:21,932 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 13:34:21,935 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 13:34:21,936 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 13:34:21,936 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 13:34:21,937 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 13:34:21,940 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@6eb38a
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@be744e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@1c5dc73
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 13:34:21,944 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 13:34:21,958 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 13:34:21,960 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 13:34:22,021 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 13:34:22,023 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 13:34:22,025 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 13:34:22,026 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 13:34:22,028 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 13:34:22,030 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 13:34:22,035 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 13:34:22,036 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 13:34:22,038 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 13:34:22,075 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 13:34:22,076 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 13:34:22,116 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 13:34:22,131 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 13:34:22,172 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 13:34:22,173 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 13:34:22,180 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 13:34:22,220 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:22,234 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 13:34:22,241 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 13:34:22,279 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,285 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 13:34:22,290 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 13:34:22,293 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 13:34:22,305 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,306 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 13:34:22,306 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 13:34:22,307 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 13:34:22,308 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,309 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 13:34:22,309 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 13:34:22,310 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 13:34:22,311 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,311 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 13:34:22,312 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 13:34:22,313 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 13:34:22,313 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,314 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 13:34:22,315 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 13:34:22,315 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 13:34:22,316 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,317 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 13:34:22,317 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 13:34:22,318 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 13:34:22,321 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 13:34:22,322 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:22,323 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 13:34:22,324 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 13:34:22,352 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,353 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 13:34:22,353 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 13:34:22,354 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 13:34:22,354 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,355 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 13:34:22,356 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 13:34:22,356 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 13:34:22,357 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 13:34:22,358 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,361 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,379 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,381 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,387 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 13:34:22,389 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:34:22,390 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 13:34:22,391 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:22,396 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 13:34:22,397 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,397 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 13:34:22,401 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 13:34:22,401 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 13:34:22,402 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:22,403 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 13:34:22,403 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 13:34:22,404 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 13:34:22,411 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,412 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 13:34:22,412 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 13:34:22,413 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 13:34:22,413 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,414 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 13:34:22,415 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 13:34:22,415 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 13:34:22,416 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,417 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 13:34:22,417 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 13:34:22,418 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 13:34:22,419 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,424 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,425 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 13:34:22,425 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 13:34:22,426 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 13:34:22,427 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 13:34:22,428 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 13:34:22,429 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 13:34:22,429 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:34:22,430 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 13:34:22,431 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 13:34:22,432 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 13:34:22,432 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 13:34:22,433 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 13:34:22,434 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 13:34:22,434 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 13:34:22,435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 13:34:22,435 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 13:34:22,436 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 13:34:22,436 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 13:34:22,437 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 13:34:22,438 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 13:34:22,438 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 13:34:22,438 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 13:34:22,440 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 13:34:22,442 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 13:34:22,443 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 13:34:22,443 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 13:34:22,444 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:22,445 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 13:34:22,446 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 13:34:22,452 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:22,456 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 13:34:22,456 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 13:34:22,457 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 13:34:22,457 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 13:34:22,499 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 13:34:22,545 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:34:22,546 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 13:34:22,547 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 13:34:22,573 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 13:34:22,612 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 13:34:22,612 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 13:34:22,613 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 13:34:22,614 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 13:34:22,615 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 13:34:22,615 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 13:34:22,616 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 13:34:22,616 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 13:34:22,617 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 13:34:22,622 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 13:34:22,623 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 13:34:22,623 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 13:34:22,623 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 13:34:22,624 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 13:34:22,632 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 13:34:22,633 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 13:34:22,634 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 13:34:22,634 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 13:34:22,635 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 13:34:22,637 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 13:34:22,639 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 13:34:22,639 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 13:34:22,640 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 13:34:22,640 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 13:34:22,641 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 13:34:22,642 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 13:34:22,642 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 13:34:22,642 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 13:34:22,643 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 13:34:22,658 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 13:34:22,671 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 13:34:22,672 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter2226434968966839094.jar, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk1.7.0_01\jre\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;C:\Program Files\Heroku\bin;C:\Program Files\ruby-1.9.2\bin;C:\Program Files\git\bin;C:\Program Files\git\cmd;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@1c5dc73, surefire.test.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_01\jre, sun.java.command=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefirebooter2226434968966839094.jar C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire7586567173852155835tmp C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\surefire\surefire5128029321214978642tmp, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_01\jre\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_01\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_01\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_01\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\Cedroic\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 13:34:22,802 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:22,803 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:22,804 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 13:34:22,928 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 13:34:22,929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 13:34:22,929 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_1_, order_.state as state1_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 13:34:22,930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 13:34:22,930 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 13:34:22,931 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 13:34:22,937 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 13:34:22,937 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 13:34:22,938 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city0_, client_.countryCode as countryC3_0_, client_.name as name0_, client_.street as street0_, client_.zip as zip0_ from Client client_ where client_.clientCode=?
2012-11-09 13:34:22,938 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:22,939 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:22,939 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 13:34:22,946 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 13:34:22,947 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 13:34:22,947 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item2_, orderline_.lineId as lineId2_, orderline_.currencyCode as currency4_2_, orderline_.price as price2_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 13:34:22,948 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 13:34:22,948 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 13:34:22,949 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 13:34:22,950 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 13:34:22,962 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 13:34:22,962 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 13:34:22,963 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 13:34:22,964 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 13:34:23,002 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:23,003 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:23,004 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,005 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,006 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,007 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,008 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,008 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,009 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,010 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 13:34:23,022 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:23,023 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 13:34:23,024 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,025 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,026 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,027 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,028 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,029 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,030 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,031 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,031 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,032 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,033 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,034 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:23,035 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,036 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,037 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,038 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,039 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,039 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,040 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,041 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,042 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,043 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,044 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,045 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 13:34:23,051 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 13:34:23,094 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@15338bf
2012-11-09 13:34:23,095 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: 70077588-770c-476c-abdb-1ddc9ee05d04 (<unnamed>)
2012-11-09 13:34:23,095 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 13:34:23,096 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 13:34:23,096 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 13:34:23,097 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 13:34:23,105 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 13:34:23,176 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:55) - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@97381c
2012-11-09 13:34:23,177 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 13:34:23,596 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644634
2012-11-09 13:34:23,607 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644636
2012-11-09 13:34:23,697 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:34:23,717 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644637
2012-11-09 13:34:23,718 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644637
2012-11-09 13:34:23,728 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 13:34:23,739 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 13:34:24,108 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644641
2012-11-09 13:34:24,112 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,112 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,113 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,114 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,114 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,126 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,189 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,204 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'clientCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-09 13:34:24,210 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,247 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 13:34:24,274 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (generatedAlias0) -> client0_
2012-11-09 13:34:24,276 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 13:34:24,282 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 13:34:24,284 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : clientCode -> org.hibernate.type.StringType@1e63cb6
2012-11-09 13:34:24,286 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.clientCode -> client0_.clientCode
2012-11-09 13:34:24,290 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 13:34:24,291 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} client0_.clientCode ) ( FromClause{level=1} Client client0_ ) ( where ( = ( client0_.clientCode client0_.clientCode clientCode ) ? ) ) )
2012-11-09 13:34:24,304 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 13:34:24,305 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 13:34:24,306 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode as clientCode0_' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.clientCode' {propertyName=clientCode,dereferenceType=ALL,propertyPath=clientCode,path=generatedAlias0.clientCode,tableAlias=client0_,className=com.emo.sample.domain.Client,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'clientCode' {originalText=clientCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1e63cb6}

2012-11-09 13:34:24,307 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,317 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,319 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:24,319 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,384 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,432 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,433 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 13:34:24,434 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 13:34:24,434 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,436 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,437 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,437 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,440 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644644
2012-11-09 13:34:24,441 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,442 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,442 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,443 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,443 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,445 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select count(*) from com.emo.sample.domain.Client x
2012-11-09 13:34:24,448 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'emo'
       |     |  |  |  \-[IDENT] Node: 'sample'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Client'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

2012-11-09 13:34:24,448 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,449 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 13:34:24,450 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (x) -> client0_
2012-11-09 13:34:24,452 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 13:34:24,453 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} Client client0_ ) )
2012-11-09 13:34:24,454 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 13:34:24,455 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 13:34:24,456 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}

2012-11-09 13:34:24,457 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,457 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select count(*) from com.emo.sample.domain.Client x
2012-11-09 13:34:24,458 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select count(*) as col_0_0_ from Client client0_
2012-11-09 13:34:24,463 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 13:34:24,465 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from Client client0_ limit ?
2012-11-09 13:34:24,466 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,467 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:24,471 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,472 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,472 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,473 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,473 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,474 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,475 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,478 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644644
2012-11-09 13:34:24,478 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,487 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,488 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,490 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,491 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,492 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,492 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,493 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,494 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644644
2012-11-09 13:34:24,495 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,495 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,496 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,497 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,497 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,514 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,515 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:24,516 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,517 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:24,527 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: clientIsMoving123456, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:24,539 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,540 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:24,542 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:24,545 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:24,546 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:24,548 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:24,549 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=clientIsMoving123456, street=23 rue du machin, name=Cedric Bou, countryCode=FRA, city=Lille}
2012-11-09 13:34:24,564 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:24,567 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,568 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,568 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:24,569 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,569 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,570 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,571 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644645
2012-11-09 13:34:24,571 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,572 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,577 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,577 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,578 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,579 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from Client client0_ limit ?
2012-11-09 13:34:24,580 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,581 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:24,582 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,582 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,583 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,583 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,584 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,584 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,585 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,586 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644645
2012-11-09 13:34:24,586 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,587 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,588 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,588 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,588 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,589 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,591 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,592 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,594 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,598 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,599 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,600 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,600 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,601 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:24,601 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:24,604 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 13:34:24,604 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:24,605 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:24,605 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=28001, clientCode=clientIsMoving123456, street=111 rue du soleil, name=Cedric Bou, countryCode=ESN, city=Madrid}
2012-11-09 13:34:24,606 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 13:34:24,610 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,611 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,611 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:24,612 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,613 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,613 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,614 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644646
2012-11-09 13:34:24,614 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,615 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,616 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,616 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,617 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,618 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select count(*) as col_0_0_ from Client client0_ limit ?
2012-11-09 13:34:24,619 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,619 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: 
2012-11-09 13:34:24,620 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,620 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,621 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,621 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,622 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,622 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,623 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,623 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644646
2012-11-09 13:34:24,624 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,625 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,626 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,627 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,628 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 13:34:24,629 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,630 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,631 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#clientIsMoving123456]
2012-11-09 13:34:24,631 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,632 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,632 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,633 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,646 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644646
2012-11-09 13:34:24,647 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 13:34:24,648 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,649 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,650 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 13:34:24,652 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,653 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,654 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,654 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,655 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644646
2012-11-09 13:34:24,656 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 13:34:24,657 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 13:34:24,658 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 13:34:24,659 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 13:34:24,660 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 13:34:24,661 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#newClient1234567]
2012-11-09 13:34:24,663 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 13:34:24,664 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 13:34:24,665 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 13:34:24,666 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: newClient1234567, using strategy: org.hibernate.id.Assigned
2012-11-09 13:34:24,667 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 13:34:24,668 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 13:34:24,669 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 13:34:24,670 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 13:34:24,671 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 13:34:24,672 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 13:34:24,673 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=newClient1234567, street=23 rue du machin, name=Cedric Bou, countryCode=FRA, city=Lille}
2012-11-09 13:34:24,678 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 13:34:24,679 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 13:34:24,680 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 13:34:24,681 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 13:34:24,681 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 13:34:24,682 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 13:34:24,683 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 13:34:24,685 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524644646
2012-11-09 13:34:24,686 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
