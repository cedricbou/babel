2012-10-29 23:33:41,419 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,420 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,420 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2012-10-29 23:33:41,421 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2012-10-29 23:33:41,454 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'newClientHandler'
2012-10-29 23:33:41,455 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'commandDispatcher'
2012-10-29 23:33:41,455 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'commandDispatcher'
2012-10-29 23:33:41,456 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.CommandDispatcher]: AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.CommandDispatcher.manager
2012-10-29 23:33:41,456 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'commandDispatcher' to allow for resolving potential circular references
2012-10-29 23:33:41,462 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'commandDispatcher': AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.CommandDispatcher.manager
2012-10-29 23:33:41,463 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'handlerManager'
2012-10-29 23:33:41,463 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'handlerManager'
2012-10-29 23:33:41,464 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'handlerManager' to allow for resolving potential circular references
2012-10-29 23:33:41,470 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,472 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'handlerManager'
2012-10-29 23:33:41,473 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'commandDispatcher' to bean named 'handlerManager'
2012-10-29 23:33:41,473 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,474 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'commandDispatcher'
2012-10-29 23:33:41,474 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'commandManager'
2012-10-29 23:33:41,475 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'commandManager'
2012-10-29 23:33:41,475 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'commandManager' to allow for resolving potential circular references
2012-10-29 23:33:41,481 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,482 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'commandManager'
2012-10-29 23:33:41,482 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'handlerBeanProcessor'
2012-10-29 23:33:41,482 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'handlerBeanProcessor'
2012-10-29 23:33:41,484 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.HandlerBeanProcessor]: AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.HandlerBeanProcessor.manager
2012-10-29 23:33:41,484 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.HandlerBeanProcessor]: AutowiredFieldElement for private com.emo.skeleton.framework.CommandManager com.emo.skeleton.framework.HandlerBeanProcessor.commands
2012-10-29 23:33:41,485 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'handlerBeanProcessor' to allow for resolving potential circular references
2012-10-29 23:33:41,490 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'handlerBeanProcessor': AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.HandlerBeanProcessor.manager
2012-10-29 23:33:41,490 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'handlerManager'
2012-10-29 23:33:41,491 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'handlerBeanProcessor' to bean named 'handlerManager'
2012-10-29 23:33:41,491 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'handlerBeanProcessor': AutowiredFieldElement for private com.emo.skeleton.framework.CommandManager com.emo.skeleton.framework.HandlerBeanProcessor.commands
2012-10-29 23:33:41,492 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'commandManager'
2012-10-29 23:33:41,492 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'handlerBeanProcessor' to bean named 'commandManager'
2012-10-29 23:33:41,492 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'handlerBeanProcessor'
2012-10-29 23:33:41,493 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'placeboHandler'
2012-10-29 23:33:41,493 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientIsMovingHandler'
2012-10-29 23:33:41,495 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'newClientHandler'
2012-10-29 23:33:41,496 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,496 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'handlerBeanProcessor'
2012-10-29 23:33:41,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'handlerManager'
2012-10-29 23:33:41,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:33:41,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:33:41,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:33:41,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:33:41,497 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:33:41,503 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientRepository'
2012-10-29 23:33:41,510 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'salesOrderRepository'
2012-10-29 23:33:41,511 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'salesOrderRepository'
2012-10-29 23:33:41,511 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'salesOrderRepository' to allow for resolving potential circular references
2012-10-29 23:33:41,511 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'salesOrderRepository': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:33:41,512 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:33:41,512 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#3'
2012-10-29 23:33:41,513 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#3'
2012-10-29 23:33:41,515 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name '(inner bean)#3'
2012-10-29 23:33:41,515 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,518 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#3'
2012-10-29 23:33:41,519 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,520 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,520 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#3'
2012-10-29 23:33:41,522 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:33:41,522 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:33:41,522 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'salesOrderRepository'
2012-10-29 23:33:41,523 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,523 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'salesOrderRepository'
2012-10-29 23:33:41,523 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:33:41,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:33:41,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:33:41,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:33:41,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:33:41,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2012-10-29 23:33:41,524 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'dataSource'
2012-10-29 23:33:41,525 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:33:41,525 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'transactionManager'
2012-10-29 23:33:41,525 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
2012-10-29 23:33:41,538 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2012-10-29 23:33:41,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:33:41,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,562 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2012-10-29 23:33:41,570 [main] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet(HibernateTransactionManager.java:268) - Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@172b4a6] of Hibernate SessionFactory for HibernateTransactionManager
2012-10-29 23:33:41,572 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,574 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
2012-10-29 23:33:41,574 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:33:41,574 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:33:41,577 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:850) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@fa77f6]
2012-10-29 23:33:41,578 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'lifecycleProcessor'
2012-10-29 23:33:41,580 [main] DEBUG org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:150) - Storing ApplicationContext for test class [class com.emo.integration.NewClientTest] in cache under key [[MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2012-10-29 23:33:41,588 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.integration.NewClientTest]: AutowiredFieldElement for private com.emo.skeleton.framework.CommandDispatcher com.emo.integration.NewClientTest.api
2012-10-29 23:33:41,588 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.integration.NewClientTest]: AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.integration.NewClientTest.repo
2012-10-29 23:33:41,589 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'com.emo.integration.NewClientTest': AutowiredFieldElement for private com.emo.skeleton.framework.CommandDispatcher com.emo.integration.NewClientTest.api
2012-10-29 23:33:41,589 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'commandDispatcher'
2012-10-29 23:33:41,589 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'com.emo.integration.NewClientTest' to bean named 'commandDispatcher'
2012-10-29 23:33:41,590 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'com.emo.integration.NewClientTest': AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.integration.NewClientTest.repo
2012-10-29 23:33:41,590 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientRepository'
2012-10-29 23:33:41,590 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'com.emo.integration.NewClientTest' to bean named 'clientRepository'
2012-10-29 23:33:41,591 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:33:41,592 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'newClient' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:33:41,592 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.emo.integration.NewClientTest' with 0 common interceptors and 1 specific interceptors
2012-10-29 23:33:41,592 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:151) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.emo.integration.NewClientTest@151313a]
2012-10-29 23:33:41,598 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:799) - Unable to apply any optimisations to advised method: public void com.emo.integration.NewClientTest.newClient()
2012-10-29 23:33:41,599 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:750) - Found finalize() method - using NO_OVERRIDE
2012-10-29 23:33:41,599 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:762) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2012-10-29 23:33:41,599 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:799) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2012-10-29 23:33:41,599 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:767) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2012-10-29 23:33:41,600 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:799) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2012-10-29 23:33:41,600 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2012-10-29 23:33:41,600 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2012-10-29 23:33:41,600 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2012-10-29 23:33:41,600 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2012-10-29 23:33:41,601 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2012-10-29 23:33:41,601 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2012-10-29 23:33:41,601 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2012-10-29 23:33:41,601 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2012-10-29 23:33:41,601 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2012-10-29 23:33:41,601 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,602 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,602 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2012-10-29 23:33:41,602 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2012-10-29 23:33:41,602 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2012-10-29 23:33:41,602 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,603 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2012-10-29 23:33:41,603 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,603 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2012-10-29 23:33:41,604 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2012-10-29 23:33:41,604 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,605 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:33:41,605 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2012-10-29 23:33:41,605 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2012-10-29 23:33:41,633 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'newClient' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:33:41,636 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:148) - Explicit transaction definition [PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''] found for test context [[TestContext@fe7381 testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@151313a, testMethod = newClient@NewClientTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:33:41,637 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:469) - Retrieved @TransactionConfiguration [null] for test class [class com.emo.integration.NewClientTest]
2012-10-29 23:33:41,638 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:486) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@b0d6c7 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.emo.integration.NewClientTest]
2012-10-29 23:33:41,639 [main] DEBUG org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:162) - Retrieved ApplicationContext for test class [class com.emo.integration.NewClientTest] from cache with key [[MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2012-10-29 23:33:41,639 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'transactionManager'
2012-10-29 23:33:41,644 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [newClient]: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:33:41,646 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:342) - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:33:41,649 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:352) - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:33:41,665 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:33:41,668 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:413) - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@11b8411[valid=true]]
2012-10-29 23:33:41,670 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:357) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@fe7381 testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@151313a, testMethod = newClient@NewClientTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:33:41,670 [main] INFO  org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:275) - Began transaction (1): transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@15b6084]; rollback [true]
2012-10-29 23:33:41,675 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'transactionManager'
2012-10-29 23:33:41,677 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:290) - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:33:41,677 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:415) - Suspending current transaction, creating new transaction with name [com.emo.sample.handlers.NewClientHandler.handle]
2012-10-29 23:33:41,679 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:342) - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:33:41,679 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:352) - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:33:41,679 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:33:41,680 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:413) - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@1102944[valid=true]]
2012-10-29 23:33:41,712 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetTransactionalEntityManager(EntityManagerFactoryUtils.java:198) - Opening JPA EntityManager
2012-10-29 23:33:41,713 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetTransactionalEntityManager(EntityManagerFactoryUtils.java:203) - Registering transaction synchronization for JPA EntityManager
2012-10-29 23:33:42,102 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:33:42,175 [main] DEBUG org.springframework.data.repository.core.support.TransactionalRepositoryProxyPostProcessor$AbstractFallbackTransactionAttributeSource.getTransactionAttribute(TransactionalRepositoryProxyPostProcessor.java:288) - Adding transactional method 'saveAndFlush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-10-29 23:33:42,176 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'transactionManager'
2012-10-29 23:33:42,176 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:290) - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:33:42,176 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:470) - Participating in existing transaction
2012-10-29 23:33:42,231 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:850) - Participating transaction failed - marking existing transaction as rollback-only
2012-10-29 23:33:42,232 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doSetRollbackOnly(HibernateTransactionManager.java:522) - Setting Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] rollback-only
2012-10-29 23:33:42,235 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:343) - Closing JPA EntityManager
2012-10-29 23:33:42,236 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
2012-10-29 23:33:42,237 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:496) - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:33:42,239 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:558) - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2012-10-29 23:33:42,239 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1012) - Resuming suspended transaction after completion of inner transaction
2012-10-29 23:33:42,240 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:357) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@fe7381 testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@151313a, testMethod = newClient@NewClientTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress, mergedContextConfiguration = [MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:33:42,240 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
2012-10-29 23:33:42,240 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:496) - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:33:42,240 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:558) - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2012-10-29 23:33:42,241 [main] INFO  org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:295) - Rolled back transaction after test execution for test context [[TestContext@fe7381 testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@151313a, testMethod = newClient@NewClientTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress, mergedContextConfiguration = [MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:33:42,243 [main] DEBUG org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@fe7381 testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@151313a, testMethod = newClient@NewClientTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress, mergedContextConfiguration = [MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], class dirties context [false], class mode [null], method dirties context [false].
2012-10-29 23:33:42,252 [main] DEBUG org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@fe7381 testClass = NewClientTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1771302 testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], dirtiesContext [false].
2012-10-29 23:33:42,258 [Thread-1] INFO  org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1025) - Closing org.springframework.context.support.GenericApplicationContext@199e2e2: startup date [Mon Oct 29 23:33:37 CET 2012]; root of context hierarchy
2012-10-29 23:33:42,259 [Thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'lifecycleProcessor'
2012-10-29 23:33:42,260 [Thread-1] INFO  org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:433) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5df43d: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2012-10-29 23:33:42,260 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)#3': [(inner bean)#3, salesOrderRepository]
2012-10-29 23:33:42,261 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean 'commandDispatcher': [com.emo.integration.NewClientTest]
2012-10-29 23:33:42,261 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)#2': [(inner bean)#2, clientRepository]
2012-10-29 23:33:42,262 [Thread-1] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'sessionFactory'
2012-10-29 23:33:42,262 [Thread-1] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'entityManagerFactory'
2012-10-29 23:33:42,262 [Thread-1] INFO  org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'sample'
2012-10-29 23:33:42,263 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#1782572': [entityManagerFactory]
2012-10-29 23:33:42,263 [Thread-1] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'dataSource'
2012-10-29 23:33:42,263 [Thread-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2012-10-29 23:33:42,263 [Thread-1] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:33:42,263 [Thread-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) - Returning JDBC Connection to DataSource
2012-10-29 23:33:42,264 [Thread-1] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:33:42,265 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)': [(inner bean), dataSource]
2012-10-29 23:39:15,728 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.emo.integration.NewClientTest].
2012-10-29 23:39:15,808 [main] DEBUG org.springframework.test.context.support.DelegatingSmartContextLoader.delegateProcessing(DelegatingSmartContextLoader.java:75) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@1da02d7 declaringClass = 'com.emo.integration.NewClientTest', locations = '{classpath:applicationContext-init.xml}', classes = '{}', inheritLocations = true, contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2012-10-29 23:39:15,814 [main] DEBUG org.springframework.test.context.ContextLoaderUtils.resolveActiveProfiles(ContextLoaderUtils.java:236) - Could not find an 'annotation declaring class' for annotation type [interface org.springframework.test.context.ActiveProfiles] and class [class com.emo.integration.NewClientTest]
2012-10-29 23:39:15,818 [main] INFO  org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.emo.integration.NewClientTest]: using defaults.
2012-10-29 23:39:15,852 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,852 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,855 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,855 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,856 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,857 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,861 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,861 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:39:15,865 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@65e468 testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@1769b56, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d05b0a testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]].
2012-10-29 23:39:15,865 [main] DEBUG org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:226) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1d05b0a testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader'].
2012-10-29 23:39:15,866 [main] DEBUG org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:93) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d05b0a testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2012-10-29 23:39:15,969 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:15,973 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:15,976 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:15,977 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:16,052 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:16,053 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:16,054 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:16,054 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:16,075 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext-init.xml]
2012-10-29 23:39:16,085 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2012-10-29 23:39:16,116 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2012-10-29 23:39:16,122 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2012-10-29 23:39:16,124 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2012-10-29 23:39:16,188 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2012-10-29 23:39:16,196 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2012-10-29 23:39:16,211 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2012-10-29 23:39:16,230 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2012-10-29 23:39:16,276 [main] INFO  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:202) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2012-10-29 23:39:16,279 [main] INFO  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:210) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2012-10-29 23:39:16,289 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo]
2012-10-29 23:39:16,290 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:39:16,293 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\framework] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:39:16,297 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:39:16,302 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\mains] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:39:16,305 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\utils] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:39:16,309 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\web] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:39:16,313 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo]
2012-10-29 23:39:16,313 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,315 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\commands] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,317 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\handlers] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,320 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,321 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\commands] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,324 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,329 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,331 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,333 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\annotations] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,334 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\api] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,336 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,338 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:39:16,342 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\framework\CommandDispatcherTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\framework\HandlerBeanProcessorTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\ClientIsMovingTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\NewClientTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest$RunBatchRestCalls.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest$RunHessianCalls.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest$RunRestCalls.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\mains\WebMain.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\utils\CommandUtils.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\utils\EmbeddedServer.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\commands\Placebo.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\handlers\PlaceboHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\commands\ClientIsMoving.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\commands\NewClient.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\ClientIsMovingHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\NewClientHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\annotations\CommandHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\api\CommandApi.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandDispatcher.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandManager.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\Handler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerBeanProcessor.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerManager.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\ApplicationContextSingleton.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\CommandHessianServlet.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\ProcessCommandRestServlet.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\ProcessCommandsRestServlet.class]]
2012-10-29 23:39:16,411 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\handlers\PlaceboHandler.class]
2012-10-29 23:39:16,419 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\ClientIsMovingHandler.class]
2012-10-29 23:39:16,421 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\NewClientHandler.class]
2012-10-29 23:39:16,426 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandDispatcher.class]
2012-10-29 23:39:16,428 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandManager.class]
2012-10-29 23:39:16,429 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerBeanProcessor.class]
2012-10-29 23:39:16,431 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerManager.class]
2012-10-29 23:39:16,469 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext-sample.xml]
2012-10-29 23:39:16,473 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2012-10-29 23:39:16,476 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2012-10-29 23:39:16,507 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd] in classpath: org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd
2012-10-29 23:39:16,510 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2012-10-29 23:39:16,514 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2012-10-29 23:39:16,517 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2012-10-29 23:39:16,525 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
2012-10-29 23:39:16,538 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd] in classpath: org/springframework/jdbc/config/spring-jdbc-3.1.xsd
2012-10-29 23:39:16,544 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2012-10-29 23:39:16,561 [main] DEBUG org.springframework.data.repository.config.AbstractRepositoryConfigDefinitionParser.doAutoConfiguration(AbstractRepositoryConfigDefinitionParser.java:101) - Triggering auto repository detection
2012-10-29 23:39:16,562 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:16,563 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:16,564 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:16,564 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:16,576 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:39:16,576 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:39:16,579 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:39:16,585 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class]
2012-10-29 23:39:16,588 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]
2012-10-29 23:39:16,602 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:16,602 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:16,603 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:16,604 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:16,607 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:39:16,609 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:39:16,611 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:39:16,614 [main] DEBUG org.springframework.data.repository.config.AbstractRepositoryConfigDefinitionParser.registerGenericRepositoryFactoryBean(AbstractRepositoryConfigDefinitionParser.java:194) - Registering repository: clientRepository - Interface: com.emo.sample.domain.ClientRepository - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, - Custom implementation: null
2012-10-29 23:39:16,615 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:16,616 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:16,616 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:16,617 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:16,618 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:39:16,618 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:39:16,620 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:39:16,623 [main] DEBUG org.springframework.data.repository.config.AbstractRepositoryConfigDefinitionParser.registerGenericRepositoryFactoryBean(AbstractRepositoryConfigDefinitionParser.java:194) - Registering repository: salesOrderRepository - Interface: com.emo.sample.domain.SalesOrderRepository - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, - Custom implementation: null
2012-10-29 23:39:16,677 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:497) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#11c6c59]
2012-10-29 23:39:16,678 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 12 bean definitions from location pattern [classpath:applicationContext-sample.xml]
2012-10-29 23:39:16,678 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:241) - Imported 12 bean definitions from URL location [classpath:applicationContext-sample.xml]
2012-10-29 23:39:16,680 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext-hibernate4.xml]
2012-10-29 23:39:16,683 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2012-10-29 23:39:16,685 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2012-10-29 23:39:16,699 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2012-10-29 23:39:16,700 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:647) - Overriding bean definition for bean 'transactionManager': replacing [Generic bean: class [org.springframework.orm.jpa.JpaTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [applicationContext-sample.xml]] with [Generic bean: class [org.springframework.orm.hibernate4.HibernateTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [applicationContext-hibernate4.xml]]
2012-10-29 23:39:16,701 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 1 bean definitions from location pattern [classpath:applicationContext-hibernate4.xml]
2012-10-29 23:39:16,701 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:241) - Imported 1 bean definitions from URL location [classpath:applicationContext-hibernate4.xml]
2012-10-29 23:39:16,702 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 25 bean definitions from location pattern [classpath:applicationContext-init.xml]
2012-10-29 23:39:16,706 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:500) - Refreshing org.springframework.context.support.GenericApplicationContext@7eedbb: startup date [Mon Oct 29 23:39:16 CET 2012]; root of context hierarchy
2012-10-29 23:39:16,707 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:530) - Bean factory for org.springframework.context.support.GenericApplicationContext@7eedbb: org.springframework.beans.factory.support.DefaultListableBeanFactory@ed66b3: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory]; root of factory hierarchy
2012-10-29 23:39:16,758 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:39:16,759 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:39:16,811 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:39:16,814 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:39:16,901 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:39:16,902 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:39:16,904 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:139) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2012-10-29 23:39:16,904 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:39:16,905 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:39:16,905 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:39:16,905 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:39:16,907 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:39:16,907 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:39:16,908 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:39:16,908 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:39:16,916 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:39:16,917 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:39:16,917 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:39:16,917 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:39:16,918 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:39:16,918 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:39:16,918 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:39:16,919 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:39:16,919 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:39:16,920 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:39:16,920 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:39:16,920 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:39:16,920 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:39:16,921 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:39:16,922 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:39:16,923 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:39:16,936 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:39:16,965 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'entityManagerFactory'
2012-10-29 23:39:16,965 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'entityManagerFactory'
2012-10-29 23:39:16,992 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
2012-10-29 23:39:17,053 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'dataSource'
2012-10-29 23:39:17,054 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dataSource'
2012-10-29 23:39:17,062 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2012-10-29 23:39:17,091 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,092 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,092 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,093 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,094 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,094 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,095 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,095 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,096 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,096 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,097 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,097 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,101 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,101 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,102 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,102 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,104 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,104 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,105 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,105 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,117 [main] DEBUG org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) - No property editor [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseTypeEditor] found for type org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType according to 'Editor' suffix convention
2012-10-29 23:39:17,118 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)'
2012-10-29 23:39:17,126 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)'
2012-10-29 23:39:17,137 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)'
2012-10-29 23:39:17,151 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,152 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,152 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,153 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,153 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,154 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,155 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,155 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,156 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,156 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,157 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,157 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,159 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,159 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,160 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,161 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,161 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,162 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,163 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,163 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,165 [main] DEBUG org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) - No property editor [org.springframework.core.io.ResourceLoaderEditor] found for type org.springframework.core.io.ResourceLoader according to 'Editor' suffix convention
2012-10-29 23:39:17,197 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name '(inner bean)'
2012-10-29 23:39:17,199 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class org.springframework.jdbc.config.SortedResourcesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,202 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)'
2012-10-29 23:39:17,202 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class [Lorg.springframework.core.io.Resource;] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,203 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class org.springframework.jdbc.datasource.init.ResourceDatabasePopulator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,204 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)'
2012-10-29 23:39:17,205 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,205 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,206 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,206 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,207 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,207 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,208 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,208 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,209 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,209 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,210 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,210 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,211 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,212 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,212 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,213 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,213 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,214 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,214 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,215 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,216 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class org.springframework.jdbc.datasource.init.CompositeDatabasePopulator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,216 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)'
2012-10-29 23:39:17,217 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#1'
2012-10-29 23:39:17,218 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,218 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,219 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,219 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,220 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,220 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,221 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,221 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,222 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,222 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,223 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,223 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,224 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,225 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,225 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,226 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,226 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,227 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,227 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,228 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,228 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)#1' of type [class org.springframework.jdbc.datasource.init.CompositeDatabasePopulator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,229 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#1'
2012-10-29 23:39:17,234 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'dataSource'
2012-10-29 23:39:17,234 [main] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:124) - Creating embedded database 'dataSource'
2012-10-29 23:39:17,251 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2012-10-29 23:39:17,252 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:39:17,458 [main] INFO  org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:159) - Executing SQL script from class path resource [sample/jpa/config/schema.sql]
2012-10-29 23:39:17,465 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: drop table Client if exists
2012-10-29 23:39:17,465 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: drop table SalesOrder if exists
2012-10-29 23:39:17,465 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: drop table OrderItem if exists
2012-10-29 23:39:17,466 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: /*Tables*/
2012-10-29 23:39:17,472 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: create table Client(clientCode char(60) not null, name varchar(255) not null, street varchar(255) not null, zip int not null, city varchar(255) not null, countryCode char(3) not null, primary key (clientCode))
2012-10-29 23:39:17,473 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: create table SalesOrder(orderCode char(60) not null, forCustomerCode char(60) not null, primary key (orderCode))
2012-10-29 23:39:17,512 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: create table OrderItem (id bigint generated by default as identity (start with 1), lineId int not null, item varchar(255) not null, price double not null, primary key (id))
2012-10-29 23:39:17,513 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: /*Data*/
2012-10-29 23:39:17,514 [main] INFO  org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:214) - Done executing SQL script from class path resource [sample/jpa/config/schema.sql] in 55 ms.
2012-10-29 23:39:17,517 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) - Returning JDBC Connection to DataSource
2012-10-29 23:39:17,519 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'dataSource' of type [class org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,520 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dataSource'
2012-10-29 23:39:17,521 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'dataSource' of type [class org.springframework.jdbc.datasource.SimpleDriverDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,523 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,525 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,526 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,527 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,529 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,530 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,530 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,531 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,532 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,532 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,533 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,533 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,534 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,535 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,536 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,536 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,537 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,538 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,538 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,539 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,540 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#11c6c59'
2012-10-29 23:39:17,579 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,580 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,581 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,581 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,582 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,582 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,583 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,583 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,584 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,584 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,585 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,585 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,586 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,586 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,587 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,587 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,588 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:17,588 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:17,588 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:17,589 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:17,590 [main] DEBUG org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) - No property editor [org.springframework.orm.jpa.vendor.DatabaseEditor] found for type org.springframework.orm.jpa.vendor.Database according to 'Editor' suffix convention
2012-10-29 23:39:17,591 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#11c6c59' of type [class org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:17,591 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#11c6c59'
2012-10-29 23:39:17,593 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
2012-10-29 23:39:17,609 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:39:17,610 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:39:17,612 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:39:17,623 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:264) - Building JPA container EntityManagerFactory for persistence unit 'sample'
2012-10-29 23:39:17,682 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.<clinit>(Ejb3Configuration.java:141) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2012-10-29 23:39:17,937 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-29 23:39:17,954 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-29 23:39:17,958 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-29 23:39:17,962 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-29 23:39:18,021 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-29 23:39:18,563 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-29 23:39:18,616 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:39:18,694 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:39:18,716 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:39:18,750 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-29 23:39:18,761 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:39:19,374 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:19,375 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'entityManagerFactory'
2012-10-29 23:39:19,375 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'sessionFactory'
2012-10-29 23:39:19,375 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
2012-10-29 23:39:19,379 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2012-10-29 23:39:19,394 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'dataSource'
2012-10-29 23:39:19,395 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:19,396 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:19,397 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:19,397 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:19,398 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:19,399 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:19,399 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:19,399 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:19,400 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:19,400 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:19,401 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:19,401 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:19,402 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:19,402 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:19,403 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:19,403 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:19,404 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:39:19,405 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:39:19,405 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:39:19,405 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:39:19,407 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2012-10-29 23:39:19,418 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:39:19,423 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:39:19,424 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:39:19,425 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) - HHH000399: Using default transaction strategy (direct JDBC transactions)
2012-10-29 23:39:19,425 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:39:19,429 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'sessionFactory' of type [class org.springframework.orm.hibernate4.LocalSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:19,429 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
2012-10-29 23:39:19,433 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:39:19,434 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:39:19,434 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:39:19,446 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2012-10-29 23:39:19,486 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:39:19,486 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:39:19,487 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:39:19,488 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:39:19,500 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,500 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,502 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2012-10-29 23:39:19,517 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:39:19,518 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:39:19,519 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2012-10-29 23:39:19,528 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:19,533 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:39:19,534 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:39:19,535 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,538 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:39:19,542 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:799) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@97764c]
2012-10-29 23:39:19,547 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:823) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@e639eb]
2012-10-29 23:39:19,550 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:581) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ed66b3: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2012-10-29 23:39:19,551 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'placeboHandler'
2012-10-29 23:39:19,551 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'placeboHandler'
2012-10-29 23:39:19,552 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'placeboHandler' to allow for resolving potential circular references
2012-10-29 23:39:19,557 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,560 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'placeboHandler'
2012-10-29 23:39:19,560 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'clientIsMovingHandler'
2012-10-29 23:39:19,561 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'clientIsMovingHandler'
2012-10-29 23:39:19,584 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'clientIsMovingHandler' to allow for resolving potential circular references
2012-10-29 23:39:19,601 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,602 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'clientIsMovingHandler'
2012-10-29 23:39:19,602 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'newClientHandler'
2012-10-29 23:39:19,603 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'newClientHandler'
2012-10-29 23:39:19,609 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.sample.handlers.NewClientHandler]: AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.sample.handlers.NewClientHandler.repo
2012-10-29 23:39:19,609 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'newClientHandler' to allow for resolving potential circular references
2012-10-29 23:39:19,615 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'newClientHandler': AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.sample.handlers.NewClientHandler.repo
2012-10-29 23:39:19,618 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'clientRepository'
2012-10-29 23:39:19,619 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'clientRepository'
2012-10-29 23:39:19,658 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:39:19,659 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:39:19,660 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'clientRepository' to allow for resolving potential circular references
2012-10-29 23:39:19,661 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'clientRepository': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:39:19,662 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:39:19,662 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,681 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#2'
2012-10-29 23:39:19,682 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#2'
2012-10-29 23:39:19,714 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name '(inner bean)#2'
2012-10-29 23:39:19,714 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,715 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#2'
2012-10-29 23:39:19,716 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,726 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,727 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#2'
2012-10-29 23:39:19,729 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:39:19,730 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:39:19,733 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'clientRepository'
2012-10-29 23:39:19,751 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:19,753 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'clientRepository'
2012-10-29 23:39:19,831 [main] DEBUG org.springframework.data.jpa.repository.query.SimpleJpaQuery.fromQueryAnnotation(SimpleJpaQuery.java:128) - Looking up query for method findByClientCode
2012-10-29 23:39:19,834 [main] DEBUG org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:108) - Looking up named query Client.findByClientCode
2012-10-29 23:39:19,845 [main] DEBUG org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:231) - Creating new EntityManager for shared EntityManager invocation
2012-10-29 23:39:19,966 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:343) - Closing JPA EntityManager
2012-10-29 23:39:19,970 [main] DEBUG org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:93) - Did not find named query Client.findByClientCode.count
2012-10-29 23:39:19,970 [main] DEBUG org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:231) - Creating new EntityManager for shared EntityManager invocation
2012-10-29 23:39:19,971 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:343) - Closing JPA EntityManager
2012-10-29 23:39:20,066 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:113) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@fe5ada]
2012-10-29 23:39:20,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:20,083 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'newClientHandler' to bean named 'clientRepository'
2012-10-29 23:39:20,084 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:20,086 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:39:20,088 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'newClientHandler' with 0 common interceptors and 1 specific interceptors
2012-10-29 23:39:20,088 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:113) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.emo.sample.handlers.NewClientHandler@daeb2d]
2012-10-29 23:39:20,093 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'newClientHandler'
2012-10-29 23:39:20,094 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'commandDispatcher'
2012-10-29 23:39:20,094 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'commandDispatcher'
2012-10-29 23:39:20,095 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.CommandDispatcher]: AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.CommandDispatcher.manager
2012-10-29 23:39:20,095 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'commandDispatcher' to allow for resolving potential circular references
2012-10-29 23:39:20,101 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'commandDispatcher': AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.CommandDispatcher.manager
2012-10-29 23:39:20,102 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'handlerManager'
2012-10-29 23:39:20,102 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'handlerManager'
2012-10-29 23:39:20,103 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'handlerManager' to allow for resolving potential circular references
2012-10-29 23:39:20,108 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:20,111 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'handlerManager'
2012-10-29 23:39:20,111 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'commandDispatcher' to bean named 'handlerManager'
2012-10-29 23:39:20,112 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:20,112 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'commandDispatcher'
2012-10-29 23:39:20,113 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'commandManager'
2012-10-29 23:39:20,113 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'commandManager'
2012-10-29 23:39:20,114 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'commandManager' to allow for resolving potential circular references
2012-10-29 23:39:20,119 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:39:20,120 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'commandManager'
2012-10-29 23:39:20,120 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'handlerBeanProcessor'
2012-10-29 23:39:20,121 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'handlerBeanProcessor'
2012-10-29 23:39:20,122 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.HandlerBeanProcessor]: AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.HandlerBeanProcessor.manager
2012-10-29 23:39:20,123 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.HandlerBeanProcessor]: AutowiredFieldElement for private com.emo.skeleton.framework.CommandManager com.emo.skeleton.framework.HandlerBeanProcessor.commands
2012-10-29 23:39:20,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'handlerBeanProcessor' to allow for resolving potential circular references
2012-10-29 23:39:20,129 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'handlerBeanProcessor': AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.HandlerBeanProcessor.manager
2012-10-29 23:39:20,129 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'handlerManager'
2012-10-29 23:39:20,130 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'handlerBeanProcessor' to bean named 'handlerManager'
2012-10-29 23:39:20,130 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'handlerBeanProcessor': AutowiredFieldElement for private com.emo.skeleton.framework.CommandManager com.emo.skeleton.framework.HandlerBeanProcessor.commands
2012-10-29 23:39:20,130 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'commandManager'
2012-10-29 23:39:20,131 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'handlerBeanProcessor' to bean named 'commandManager'
2012-10-29 23:39:20,131 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'handlerBeanProcessor'
2012-10-29 23:39:20,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'placeboHandler'
2012-10-29 23:39:20,132 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientIsMovingHandler'
2012-10-29 23:39:20,135 [main] INFO  org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:433) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ed66b3: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2012-10-29 23:39:20,135 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)#2': [(inner bean)#2, clientRepository]
2012-10-29 23:39:20,136 [main] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'sessionFactory'
2012-10-29 23:39:20,137 [main] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'entityManagerFactory'
2012-10-29 23:39:20,137 [main] INFO  org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'sample'
2012-10-29 23:39:20,138 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#11c6c59': [entityManagerFactory]
2012-10-29 23:39:20,138 [main] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'dataSource'
2012-10-29 23:39:20,138 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2012-10-29 23:39:20,138 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:39:20,139 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) - Returning JDBC Connection to DataSource
2012-10-29 23:39:20,139 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:39:20,141 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)': [(inner bean), dataSource]
2012-10-29 23:39:20,142 [main] ERROR org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:324) - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1b6f986] to prepare test instance [com.emo.integration.NewClientTest@1769b56]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:290)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'handlerBeanProcessor' defined in file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerBeanProcessor.class]: Invocation of init method failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No unique bean of type [com.emo.sample.handlers.NewClientHandler] is defined: expected single bean but found 0: 
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1455)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:609)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:469)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:103)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No unique bean of type [com.emo.sample.handlers.NewClientHandler] is defined: expected single bean but found 0: 
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:280)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1106)
	at com.emo.skeleton.framework.HandlerBeanProcessor.afterPropertiesSet(HandlerBeanProcessor.java:43)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
	... 38 more
2012-10-29 23:39:20,171 [main] DEBUG org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@65e468 testClass = NewClientTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d05b0a testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], dirtiesContext [false].
2012-10-29 23:40:41,735 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.emo.integration.NewClientTest].
2012-10-29 23:40:41,819 [main] DEBUG org.springframework.test.context.support.DelegatingSmartContextLoader.delegateProcessing(DelegatingSmartContextLoader.java:75) - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@11d1504 declaringClass = 'com.emo.integration.NewClientTest', locations = '{classpath:applicationContext-init.xml}', classes = '{}', inheritLocations = true, contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2012-10-29 23:40:41,825 [main] DEBUG org.springframework.test.context.ContextLoaderUtils.resolveActiveProfiles(ContextLoaderUtils.java:236) - Could not find an 'annotation declaring class' for annotation type [interface org.springframework.test.context.ActiveProfiles] and class [class com.emo.integration.NewClientTest]
2012-10-29 23:40:41,829 [main] INFO  org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.emo.integration.NewClientTest]: using defaults.
2012-10-29 23:40:41,863 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,863 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,865 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,866 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,867 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,868 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,872 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,872 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.emo.integration.NewClientTest]
2012-10-29 23:40:41,875 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@8f8b6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]].
2012-10-29 23:40:41,876 [main] DEBUG org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:226) - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader'].
2012-10-29 23:40:41,876 [main] DEBUG org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:93) - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2012-10-29 23:40:41,981 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:41,987 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:41,991 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:41,991 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:42,066 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:42,067 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:42,068 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:42,068 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:42,082 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext-init.xml]
2012-10-29 23:40:42,091 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2012-10-29 23:40:42,122 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:140) - Loading schema mappings from [META-INF/spring.schemas]
2012-10-29 23:40:42,127 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:146) - Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2012-10-29 23:40:42,129 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2012-10-29 23:40:42,184 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2012-10-29 23:40:42,191 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2012-10-29 23:40:42,204 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2012-10-29 23:40:42,223 [main] DEBUG org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:156) - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2012-10-29 23:40:42,273 [main] INFO  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:202) - JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2012-10-29 23:40:42,276 [main] INFO  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:210) - JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2012-10-29 23:40:42,286 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo]
2012-10-29 23:40:42,287 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:40:42,290 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\framework] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:40:42,293 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:40:42,298 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\mains] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:40:42,300 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\utils] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:40:42,302 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\web] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/com/emo/**/*.class]
2012-10-29 23:40:42,306 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo]
2012-10-29 23:40:42,307 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,308 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\commands] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,309 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\handlers] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,310 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,312 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\commands] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,313 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,315 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,317 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,318 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\annotations] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,319 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\api] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,321 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,323 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/**/*.class]
2012-10-29 23:40:42,326 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\framework\CommandDispatcherTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\framework\HandlerBeanProcessorTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\ClientIsMovingTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\NewClientTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest$RunBatchRestCalls.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest$RunHessianCalls.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest$RunRestCalls.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\integration\PerformanceTest.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\mains\WebMain.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\utils\CommandUtils.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes\com\emo\utils\EmbeddedServer.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\commands\Placebo.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\handlers\PlaceboHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\commands\ClientIsMoving.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\commands\NewClient.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\ClientIsMovingHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\NewClientHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\annotations\CommandHandler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\api\CommandApi.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandDispatcher.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandManager.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\Handler.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerBeanProcessor.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerManager.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\ApplicationContextSingleton.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\CommandHessianServlet.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\ProcessCommandRestServlet.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\web\ProcessCommandsRestServlet.class]]
2012-10-29 23:40:42,398 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\handlers\PlaceboHandler.class]
2012-10-29 23:40:42,407 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\ClientIsMovingHandler.class]
2012-10-29 23:40:42,409 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\handlers\NewClientHandler.class]
2012-10-29 23:40:42,423 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandDispatcher.class]
2012-10-29 23:40:42,425 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\CommandManager.class]
2012-10-29 23:40:42,426 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerBeanProcessor.class]
2012-10-29 23:40:42,428 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\skeleton\framework\HandlerManager.class]
2012-10-29 23:40:42,466 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext-sample.xml]
2012-10-29 23:40:42,469 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2012-10-29 23:40:42,472 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2012-10-29 23:40:42,491 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd] in classpath: org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd
2012-10-29 23:40:42,493 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/context/spring-context-3.1.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
2012-10-29 23:40:42,498 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
2012-10-29 23:40:42,501 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/data/repository/spring-repository.xsd] in classpath: org/springframework/data/repository/config/spring-repository-1.0.xsd
2012-10-29 23:40:42,511 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
2012-10-29 23:40:42,525 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd] in classpath: org/springframework/jdbc/config/spring-jdbc-3.1.xsd
2012-10-29 23:40:42,531 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2012-10-29 23:40:42,549 [main] DEBUG org.springframework.data.repository.config.AbstractRepositoryConfigDefinitionParser.doAutoConfiguration(AbstractRepositoryConfigDefinitionParser.java:101) - Triggering auto repository detection
2012-10-29 23:40:42,550 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:42,551 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:42,551 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:42,552 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:42,563 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:40:42,563 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:40:42,566 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:40:42,573 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class]
2012-10-29 23:40:42,575 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:244) - Identified candidate component class: file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]
2012-10-29 23:40:42,590 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:42,590 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:42,591 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:42,591 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:42,595 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:40:42,596 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:40:42,598 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:40:42,601 [main] DEBUG org.springframework.data.repository.config.AbstractRepositoryConfigDefinitionParser.registerGenericRepositoryFactoryBean(AbstractRepositoryConfigDefinitionParser.java:194) - Registering repository: clientRepository - Interface: com.emo.sample.domain.ClientRepository - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, - Custom implementation: null
2012-10-29 23:40:42,603 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:42,603 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:42,603 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:42,604 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:42,605 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:40:42,606 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:40:42,607 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:40:42,611 [main] DEBUG org.springframework.data.repository.config.AbstractRepositoryConfigDefinitionParser.registerGenericRepositoryFactoryBean(AbstractRepositoryConfigDefinitionParser.java:194) - Registering repository: salesOrderRepository - Interface: com.emo.sample.domain.SalesOrderRepository - Factory: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, - Custom implementation: null
2012-10-29 23:40:42,665 [main] DEBUG org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:497) - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#b56343]
2012-10-29 23:40:42,666 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 12 bean definitions from location pattern [classpath:applicationContext-sample.xml]
2012-10-29 23:40:42,666 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:241) - Imported 12 bean definitions from URL location [classpath:applicationContext-sample.xml]
2012-10-29 23:40:42,668 [main] INFO  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) - Loading XML bean definitions from class path resource [applicationContext-hibernate4.xml]
2012-10-29 23:40:42,673 [main] DEBUG org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2012-10-29 23:40:42,676 [main] DEBUG org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:118) - Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
2012-10-29 23:40:42,711 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:108) - Loading bean definitions
2012-10-29 23:40:42,712 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:647) - Overriding bean definition for bean 'transactionManager': replacing [Generic bean: class [org.springframework.orm.jpa.JpaTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [applicationContext-sample.xml]] with [Generic bean: class [org.springframework.orm.hibernate4.HibernateTransactionManager]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [applicationContext-hibernate4.xml]]
2012-10-29 23:40:42,713 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 1 bean definitions from location pattern [classpath:applicationContext-hibernate4.xml]
2012-10-29 23:40:42,713 [main] DEBUG org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:241) - Imported 1 bean definitions from URL location [classpath:applicationContext-hibernate4.xml]
2012-10-29 23:40:42,713 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) - Loaded 25 bean definitions from location pattern [classpath:applicationContext-init.xml]
2012-10-29 23:40:42,720 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:500) - Refreshing org.springframework.context.support.GenericApplicationContext@129b00a: startup date [Mon Oct 29 23:40:42 CET 2012]; root of context hierarchy
2012-10-29 23:40:42,721 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:530) - Bean factory for org.springframework.context.support.GenericApplicationContext@129b00a: org.springframework.beans.factory.support.DefaultListableBeanFactory@1438980: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory]; root of factory hierarchy
2012-10-29 23:40:42,770 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:40:42,770 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:40:42,835 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:40:42,838 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:40:42,930 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:40:42,931 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:40:42,932 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:139) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2012-10-29 23:40:42,932 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:40:42,933 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:40:42,934 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:40:42,934 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:40:42,935 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:40:42,936 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:40:42,936 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:40:42,937 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:40:42,945 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:40:42,945 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:40:42,946 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:40:42,946 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:40:42,946 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2012-10-29 23:40:42,947 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:40:42,947 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:40:42,948 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:40:42,948 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:40:42,948 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:40:42,949 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:40:42,949 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:40:42,949 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:40:42,949 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:40:42,951 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:40:42,951 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:40:42,966 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:40:42,994 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'entityManagerFactory'
2012-10-29 23:40:42,995 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'entityManagerFactory'
2012-10-29 23:40:43,022 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
2012-10-29 23:40:43,083 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'dataSource'
2012-10-29 23:40:43,084 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dataSource'
2012-10-29 23:40:43,094 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2012-10-29 23:40:43,122 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,123 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,124 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,124 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,125 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,126 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,126 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,126 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,127 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,128 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,128 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,128 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,132 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,133 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,134 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,134 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,136 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,136 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,137 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,137 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,150 [main] DEBUG org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) - No property editor [org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseTypeEditor] found for type org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType according to 'Editor' suffix convention
2012-10-29 23:40:43,152 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)'
2012-10-29 23:40:43,160 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)'
2012-10-29 23:40:43,172 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)'
2012-10-29 23:40:43,186 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,187 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,187 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,188 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,188 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,189 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,189 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,190 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,191 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,191 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,192 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,192 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,193 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,194 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,195 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,195 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,196 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,197 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,197 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,198 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,206 [main] DEBUG org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) - No property editor [org.springframework.core.io.ResourceLoaderEditor] found for type org.springframework.core.io.ResourceLoader according to 'Editor' suffix convention
2012-10-29 23:40:43,234 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name '(inner bean)'
2012-10-29 23:40:43,236 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class org.springframework.jdbc.config.SortedResourcesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,239 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)'
2012-10-29 23:40:43,239 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class [Lorg.springframework.core.io.Resource;] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,240 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class org.springframework.jdbc.datasource.init.ResourceDatabasePopulator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,241 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)'
2012-10-29 23:40:43,241 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,242 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,242 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,243 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,244 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,244 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,244 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,245 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,246 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,246 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,246 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,247 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,248 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,248 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,248 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,249 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,250 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,250 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,251 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,252 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,252 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)' of type [class org.springframework.jdbc.datasource.init.CompositeDatabasePopulator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,253 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)'
2012-10-29 23:40:43,253 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#1'
2012-10-29 23:40:43,254 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,255 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,255 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,256 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,256 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,257 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,257 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,258 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,258 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,259 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,259 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,260 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,261 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,261 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,262 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,263 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,263 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,264 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,264 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,265 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,265 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean '(inner bean)#1' of type [class org.springframework.jdbc.datasource.init.CompositeDatabasePopulator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,266 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#1'
2012-10-29 23:40:43,271 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'dataSource'
2012-10-29 23:40:43,272 [main] INFO  org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:124) - Creating embedded database 'dataSource'
2012-10-29 23:40:43,288 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2012-10-29 23:40:43,289 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:43,494 [main] INFO  org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:159) - Executing SQL script from class path resource [sample/jpa/config/schema.sql]
2012-10-29 23:40:43,500 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: drop table Client if exists
2012-10-29 23:40:43,500 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: drop table SalesOrder if exists
2012-10-29 23:40:43,501 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: drop table OrderItem if exists
2012-10-29 23:40:43,501 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: /*Tables*/
2012-10-29 23:40:43,507 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: create table Client(clientCode char(60) not null, name varchar(255) not null, street varchar(255) not null, zip int not null, city varchar(255) not null, countryCode char(3) not null, primary key (clientCode))
2012-10-29 23:40:43,508 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: create table SalesOrder(orderCode char(60) not null, forCustomerCode char(60) not null, primary key (orderCode))
2012-10-29 23:40:43,508 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: create table OrderItem (id bigint generated by default as identity (start with 1), lineId int not null, item varchar(255) not null, price double not null, primary key (id))
2012-10-29 23:40:43,509 [main] DEBUG org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:187) - 0 returned as updateCount for SQL: /*Data*/
2012-10-29 23:40:43,509 [main] INFO  org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.executeSqlScript(ResourceDatabasePopulator.java:214) - Done executing SQL script from class path resource [sample/jpa/config/schema.sql] in 15 ms.
2012-10-29 23:40:43,510 [main] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) - Returning JDBC Connection to DataSource
2012-10-29 23:40:43,511 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'dataSource' of type [class org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,511 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dataSource'
2012-10-29 23:40:43,511 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'dataSource' of type [class org.springframework.jdbc.datasource.SimpleDriverDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,513 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,513 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,514 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,514 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,515 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,515 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,516 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,516 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,517 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,517 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,517 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,518 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,518 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,519 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,520 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,520 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,521 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,521 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,521 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,522 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,522 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#b56343'
2012-10-29 23:40:43,560 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,560 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,561 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,561 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,562 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,562 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,563 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,563 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,564 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,564 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,565 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,565 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,566 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,566 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,567 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,567 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,568 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:43,568 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:43,569 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:43,569 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:43,570 [main] DEBUG org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:442) - No property editor [org.springframework.orm.jpa.vendor.DatabaseEditor] found for type org.springframework.orm.jpa.vendor.Database according to 'Editor' suffix convention
2012-10-29 23:40:43,571 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#b56343' of type [class org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:43,572 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#b56343'
2012-10-29 23:40:43,573 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
2012-10-29 23:40:43,590 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:550) - Looking for matching resources in directory tree [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain]
2012-10-29 23:40:43,590 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:612) - Searching directory [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain] for files matching pattern [C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/classes/com/emo/sample/domain/**/*.class]
2012-10-29 23:40:43,592 [main] DEBUG org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:351) - Resolved location pattern [classpath*:com/emo/sample/domain/**/*.class] to resources [file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\Client.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\ClientRepository.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\OrderLine.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrder.class], file [C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes\com\emo\sample\domain\SalesOrderRepository.class]]
2012-10-29 23:40:43,602 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:264) - Building JPA container EntityManagerFactory for persistence unit 'sample'
2012-10-29 23:40:43,662 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.<clinit>(Ejb3Configuration.java:141) - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2012-10-29 23:40:43,915 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-29 23:40:43,932 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-29 23:40:43,936 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-29 23:40:43,947 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-29 23:40:43,998 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-29 23:40:44,536 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-29 23:40:44,587 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:44,666 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:40:44,688 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:40:44,720 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-29 23:40:44,731 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:40:45,356 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'entityManagerFactory' of type [class org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:45,357 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'entityManagerFactory'
2012-10-29 23:40:45,357 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'sessionFactory'
2012-10-29 23:40:45,357 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
2012-10-29 23:40:45,360 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2012-10-29 23:40:45,376 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'dataSource'
2012-10-29 23:40:45,377 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:45,378 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:45,378 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:45,379 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:45,380 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:45,380 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:45,381 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:45,381 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:45,382 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:45,382 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:45,383 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:45,383 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:45,384 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:45,384 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:45,385 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:45,385 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:45,386 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:114) - Initializing new StandardEnvironment
2012-10-29 23:40:45,386 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemProperties] PropertySource with lowest search precedence
2012-10-29 23:40:45,386 [main] DEBUG org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:104) - Adding [systemEnvironment] PropertySource with lowest search precedence
2012-10-29 23:40:45,387 [main] DEBUG org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:120) - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2012-10-29 23:40:45,388 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2012-10-29 23:40:45,400 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:45,405 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:40:45,406 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:40:45,407 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) - HHH000399: Using default transaction strategy (direct JDBC transactions)
2012-10-29 23:40:45,407 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:40:45,411 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'sessionFactory' of type [class org.springframework.orm.hibernate4.LocalSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:45,411 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
2012-10-29 23:40:45,415 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:40:45,416 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:40:45,416 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:40:45,428 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2012-10-29 23:40:45,464 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:40:45,465 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:40:45,465 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:40:45,467 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0' to allow for resolving potential circular references
2012-10-29 23:40:45,480 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,480 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,483 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2012-10-29 23:40:45,498 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:40:45,498 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:40:45,499 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2012-10-29 23:40:45,509 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' of type [class org.springframework.transaction.annotation.AnnotationTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:45,515 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:40:45,516 [main] INFO  org.springframework.context.support.AbstractApplicationContext$BeanPostProcessorChecker.postProcessAfterInitialization(AbstractApplicationContext.java:1355) - Bean 'org.springframework.transaction.config.internalTransactionAdvisor' of type [class org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2012-10-29 23:40:45,517 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,520 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:40:45,526 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:799) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@17f5da2]
2012-10-29 23:40:45,531 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:823) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@505bad]
2012-10-29 23:40:45,535 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:581) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1438980: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2012-10-29 23:40:45,535 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'placeboHandler'
2012-10-29 23:40:45,536 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'placeboHandler'
2012-10-29 23:40:45,536 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'placeboHandler' to allow for resolving potential circular references
2012-10-29 23:40:45,552 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,555 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'placeboHandler'
2012-10-29 23:40:45,555 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'clientIsMovingHandler'
2012-10-29 23:40:45,555 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'clientIsMovingHandler'
2012-10-29 23:40:45,556 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'clientIsMovingHandler' to allow for resolving potential circular references
2012-10-29 23:40:45,562 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,563 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'clientIsMovingHandler'
2012-10-29 23:40:45,564 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'newClientHandler'
2012-10-29 23:40:45,564 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'newClientHandler'
2012-10-29 23:40:45,568 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.sample.handlers.NewClientHandler]: AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.sample.handlers.NewClientHandler.repo
2012-10-29 23:40:45,568 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'newClientHandler' to allow for resolving potential circular references
2012-10-29 23:40:45,574 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'newClientHandler': AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.sample.handlers.NewClientHandler.repo
2012-10-29 23:40:45,577 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'clientRepository'
2012-10-29 23:40:45,578 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'clientRepository'
2012-10-29 23:40:45,610 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:40:45,611 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]: PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:40:45,612 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'clientRepository' to allow for resolving potential circular references
2012-10-29 23:40:45,613 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'clientRepository': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:40:45,614 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:40:45,615 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,635 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#2'
2012-10-29 23:40:45,639 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#2'
2012-10-29 23:40:45,668 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name '(inner bean)#2'
2012-10-29 23:40:45,669 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,670 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#2'
2012-10-29 23:40:45,671 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,680 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,681 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#2'
2012-10-29 23:40:45,684 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:40:45,684 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:40:45,687 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'clientRepository'
2012-10-29 23:40:45,705 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:45,707 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'clientRepository'
2012-10-29 23:40:45,785 [main] DEBUG org.springframework.data.jpa.repository.query.SimpleJpaQuery.fromQueryAnnotation(SimpleJpaQuery.java:128) - Looking up query for method findByClientCode
2012-10-29 23:40:45,789 [main] DEBUG org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:108) - Looking up named query Client.findByClientCode
2012-10-29 23:40:45,799 [main] DEBUG org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:231) - Creating new EntityManager for shared EntityManager invocation
2012-10-29 23:40:45,917 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:343) - Closing JPA EntityManager
2012-10-29 23:40:45,921 [main] DEBUG org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:93) - Did not find named query Client.findByClientCode.count
2012-10-29 23:40:45,922 [main] DEBUG org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:231) - Creating new EntityManager for shared EntityManager invocation
2012-10-29 23:40:45,922 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:343) - Closing JPA EntityManager
2012-10-29 23:40:46,019 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:113) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [org.springframework.data.jpa.repository.support.SimpleJpaRepository@1fb1192]
2012-10-29 23:40:46,028 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,040 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'newClientHandler' to bean named 'clientRepository'
2012-10-29 23:40:46,041 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,043 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:40:46,045 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'newClientHandler' with 0 common interceptors and 1 specific interceptors
2012-10-29 23:40:46,045 [main] DEBUG org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:113) - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.emo.sample.handlers.NewClientHandler@1bb3dbf]
2012-10-29 23:40:46,050 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'newClientHandler'
2012-10-29 23:40:46,050 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'commandDispatcher'
2012-10-29 23:40:46,050 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'commandDispatcher'
2012-10-29 23:40:46,051 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.CommandDispatcher]: AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.CommandDispatcher.manager
2012-10-29 23:40:46,052 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'commandDispatcher' to allow for resolving potential circular references
2012-10-29 23:40:46,057 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'commandDispatcher': AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.CommandDispatcher.manager
2012-10-29 23:40:46,058 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'handlerManager'
2012-10-29 23:40:46,059 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'handlerManager'
2012-10-29 23:40:46,059 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'handlerManager' to allow for resolving potential circular references
2012-10-29 23:40:46,065 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,067 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'handlerManager'
2012-10-29 23:40:46,068 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'commandDispatcher' to bean named 'handlerManager'
2012-10-29 23:40:46,068 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,069 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'commandDispatcher'
2012-10-29 23:40:46,069 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'commandManager'
2012-10-29 23:40:46,070 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'commandManager'
2012-10-29 23:40:46,070 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'commandManager' to allow for resolving potential circular references
2012-10-29 23:40:46,077 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,078 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'commandManager'
2012-10-29 23:40:46,079 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'handlerBeanProcessor'
2012-10-29 23:40:46,079 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'handlerBeanProcessor'
2012-10-29 23:40:46,081 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.HandlerBeanProcessor]: AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.HandlerBeanProcessor.manager
2012-10-29 23:40:46,081 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.skeleton.framework.HandlerBeanProcessor]: AutowiredFieldElement for private com.emo.skeleton.framework.CommandManager com.emo.skeleton.framework.HandlerBeanProcessor.commands
2012-10-29 23:40:46,081 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'handlerBeanProcessor' to allow for resolving potential circular references
2012-10-29 23:40:46,087 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'handlerBeanProcessor': AutowiredFieldElement for private com.emo.skeleton.framework.HandlerManager com.emo.skeleton.framework.HandlerBeanProcessor.manager
2012-10-29 23:40:46,088 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'handlerManager'
2012-10-29 23:40:46,088 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'handlerBeanProcessor' to bean named 'handlerManager'
2012-10-29 23:40:46,088 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'handlerBeanProcessor': AutowiredFieldElement for private com.emo.skeleton.framework.CommandManager com.emo.skeleton.framework.HandlerBeanProcessor.commands
2012-10-29 23:40:46,089 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'commandManager'
2012-10-29 23:40:46,089 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'handlerBeanProcessor' to bean named 'commandManager'
2012-10-29 23:40:46,090 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'handlerBeanProcessor'
2012-10-29 23:40:46,090 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'placeboHandler'
2012-10-29 23:40:46,091 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientIsMovingHandler'
2012-10-29 23:40:46,091 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'newClientHandler'
2012-10-29 23:40:46,093 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,094 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'handlerBeanProcessor'
2012-10-29 23:40:46,094 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'handlerManager'
2012-10-29 23:40:46,094 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2012-10-29 23:40:46,094 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2012-10-29 23:40:46,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2012-10-29 23:40:46,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2012-10-29 23:40:46,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2012-10-29 23:40:46,095 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientRepository'
2012-10-29 23:40:46,096 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'salesOrderRepository'
2012-10-29 23:40:46,096 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'salesOrderRepository'
2012-10-29 23:40:46,097 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'salesOrderRepository' to allow for resolving potential circular references
2012-10-29 23:40:46,097 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'salesOrderRepository': PersistenceElement for public void org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.setEntityManager(javax.persistence.EntityManager)
2012-10-29 23:40:46,097 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:40:46,098 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#3'
2012-10-29 23:40:46,099 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean '(inner bean)#3'
2012-10-29 23:40:46,100 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name '(inner bean)#3'
2012-10-29 23:40:46,101 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,102 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#3'
2012-10-29 23:40:46,102 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,103 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,104 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean '(inner bean)#3'
2012-10-29 23:40:46,105 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:40:46,105 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:40:46,105 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'salesOrderRepository'
2012-10-29 23:40:46,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,106 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'salesOrderRepository'
2012-10-29 23:40:46,106 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0'
2012-10-29 23:40:46,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0'
2012-10-29 23:40:46,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0'
2012-10-29 23:40:46,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2012-10-29 23:40:46,107 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:40:46,107 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2012-10-29 23:40:46,108 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2012-10-29 23:40:46,111 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2012-10-29 23:40:46,122 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2012-10-29 23:40:46,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2012-10-29 23:40:46,123 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2012-10-29 23:40:46,123 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'dataSource'
2012-10-29 23:40:46,124 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'entityManagerFactory'
2012-10-29 23:40:46,124 [main] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217) - Creating shared instance of singleton bean 'transactionManager'
2012-10-29 23:40:46,124 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
2012-10-29 23:40:46,142 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2012-10-29 23:40:46,162 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:40:46,162 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,175 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1498) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
2012-10-29 23:40:46,183 [main] INFO  org.springframework.orm.hibernate4.HibernateTransactionManager.afterPropertiesSet(HibernateTransactionManager.java:268) - Using DataSource [org.springframework.jdbc.datasource.SimpleDriverDataSource@11d569f] of Hibernate SessionFactory for HibernateTransactionManager
2012-10-29 23:40:46,186 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,188 [main] DEBUG org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
2012-10-29 23:40:46,188 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'sessionFactory'
2012-10-29 23:40:46,189 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0'
2012-10-29 23:40:46,192 [main] DEBUG org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:850) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@119fe97]
2012-10-29 23:40:46,193 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'lifecycleProcessor'
2012-10-29 23:40:46,195 [main] DEBUG org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:150) - Storing ApplicationContext for test class [class com.emo.integration.NewClientTest] in cache under key [[MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2012-10-29 23:40:46,203 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.integration.NewClientTest]: AutowiredFieldElement for private com.emo.skeleton.framework.CommandDispatcher com.emo.integration.NewClientTest.api
2012-10-29 23:40:46,203 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:60) - Found injected element on class [com.emo.integration.NewClientTest]: AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.integration.NewClientTest.repo
2012-10-29 23:40:46,203 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'com.emo.integration.NewClientTest': AutowiredFieldElement for private com.emo.skeleton.framework.CommandDispatcher com.emo.integration.NewClientTest.api
2012-10-29 23:40:46,204 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'commandDispatcher'
2012-10-29 23:40:46,204 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'com.emo.integration.NewClientTest' to bean named 'commandDispatcher'
2012-10-29 23:40:46,205 [main] DEBUG org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:85) - Processing injected method of bean 'com.emo.integration.NewClientTest': AutowiredFieldElement for private com.emo.sample.domain.ClientRepository com.emo.integration.NewClientTest.repo
2012-10-29 23:40:46,205 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'clientRepository'
2012-10-29 23:40:46,205 [main] DEBUG org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:424) - Autowiring by type from bean name 'com.emo.integration.NewClientTest' to bean named 'clientRepository'
2012-10-29 23:40:46,206 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2012-10-29 23:40:46,206 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'newClient' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:40:46,207 [main] DEBUG org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.emo.integration.NewClientTest' with 0 common interceptors and 1 specific interceptors
2012-10-29 23:40:46,219 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:151) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.emo.integration.NewClientTest@8f8b6]
2012-10-29 23:40:46,366 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2012-10-29 23:40:46,374 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:799) - Unable to apply any optimisations to advised method: public void com.emo.integration.NewClientTest.newClient()
2012-10-29 23:40:46,375 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:750) - Found finalize() method - using NO_OVERRIDE
2012-10-29 23:40:46,375 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:762) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2012-10-29 23:40:46,375 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:799) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2012-10-29 23:40:46,376 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:767) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
2012-10-29 23:40:46,376 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:799) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2012-10-29 23:40:46,376 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2012-10-29 23:40:46,377 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2012-10-29 23:40:46,377 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2012-10-29 23:40:46,378 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2012-10-29 23:40:46,378 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2012-10-29 23:40:46,378 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2012-10-29 23:40:46,379 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2012-10-29 23:40:46,379 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2012-10-29 23:40:46,379 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2012-10-29 23:40:46,379 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2012-10-29 23:40:46,380 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2012-10-29 23:40:46,380 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2012-10-29 23:40:46,381 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:40:46,382 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:40:46,382 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2012-10-29 23:40:46,382 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2012-10-29 23:40:46,383 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:40:46,383 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:40:46,383 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2012-10-29 23:40:46,384 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:40:46,384 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2012-10-29 23:40:46,384 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2012-10-29 23:40:46,385 [main] DEBUG org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:756) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2012-10-29 23:40:46,421 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'newClient' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:40:46,424 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:148) - Explicit transaction definition [PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''] found for test context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@8f8b6, testMethod = newClient@NewClientTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:40:46,425 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:469) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=false)] for test class [class com.emo.integration.NewClientTest]
2012-10-29 23:40:46,426 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:486) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@1a6852a transactionManagerName = 'transactionManager', defaultRollback = false]] for class [class com.emo.integration.NewClientTest]
2012-10-29 23:40:46,426 [main] DEBUG org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:162) - Retrieved ApplicationContext for test class [class com.emo.integration.NewClientTest] from cache with key [[MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2012-10-29 23:40:46,427 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'transactionManager'
2012-10-29 23:40:46,445 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [newClient]: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:40:46,446 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:342) - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:40:46,450 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:352) - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:40:46,466 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:46,469 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:413) - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@cecddc[valid=true]]
2012-10-29 23:40:46,470 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:357) - No method-level @Rollback override: using default rollback [false] for test context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@8f8b6, testMethod = newClient@NewClientTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:40:46,471 [main] INFO  org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:275) - Began transaction (1): transaction manager [org.springframework.orm.hibernate4.HibernateTransactionManager@221613]; rollback [false]
2012-10-29 23:40:46,472 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-10-29 23:40:46,479 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'transactionManager'
2012-10-29 23:40:46,481 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:290) - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:40:46,482 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:415) - Suspending current transaction, creating new transaction with name [com.emo.sample.handlers.NewClientHandler.handle]
2012-10-29 23:40:46,484 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:342) - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:40:46,484 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:352) - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:40:46,484 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:46,485 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:413) - Exposing Hibernate transaction as JDBC transaction [org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler@4ee740[valid=true]]
2012-10-29 23:40:46,489 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetTransactionalEntityManager(EntityManagerFactoryUtils.java:198) - Opening JPA EntityManager
2012-10-29 23:40:46,490 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetTransactionalEntityManager(EntityManagerFactoryUtils.java:203) - Registering transaction synchronization for JPA EntityManager
2012-10-29 23:40:46,862 [main] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:46,931 [main] DEBUG org.springframework.data.repository.core.support.TransactionalRepositoryProxyPostProcessor$AbstractFallbackTransactionAttributeSource.getTransactionAttribute(TransactionalRepositoryProxyPostProcessor.java:288) - Adding transactional method 'saveAndFlush' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-10-29 23:40:46,932 [main] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'transactionManager'
2012-10-29 23:40:46,932 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:290) - Found thread-bound Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] for Hibernate transaction
2012-10-29 23:40:46,932 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:470) - Participating in existing transaction
2012-10-29 23:40:46,994 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:850) - Participating transaction failed - marking existing transaction as rollback-only
2012-10-29 23:40:46,995 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doSetRollbackOnly(HibernateTransactionManager.java:522) - Setting Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] rollback-only
2012-10-29 23:40:46,998 [main] DEBUG org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:343) - Closing JPA EntityManager
2012-10-29 23:40:47,000 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
2012-10-29 23:40:47,000 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:496) - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:40:47,002 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:558) - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2012-10-29 23:40:47,002 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1012) - Resuming suspended transaction after completion of inner transaction
2012-10-29 23:40:47,003 [main] DEBUG org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:357) - No method-level @Rollback override: using default rollback [false] for test context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@8f8b6, testMethod = newClient@NewClientTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress, mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:40:47,004 [main] DEBUG org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752) - Initiating transaction commit
2012-10-29 23:40:47,004 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doCommit(HibernateTransactionManager.java:476) - Committing Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])]
2012-10-29 23:40:47,005 [main] DEBUG org.springframework.orm.hibernate4.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:558) - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[] unresolvedInsertDependencies=UnresolvedEntityInsertActions[]])] after transaction
2012-10-29 23:40:47,005 [main] INFO  org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:295) - Committed transaction after test execution for test context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@8f8b6, testMethod = newClient@NewClientTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress, mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2012-10-29 23:40:47,007 [main] DEBUG org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = com.emo.integration.NewClientTest@8f8b6, testMethod = newClient@NewClientTest, testException = org.springframework.dao.InvalidDataAccessApiUsageException: no transaction is in progress; nested exception is javax.persistence.TransactionRequiredException: no transaction is in progress, mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], class dirties context [false], class mode [null], method dirties context [false].
2012-10-29 23:40:47,017 [main] DEBUG org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@1d05b0a testClass = NewClientTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@100862e testClass = NewClientTest, locations = '{classpath:applicationContext-init.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], dirtiesContext [false].
2012-10-29 23:40:47,023 [Thread-1] INFO  org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1025) - Closing org.springframework.context.support.GenericApplicationContext@129b00a: startup date [Mon Oct 29 23:40:42 CET 2012]; root of context hierarchy
2012-10-29 23:40:47,026 [Thread-1] DEBUG org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:245) - Returning cached instance of singleton bean 'lifecycleProcessor'
2012-10-29 23:40:47,027 [Thread-1] INFO  org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:433) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1438980: defining beans [placeboHandler,clientIsMovingHandler,newClientHandler,commandDispatcher,commandManager,handlerBeanProcessor,handlerManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,clientRepository,salesOrderRepository,org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor#0,org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor#0,org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,dataSource,entityManagerFactory,transactionManager,sessionFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2012-10-29 23:40:47,027 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)#3': [(inner bean)#3, salesOrderRepository]
2012-10-29 23:40:47,028 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean 'commandDispatcher': [com.emo.integration.NewClientTest]
2012-10-29 23:40:47,028 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)#2': [(inner bean)#2, clientRepository]
2012-10-29 23:40:47,029 [Thread-1] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'sessionFactory'
2012-10-29 23:40:47,029 [Thread-1] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'entityManagerFactory'
2012-10-29 23:40:47,030 [Thread-1] INFO  org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:441) - Closing JPA EntityManagerFactory for persistence unit 'sample'
2012-10-29 23:40:47,030 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#b56343': [entityManagerFactory]
2012-10-29 23:40:47,030 [Thread-1] DEBUG org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:199) - Invoking destroy() on bean with name 'dataSource'
2012-10-29 23:40:47,030 [Thread-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110) - Fetching JDBC Connection from DataSource
2012-10-29 23:40:47,031 [Thread-1] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:47,031 [Thread-1] DEBUG org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:332) - Returning JDBC Connection to DataSource
2012-10-29 23:40:47,031 [Thread-1] DEBUG org.springframework.jdbc.datasource.SimpleDriverDataSource.getConnectionFromDriver(SimpleDriverDataSource.java:138) - Creating new JDBC Driver Connection to [jdbc:hsqldb:mem:dataSource]
2012-10-29 23:40:47,033 [Thread-1] DEBUG org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:488) - Retrieved dependent beans for bean '(inner bean)': [(inner bean), dataSource]
2012-10-29 23:42:20,370 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-29 23:42:20,393 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-29 23:42:20,397 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-29 23:42:20,400 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-29 23:42:20,452 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-29 23:42:21,003 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-29 23:42:21,134 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:42:21,157 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:42:21,180 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-29 23:42:21,190 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:42:21,842 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:42:21,843 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:42:21,844 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) - HHH000399: Using default transaction strategy (direct JDBC transactions)
2012-10-29 23:42:21,845 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:42:59,453 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-29 23:42:59,475 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-29 23:42:59,480 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-29 23:42:59,483 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-29 23:42:59,535 [main] INFO  org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:526) - HHH000204: Processing PersistenceUnitInfo [
	name: sample
	...]
2012-10-29 23:43:00,089 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-29 23:43:00,219 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:43:00,242 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:43:00,268 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-29 23:43:00,279 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:43:00,940 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:43:00,941 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:43:00,942 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) - HHH000399: Using default transaction strategy (direct JDBC transactions)
2012-10-29 23:43:00,943 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:43:15,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:15,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:15,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:15,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@160291
2012-10-29 23:43:15,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@aa4113
2012-10-29 23:43:15,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@b9c149
2012-10-29 23:43:15,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:15,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:15,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:15,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:15,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:15,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:15,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:15,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:15,103 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:15,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:15,108 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:15,108 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:15,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:15,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:15,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:15,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:15,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:15,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:15,130 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:15,130 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:15,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:15,135 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19eaa86
2012-10-29 23:43:15,136 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19eaa86
2012-10-29 23:43:15,139 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f75b53
2012-10-29 23:43:15,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f75b53
2012-10-29 23:43:15,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@100951
2012-10-29 23:43:15,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@100951
2012-10-29 23:43:15,146 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@b95a06
2012-10-29 23:43:15,146 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b95a06
2012-10-29 23:43:15,151 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1608a6e
2012-10-29 23:43:15,151 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1608a6e
2012-10-29 23:43:15,155 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1de6191
2012-10-29 23:43:15,156 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1de6191
2012-10-29 23:43:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:15,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:15,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:15,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c5ba6
2012-10-29 23:43:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:15,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:15,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:15,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e63f5
2012-10-29 23:43:15,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@2c18f3
2012-10-29 23:43:15,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c18f3
2012-10-29 23:43:15,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@86c645
2012-10-29 23:43:15,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@86c645
2012-10-29 23:43:15,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@da923d
2012-10-29 23:43:15,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@da923d
2012-10-29 23:43:15,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@508a76
2012-10-29 23:43:15,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@508a76
2012-10-29 23:43:15,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8af1d3
2012-10-29 23:43:15,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8af1d3
2012-10-29 23:43:15,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a78f21
2012-10-29 23:43:15,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@111735e
2012-10-29 23:43:15,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:15,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:15,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:15,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:15,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:15,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:15,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1904930
2012-10-29 23:43:15,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:15,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:15,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:15,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:15,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:15,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:15,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1f9e79e
2012-10-29 23:43:15,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@1ad2ad6
2012-10-29 23:43:15,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ad2ad6
2012-10-29 23:43:15,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@da7d5f
2012-10-29 23:43:15,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1941929
2012-10-29 23:43:15,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1941929
2012-10-29 23:43:15,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1349eef
2012-10-29 23:43:15,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@a81bb4
2012-10-29 23:43:15,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@b0342e
2012-10-29 23:43:15,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b0342e
2012-10-29 23:43:15,248 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32ee9c
2012-10-29 23:43:15,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1cf7414
2012-10-29 23:43:15,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@cdff36
2012-10-29 23:43:15,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e7136
2012-10-29 23:43:15,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10ac6b0
2012-10-29 23:43:15,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a5487
2012-10-29 23:43:15,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1437177
2012-10-29 23:43:15,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ce55ec
2012-10-29 23:43:15,307 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-10-29 23:43:15,328 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-10-29 23:43:15,333 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-10-29 23:43:15,337 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-10-29 23:43:15,365 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-10-29 23:43:15,367 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-10-29 23:43:15,369 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-10-29 23:43:15,370 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-10-29 23:43:15,372 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-10-29 23:43:15,374 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-10-29 23:43:15,377 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-10-29 23:43:15,379 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-10-29 23:43:15,380 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-10-29 23:43:15,381 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-10-29 23:43:15,383 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-10-29 23:43:15,384 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-10-29 23:43:15,386 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-10-29 23:43:15,388 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-10-29 23:43:15,389 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-10-29 23:43:15,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:15,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:15,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:15,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@160291
2012-10-29 23:43:15,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@aa4113
2012-10-29 23:43:15,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@b9c149
2012-10-29 23:43:15,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:15,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:15,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:15,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:15,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:15,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:15,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:15,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:15,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:15,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:15,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:15,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:15,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:15,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:15,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:15,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:15,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:15,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:15,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:15,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:15,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:15,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19eaa86
2012-10-29 23:43:15,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19eaa86
2012-10-29 23:43:15,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f75b53
2012-10-29 23:43:15,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f75b53
2012-10-29 23:43:15,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@100951
2012-10-29 23:43:15,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@100951
2012-10-29 23:43:15,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@b95a06
2012-10-29 23:43:15,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b95a06
2012-10-29 23:43:15,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1608a6e
2012-10-29 23:43:15,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1608a6e
2012-10-29 23:43:15,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1de6191
2012-10-29 23:43:15,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1de6191
2012-10-29 23:43:15,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:15,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:15,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:15,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c5ba6
2012-10-29 23:43:15,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:15,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:15,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:15,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e63f5
2012-10-29 23:43:15,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@2c18f3
2012-10-29 23:43:15,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c18f3
2012-10-29 23:43:15,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@86c645
2012-10-29 23:43:15,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@86c645
2012-10-29 23:43:15,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@da923d
2012-10-29 23:43:15,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@da923d
2012-10-29 23:43:15,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@508a76
2012-10-29 23:43:15,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@508a76
2012-10-29 23:43:15,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8af1d3
2012-10-29 23:43:15,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8af1d3
2012-10-29 23:43:15,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a78f21
2012-10-29 23:43:15,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@111735e
2012-10-29 23:43:15,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:15,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:15,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:15,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:15,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:15,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:15,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1904930
2012-10-29 23:43:15,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:15,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:15,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:15,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:15,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:15,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:15,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1f9e79e
2012-10-29 23:43:15,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@1ad2ad6
2012-10-29 23:43:15,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ad2ad6
2012-10-29 23:43:15,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@da7d5f
2012-10-29 23:43:15,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1941929
2012-10-29 23:43:15,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1941929
2012-10-29 23:43:15,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1349eef
2012-10-29 23:43:15,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@a81bb4
2012-10-29 23:43:15,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@b0342e
2012-10-29 23:43:15,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b0342e
2012-10-29 23:43:15,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1eb91c6
2012-10-29 23:43:15,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@af719d
2012-10-29 23:43:15,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c00ec
2012-10-29 23:43:15,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d0b029
2012-10-29 23:43:15,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1dd9340
2012-10-29 23:43:15,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ee7088
2012-10-29 23:43:15,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11e0e6e
2012-10-29 23:43:15,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@45836a
2012-10-29 23:43:15,436 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-10-29 23:43:15,437 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-10-29 23:43:15,437 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-10-29 23:43:15,437 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-10-29 23:43:15,437 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-10-29 23:43:15,438 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-10-29 23:43:15,438 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-10-29 23:43:15,439 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-10-29 23:43:15,439 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-10-29 23:43:15,439 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-10-29 23:43:15,440 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-10-29 23:43:15,440 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-10-29 23:43:15,440 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-10-29 23:43:15,441 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-10-29 23:43:15,441 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-10-29 23:43:15,444 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1880b02
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@11e7804
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@159720f
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.OrderLine
		com.emo.sample.domain.SalesOrder]
	Mapping files names []
	Properties []
2012-10-29 23:43:15,448 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-10-29 23:43:15,468 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-10-29 23:43:15,469 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-10-29 23:43:15,523 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-10-29 23:43:15,525 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-10-29 23:43:15,528 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.NewClientTest
2012-10-29 23:43:15,560 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-10-29 23:43:15,562 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-10-29 23:43:15,563 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-10-29 23:43:15,565 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-10-29 23:43:15,567 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.mains.WebMain
2012-10-29 23:43:15,569 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.CommandUtils
2012-10-29 23:43:15,570 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.EmbeddedServer
2012-10-29 23:43:15,617 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-10-29 23:43:15,618 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-10-29 23:43:15,670 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-10-29 23:43:15,698 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-10-29 23:43:15,745 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-10-29 23:43:15,746 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-10-29 23:43:15,754 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-10-29 23:43:15,812 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-10-29 23:43:15,831 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-10-29 23:43:15,840 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-10-29 23:43:15,888 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,896 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-10-29 23:43:15,902 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-10-29 23:43:15,905 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-10-29 23:43:15,914 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,915 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-10-29 23:43:15,916 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-10-29 23:43:15,916 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-10-29 23:43:15,917 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,917 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-10-29 23:43:15,918 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-10-29 23:43:15,918 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-10-29 23:43:15,918 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,919 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-10-29 23:43:15,919 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-10-29 23:43:15,920 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-10-29 23:43:15,920 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,921 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-10-29 23:43:15,921 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-10-29 23:43:15,921 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-10-29 23:43:15,922 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,923 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-10-29 23:43:15,923 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-10-29 23:43:15,923 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-10-29 23:43:15,927 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.OrderLine
2012-10-29 23:43:15,927 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-10-29 23:43:15,928 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-10-29 23:43:15,929 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.OrderLine on table OrderLine
2012-10-29 23:43:15,931 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=internalId, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,932 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-10-29 23:43:15,933 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-10-29 23:43:15,933 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-10-29 23:43:15,934 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,934 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-10-29 23:43:15,934 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-10-29 23:43:15,935 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-10-29 23:43:15,935 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,936 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-10-29 23:43:15,936 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-10-29 23:43:15,936 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-10-29 23:43:15,937 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,937 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-10-29 23:43:15,938 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-10-29 23:43:15,938 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-10-29 23:43:15,939 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.SalesOrder
2012-10-29 23:43:15,939 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-10-29 23:43:15,940 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name SalesOrder
2012-10-29 23:43:15,940 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.SalesOrder on table SalesOrder
2012-10-29 23:43:15,956 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,957 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-10-29 23:43:15,958 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-10-29 23:43:15,958 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-10-29 23:43:15,958 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,959 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-10-29 23:43:15,959 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-10-29 23:43:15,960 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-10-29 23:43:15,961 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-10-29 23:43:15,962 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,969 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,992 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,994 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-10-29 23:43:15,996 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-10-29 23:43:15,999 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-10-29 23:43:15,999 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-10-29 23:43:16,000 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.SalesOrder.lines
2012-10-29 23:43:16,007 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-10-29 23:43:16,009 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-10-29 23:43:16,009 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-10-29 23:43:16,010 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-10-29 23:43:16,010 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-10-29 23:43:16,010 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-10-29 23:43:16,011 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-10-29 23:43:16,011 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-10-29 23:43:16,011 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-10-29 23:43:16,011 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-10-29 23:43:16,012 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-10-29 23:43:16,012 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-10-29 23:43:16,012 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-10-29 23:43:16,014 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-10-29 23:43:16,016 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-10-29 23:43:16,017 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-10-29 23:43:16,017 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-10-29 23:43:16,017 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.SalesOrder.lines
2012-10-29 23:43:16,018 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(CollectionBinder.java:1195) - Binding a OneToMany: com.emo.sample.domain.SalesOrder.lines through an association table
2012-10-29 23:43:16,032 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: SalesOrder_orderCode, element: lines_internalId
2012-10-29 23:43:16,032 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-10-29 23:43:16,032 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-10-29 23:43:16,033 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-10-29 23:43:16,033 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.OrderLine
2012-10-29 23:43:16,033 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.SalesOrder
2012-10-29 23:43:16,051 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-10-29 23:43:16,129 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 1.8.0
      major : 1
      minor : 8
2012-10-29 23:43:16,130 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 1.8.0
      major : 1
      minor : 8
2012-10-29 23:43:16,130 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 3.0
2012-10-29 23:43:16,187 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-10-29 23:43:16,210 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2012-10-29 23:43:16,243 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-10-29 23:43:16,244 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-10-29 23:43:16,244 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-10-29 23:43:16,245 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-10-29 23:43:16,245 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-10-29 23:43:16,246 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-10-29 23:43:16,246 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): disabled
2012-10-29 23:43:16,246 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-10-29 23:43:16,247 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-10-29 23:43:16,252 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-10-29 23:43:16,253 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-10-29 23:43:16,253 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-10-29 23:43:16,254 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-10-29 23:43:16,254 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-10-29 23:43:16,259 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-10-29 23:43:16,259 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-10-29 23:43:16,260 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-10-29 23:43:16,260 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-10-29 23:43:16,260 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-10-29 23:43:16,261 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-10-29 23:43:16,263 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-10-29 23:43:16,263 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-10-29 23:43:16,264 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-10-29 23:43:16,264 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-10-29 23:43:16,264 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-10-29 23:43:16,265 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-10-29 23:43:16,265 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-10-29 23:43:16,265 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-10-29 23:43:16,266 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-10-29 23:43:16,284 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-10-29 23:43:16,300 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-10-29 23:43:16,301 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre7\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre7/bin/client;C:/Program Files/Java/jre7/bin;C:/Program Files/Java/jre7/lib/i386;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;D:\springsource\sts-2.8.1.RELEASE;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@159720f, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\hsqldb\hsqldb\1.8.0.10\hsqldb-1.8.0.10.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/418/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/416/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/417/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 53755 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -test com.emo.integration.NewClientTest:newClient, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-10-29 23:43:16,485 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-10-29 23:43:16,486 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-10-29 23:43:16,488 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-10-29 23:43:16,653 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.SalesOrder
2012-10-29 23:43:16,654 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-10-29 23:43:16,655 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select salesorder_.orderCode, salesorder_.forCustomerCode as forCusto2_2_ from SalesOrder salesorder_ where salesorder_.orderCode=?
2012-10-29 23:43:16,655 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, orderCode) values (?, ?)
2012-10-29 23:43:16,655 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=? where orderCode=?
2012-10-29 23:43:16,656 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-10-29 23:43:16,662 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.OrderLine
2012-10-29 23:43:16,663 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select internalId from OrderLine where internalId =?
2012-10-29 23:43:16,663 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.internalId, orderline_.item as item1_, orderline_.lineId as lineId1_, orderline_.price as price1_ from OrderLine orderline_ where orderline_.internalId=?
2012-10-29 23:43:16,664 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, price, internalId) values (?, ?, ?, ?)
2012-10-29 23:43:16,664 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, price=? where internalId=?
2012-10-29 23:43:16,664 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where internalId=?
2012-10-29 23:43:16,665 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (internalId, item, lineId, price) values (null, ?, ?, ?)
2012-10-29 23:43:16,670 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-10-29 23:43:16,671 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-10-29 23:43:16,671 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city0_, client_.countryCode as countryC3_0_, client_.name as name0_, client_.street as street0_, client_.zip as zip0_ from Client client_ where client_.clientCode=?
2012-10-29 23:43:16,671 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-10-29 23:43:16,672 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-10-29 23:43:16,672 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-10-29 23:43:16,685 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.SalesOrder.lines
2012-10-29 23:43:16,686 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: insert into SalesOrder_OrderLine (SalesOrder_orderCode, lines_internalId) values (?, ?)
2012-10-29 23:43:16,686 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:615) -  Row update: update SalesOrder_OrderLine set lines_internalId=? where SalesOrder_orderCode=? and lines_internalId=?
2012-10-29 23:43:16,687 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: delete from SalesOrder_OrderLine where SalesOrder_orderCode=? and lines_internalId=?
2012-10-29 23:43:16,687 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: delete from SalesOrder_OrderLine where SalesOrder_orderCode=?
2012-10-29 23:43:16,720 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [NONE]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,721 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [READ]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,721 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [UPGRADE]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,722 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [UPGRADE_NOWAIT]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,723 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [FORCE]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,723 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [PESSIMISTIC_READ]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,724 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [PESSIMISTIC_WRITE]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,724 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [PESSIMISTIC_FORCE_INCREMENT]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,725 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [OPTIMISTIC]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,726 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.SalesOrder [OPTIMISTIC_FORCE_INCREMENT]: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,749 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.SalesOrder: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,750 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.SalesOrder: select salesorder0_.orderCode as orderCode2_0_, salesorder0_.forCustomerCode as forCusto2_2_0_ from SalesOrder salesorder0_ where salesorder0_.orderCode=?
2012-10-29 23:43:16,751 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [NONE]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,752 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [READ]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,752 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [UPGRADE]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,753 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [UPGRADE_NOWAIT]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,753 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [FORCE]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,754 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [PESSIMISTIC_READ]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,755 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,756 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,756 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [OPTIMISTIC]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,759 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,760 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.OrderLine: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,761 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.OrderLine: select orderline0_.internalId as internalId1_0_, orderline0_.item as item1_0_, orderline0_.lineId as lineId1_0_, orderline0_.price as price1_0_ from OrderLine orderline0_ where orderline0_.internalId=?
2012-10-29 23:43:16,762 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,763 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,764 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,764 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,765 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,766 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,766 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,767 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,767 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,768 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,769 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,769 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-10-29 23:43:16,783 [main] DEBUG org.hibernate.loader.collection.BasicCollectionLoader.<init>(BasicCollectionLoader.java:83) - Static select for collection com.emo.sample.domain.SalesOrder.lines: select lines0_.SalesOrder_orderCode as SalesOrder1_2_1_, lines0_.lines_internalId as lines2_1_, orderline1_.internalId as internalId1_0_, orderline1_.item as item1_0_, orderline1_.lineId as lineId1_0_, orderline1_.price as price1_0_ from SalesOrder_OrderLine lines0_ inner join OrderLine orderline1_ on lines0_.lines_internalId=orderline1_.internalId where lines0_.SalesOrder_orderCode=?
2012-10-29 23:43:16,820 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ea7545
2012-10-29 23:43:16,821 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: b841eedd-e2d5-438c-8edd-990daf043467 (<unnamed>)
2012-10-29 23:43:16,821 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-10-29 23:43:16,821 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-10-29 23:43:16,822 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-10-29 23:43:16,822 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-10-29 23:43:16,832 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-10-29 23:43:16,928 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:55) - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@b0c9f0
2012-10-29 23:43:16,929 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-10-29 23:43:16,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:16,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:16,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18642ec
2012-10-29 23:43:16,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@160291
2012-10-29 23:43:16,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@aa4113
2012-10-29 23:43:16,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@b9c149
2012-10-29 23:43:16,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:16,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:16,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e300ba
2012-10-29 23:43:16,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:16,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:16,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1391a01
2012-10-29 23:43:16,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:16,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:16,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@cc0ece
2012-10-29 23:43:16,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:16,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:16,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ebefac
2012-10-29 23:43:16,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:16,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:16,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1dea76
2012-10-29 23:43:16,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:16,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:16,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b6331e
2012-10-29 23:43:16,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:16,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:16,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d46b8
2012-10-29 23:43:16,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19eaa86
2012-10-29 23:43:16,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19eaa86
2012-10-29 23:43:16,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f75b53
2012-10-29 23:43:16,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f75b53
2012-10-29 23:43:16,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@100951
2012-10-29 23:43:16,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@100951
2012-10-29 23:43:16,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@b95a06
2012-10-29 23:43:16,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b95a06
2012-10-29 23:43:16,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1608a6e
2012-10-29 23:43:16,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1608a6e
2012-10-29 23:43:16,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1de6191
2012-10-29 23:43:16,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1de6191
2012-10-29 23:43:16,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:16,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:16,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11b8e9d
2012-10-29 23:43:16,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c5ba6
2012-10-29 23:43:16,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:16,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:16,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3865e1
2012-10-29 23:43:16,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e63f5
2012-10-29 23:43:16,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@2c18f3
2012-10-29 23:43:16,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c18f3
2012-10-29 23:43:16,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@86c645
2012-10-29 23:43:16,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@86c645
2012-10-29 23:43:16,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@da923d
2012-10-29 23:43:16,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@da923d
2012-10-29 23:43:16,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@508a76
2012-10-29 23:43:16,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@508a76
2012-10-29 23:43:16,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8af1d3
2012-10-29 23:43:16,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8af1d3
2012-10-29 23:43:16,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a78f21
2012-10-29 23:43:16,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@111735e
2012-10-29 23:43:16,986 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:16,986 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:16,986 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@cb6156
2012-10-29 23:43:16,986 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:16,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:16,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e77920
2012-10-29 23:43:16,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@1904930
2012-10-29 23:43:16,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:16,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:16,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@16b4d4a
2012-10-29 23:43:16,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:16,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:16,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a14b7b
2012-10-29 23:43:16,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1f9e79e
2012-10-29 23:43:16,990 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@1ad2ad6
2012-10-29 23:43:16,990 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ad2ad6
2012-10-29 23:43:16,990 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@da7d5f
2012-10-29 23:43:16,991 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@1941929
2012-10-29 23:43:16,991 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1941929
2012-10-29 23:43:16,991 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1349eef
2012-10-29 23:43:16,992 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@a81bb4
2012-10-29 23:43:16,992 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@b0342e
2012-10-29 23:43:16,992 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b0342e
2012-10-29 23:43:16,992 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b2bf1e
2012-10-29 23:43:16,993 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21757f
2012-10-29 23:43:16,993 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a92483
2012-10-29 23:43:16,993 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9c5258
2012-10-29 23:43:16,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@e2243c
2012-10-29 23:43:16,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b8f730
2012-10-29 23:43:16,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16c70ae
2012-10-29 23:43:16,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59e8a8
2012-10-29 23:43:16,995 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-10-29 23:43:16,995 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-10-29 23:43:16,996 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-10-29 23:43:16,996 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-10-29 23:43:16,996 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-10-29 23:43:16,997 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-10-29 23:43:16,997 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-10-29 23:43:16,997 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-10-29 23:43:16,997 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-10-29 23:43:16,998 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-10-29 23:43:16,998 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-10-29 23:43:16,998 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-10-29 23:43:16,999 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-10-29 23:43:16,999 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-10-29 23:43:16,999 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
