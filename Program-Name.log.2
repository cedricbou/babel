2012-11-09 11:41:00,769 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,760 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,770 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,770 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,770 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,769 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,771 [resin-port-8080-65] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576607
2012-11-09 11:41:00,772 [resin-port-8080-65] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,773 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,773 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,773 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,774 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: ce609677-aed9-4c53-91ee-bfb488be5b03, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,774 [resin-port-8080-65] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,774 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,775 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,775 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,775 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,776 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,776 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,776 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,777 [resin-port-8080-65] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576607
2012-11-09 11:41:00,778 [resin-port-8080-65] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,778 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,778 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,778 [resin-port-8080-65] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,779 [resin-port-8080-65] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,779 [resin-port-8080-65] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#1eca81b2-d07d-477e-a62a-1557c6e6a693]
2012-11-09 11:41:00,780 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,780 [resin-port-8080-65] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,781 [resin-port-8080-65] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,781 [resin-port-8080-65] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 1eca81b2-d07d-477e-a62a-1557c6e6a693, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,781 [resin-port-8080-65] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,781 [resin-port-8080-65] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,781 [resin-port-8080-65] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,782 [resin-port-8080-65] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,782 [resin-port-8080-65] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,782 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,782 [resin-port-8080-65] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,783 [resin-port-8080-65] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=73829, clientCode=1eca81b2-d07d-477e-a62a-1557c6e6a693, street=23 rue 1eca81b2-d07d-477e-a62a-1557c6e6a693, name=a81b2-d, countryCode=eca, city=1b2-d07}
2012-11-09 11:41:00,784 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,784 [resin-port-8080-65] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,784 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,785 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=18642, clientCode=ce609677-aed9-4c53-91ee-bfb488be5b03, street=23 rue ce609677-aed9-4c53-91ee-bfb488be5b03, name=09677-a, countryCode=e60, city=677-aed9-}
2012-11-09 11:41:00,785 [resin-port-8080-65] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,786 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,786 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,786 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,787 [resin-port-8080-65] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,785 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,788 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,789 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,789 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,789 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,789 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,789 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,790 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576607
2012-11-09 11:41:00,791 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,791 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,792 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,792 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,793 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,793 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,794 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,794 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,794 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576607
2012-11-09 11:41:00,795 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,795 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,795 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,796 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,796 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,796 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#910d18cf-67d2-47ce-8f36-e115ca944cf0]
2012-11-09 11:41:00,797 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,797 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,797 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,798 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 910d18cf-67d2-47ce-8f36-e115ca944cf0, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,798 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,798 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,798 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,799 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,799 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,799 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,799 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=45273, clientCode=910d18cf-67d2-47ce-8f36-e115ca944cf0, street=23 rue 910d18cf-67d2-47ce-8f36-e115ca944cf0, name=d18cf-6, countryCode=10d, city=8cf-67}
2012-11-09 11:41:00,800 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,800 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,800 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,801 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,801 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,801 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,801 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,802 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,803 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,803 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,804 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,804 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,805 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,805 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,805 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,806 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,806 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,806 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,806 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,807 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,807 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,807 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,807 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#40411bc6-1e35-4d2b-81b0-b4a38db53e5d]
2012-11-09 11:41:00,808 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,809 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,809 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,809 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 40411bc6-1e35-4d2b-81b0-b4a38db53e5d, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,809 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,810 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,810 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,810 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,810 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,811 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,811 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=47250, clientCode=40411bc6-1e35-4d2b-81b0-b4a38db53e5d, street=23 rue 40411bc6-1e35-4d2b-81b0-b4a38db53e5d, name=11bc6-1, countryCode=041, city=bc6-1e35-}
2012-11-09 11:41:00,811 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,812 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,812 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,812 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,812 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,812 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,813 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,814 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,814 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,815 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,815 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,816 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,816 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,817 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,817 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,817 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,817 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,818 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,818 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,818 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,818 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,819 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,819 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#661ab412-9501-4a28-adab-42d6c5c58e15]
2012-11-09 11:41:00,819 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,820 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,820 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,821 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 661ab412-9501-4a28-adab-42d6c5c58e15, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,821 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,821 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,822 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,822 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,822 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,822 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,822 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=60518, clientCode=661ab412-9501-4a28-adab-42d6c5c58e15, street=23 rue 661ab412-9501-4a28-adab-42d6c5c58e15, name=ab412-9, countryCode=61a, city=412-9501}
2012-11-09 11:41:00,823 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,823 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,823 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,824 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,824 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,824 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,824 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,825 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,826 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,826 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,827 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,827 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,828 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,828 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,828 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,829 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,829 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,829 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,830 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,830 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,830 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,830 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,831 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#895d2205-7a5c-4896-95cd-bdb282d9807f]
2012-11-09 11:41:00,831 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,832 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,832 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,832 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 895d2205-7a5c-4896-95cd-bdb282d9807f, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,833 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,833 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,833 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,833 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,833 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,834 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,834 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=22679, clientCode=895d2205-7a5c-4896-95cd-bdb282d9807f, street=23 rue 895d2205-7a5c-4896-95cd-bdb282d9807f, name=d2205-7, countryCode=95d, city=205-7}
2012-11-09 11:41:00,834 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,835 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,835 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,835 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,835 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,836 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,836 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,837 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,837 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,838 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,838 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,839 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,839 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,840 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,840 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,840 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,840 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,841 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,841 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,841 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,841 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,842 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,842 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#101e5f1b-f1fe-49a8-adca-a40e13bcbae2]
2012-11-09 11:41:00,842 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,843 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,843 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,844 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 101e5f1b-f1fe-49a8-adca-a40e13bcbae2, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,844 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,844 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,844 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,845 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,845 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,845 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,845 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=45843, clientCode=101e5f1b-f1fe-49a8-adca-a40e13bcbae2, street=23 rue 101e5f1b-f1fe-49a8-adca-a40e13bcbae2, name=e5f1b-f, countryCode=01e, city=f1b-f1fe-}
2012-11-09 11:41:00,846 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,846 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,846 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,847 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,847 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,847 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,847 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,848 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,849 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,849 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,850 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,850 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,851 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,851 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,851 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,851 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,852 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,852 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,852 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,852 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,853 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,853 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,853 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#87e4f149-77c3-4a9b-9ec8-ee4657ba236e]
2012-11-09 11:41:00,854 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,854 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,855 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,855 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 87e4f149-77c3-4a9b-9ec8-ee4657ba236e, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,855 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,855 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,856 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,856 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,856 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,856 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,856 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=47494, clientCode=87e4f149-77c3-4a9b-9ec8-ee4657ba236e, street=23 rue 87e4f149-77c3-4a9b-9ec8-ee4657ba236e, name=4f149-7, countryCode=7e4, city=149-77c3-4}
2012-11-09 11:41:00,857 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,857 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,858 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,858 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,858 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,859 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,859 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,860 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,860 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,861 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,861 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,862 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,862 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,863 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,863 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,863 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,863 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,864 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,864 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,864 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,864 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,865 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,865 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#f9554cb6-079e-42d2-936a-f51a415bb18a]
2012-11-09 11:41:00,865 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,866 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,866 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,867 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: f9554cb6-079e-42d2-936a-f51a415bb18a, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,867 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,867 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,867 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,868 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,868 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,868 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,868 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=53859, clientCode=f9554cb6-079e-42d2-936a-f51a415bb18a, street=23 rue f9554cb6-079e-42d2-936a-f51a415bb18a, name=54cb6-0, countryCode=955, city=cb6-07}
2012-11-09 11:41:00,868 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,869 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,869 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,869 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,870 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,870 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,870 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,871 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,872 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,872 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,873 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,873 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,874 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,874 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,874 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,875 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,875 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,875 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,875 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,876 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,876 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,876 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,876 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#72d9a90d-7197-4a65-a866-abce94afa2f0]
2012-11-09 11:41:00,877 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,877 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,878 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,884 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 72d9a90d-7197-4a65-a866-abce94afa2f0, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,884 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,885 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,885 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,885 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,885 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,885 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,886 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=84778, clientCode=72d9a90d-7197-4a65-a866-abce94afa2f0, street=23 rue 72d9a90d-7197-4a65-a866-abce94afa2f0, name=9a90d-7, countryCode=2d9, city=90d-7197-4}
2012-11-09 11:41:00,886 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,886 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,887 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,887 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,887 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,887 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,887 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,888 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,889 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,890 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,890 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,891 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,891 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,892 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,892 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,892 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,892 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576608
2012-11-09 11:41:00,893 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,893 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,893 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,893 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,893 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,894 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#555a744d-24f1-4969-910f-1b9f3e437a16]
2012-11-09 11:41:00,894 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,895 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,895 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,896 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 555a744d-24f1-4969-910f-1b9f3e437a16, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,896 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,896 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,896 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,896 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,897 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,897 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,897 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=78446, clientCode=555a744d-24f1-4969-910f-1b9f3e437a16, street=23 rue 555a744d-24f1-4969-910f-1b9f3e437a16, name=a744d-2, countryCode=55a, city=44d-2}
2012-11-09 11:41:00,897 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,898 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,898 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,898 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,898 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,899 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,899 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,900 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576609
2012-11-09 11:41:00,901 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,901 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,901 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,902 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,902 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,903 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,903 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,903 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,904 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576609
2012-11-09 11:41:00,904 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,904 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,905 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,905 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,905 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,905 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#5861f01b-8654-430a-bc8f-710055ac8f43]
2012-11-09 11:41:00,906 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,907 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,907 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,907 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 5861f01b-8654-430a-bc8f-710055ac8f43, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,908 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,908 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,908 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,908 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,908 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,909 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,909 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=23339, clientCode=5861f01b-8654-430a-bc8f-710055ac8f43, street=23 rue 5861f01b-8654-430a-bc8f-710055ac8f43, name=1f01b-8, countryCode=861, city=01b-865}
2012-11-09 11:41:00,909 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,910 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,910 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,910 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,910 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,910 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,911 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,912 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576609
2012-11-09 11:41:00,913 [resin-port-8080-53] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:00,913 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,913 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,914 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_, client0_.city as city18_, client0_.countryCode as countryC3_18_, client0_.name as name18_, client0_.street as street18_, client0_.zip as zip18_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:41:00,914 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,915 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,915 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,915 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:00,916 [resin-port-8080-53] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576609
2012-11-09 11:41:00,916 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:00,916 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:00,916 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:00,917 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:00,917 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:00,917 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#657dfefc-9195-4228-b20f-c13e3b366c08]
2012-11-09 11:41:00,918 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode18_0_, client0_.city as city18_0_, client0_.countryCode as countryC3_18_0_, client0_.name as name18_0_, client0_.street as street18_0_, client0_.zip as zip18_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:41:00,918 [resin-port-8080-53] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:41:00,919 [resin-port-8080-53] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:41:00,919 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 657dfefc-9195-4228-b20f-c13e3b366c08, using strategy: org.hibernate.id.Assigned
2012-11-09 11:41:00,919 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:41:00,920 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:41:00,920 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:41:00,920 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:41:00,920 [resin-port-8080-53] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:41:00,920 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:41:00,921 [resin-port-8080-53] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=89083, clientCode=657dfefc-9195-4228-b20f-c13e3b366c08, street=23 rue 657dfefc-9195-4228-b20f-c13e3b366c08, name=dfefc-9, countryCode=57d, city=efc-9195-4}
2012-11-09 11:41:00,921 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:41:00,922 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:41:00,922 [resin-port-8080-53] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:00,922 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:41:00,922 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:00,922 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:00,923 [resin-port-8080-53] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,158 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 11:41:01,159 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 11:41:01,175 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576611
2012-11-09 11:41:01,176 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:01,176 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:01,207 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:01,208 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:01,208 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:01,209 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select count(*) from com.emo.sample.domain.Client x
2012-11-09 11:41:01,212 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'emo'
       |     |  |  |  \-[IDENT] Node: 'sample'
       |     |  |  \-[IDENT] Node: 'domain'
       |     |  \-[IDENT] Node: 'Client'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

2012-11-09 11:41:01,212 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:41:01,214 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 11:41:01,215 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (x) -> client0_
2012-11-09 11:41:01,217 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 11:41:01,218 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} Client client0_ ) )
2012-11-09 11:41:01,219 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 11:41:01,220 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 11:41:01,220 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}

2012-11-09 11:41:01,221 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:41:01,221 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select count(*) from com.emo.sample.domain.Client x
2012-11-09 11:41:01,222 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select count(*) as col_0_0_ from Client client0_
2012-11-09 11:41:01,222 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:41:01,225 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - user lacks privilege or object not found: CLIENT [n/a]
java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: CLIENT
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy42.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:147)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:145)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1720)
	at org.hibernate.loader.Loader.doQuery(Loader.java:828)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:289)
	at org.hibernate.loader.Loader.doList(Loader.java:2447)
	at org.hibernate.loader.Loader.doList(Loader.java:2433)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2263)
	at org.hibernate.loader.Loader.list(Loader.java:2258)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:470)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:355)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1161)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:101)
	at org.hibernate.ejb.QueryImpl.getSingleResult(QueryImpl.java:280)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.count(SimpleJpaRepository.java:321)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:334)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy34.count(Unknown Source)
	at com.emo.acceptances.ClientIsMovingTest.addressChangedOnceClientHasMoved(ClientIsMovingTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: CLIENT
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaManager.getTable(Unknown Source)
	at org.hsqldb.ParserDQL.readTableName(Unknown Source)
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source)
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source)
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source)
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 71 more
2012-11-09 11:41:01,231 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -5501, SQLState: 42501
2012-11-09 11:41:01,232 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - user lacks privilege or object not found: CLIENT
2012-11-09 11:41:01,233 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-09 11:41:01,234 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 11:41:01,234 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 11:41:01,234 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:01,235 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:01,235 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:01,235 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,254 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576612
2012-11-09 11:41:01,254 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:01,254 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:01,254 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:01,255 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:01,255 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:01,255 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:41:01,256 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - user lacks privilege or object not found: CLIENT [n/a]
java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: CLIENT
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy42.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:147)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:145)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1720)
	at org.hibernate.loader.Loader.doQuery(Loader.java:828)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:289)
	at org.hibernate.loader.Loader.doList(Loader.java:2447)
	at org.hibernate.loader.Loader.doList(Loader.java:2433)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2263)
	at org.hibernate.loader.Loader.list(Loader.java:2258)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:470)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:355)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1161)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:101)
	at org.hibernate.ejb.QueryImpl.getSingleResult(QueryImpl.java:280)
	at org.hibernate.ejb.criteria.CriteriaQueryCompiler$3.getSingleResult(CriteriaQueryCompiler.java:257)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:122)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:55)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:95)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:85)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:313)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:84)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy34.findByClientCode(Unknown Source)
	at com.emo.sample.handlers.client.ClientIsMovingHandler.handle(ClientIsMovingHandler.java:25)
	at com.emo.sample.handlers.client.ClientIsMovingHandler.handle(ClientIsMovingHandler.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy37.handle(Unknown Source)
	at com.emo.skeleton.framework.CommandDispatcher.processCommand(CommandDispatcher.java:29)
	at com.emo.acceptances.ClientIsMovingTest.failIfClientDoesNotExists(ClientIsMovingTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: CLIENT
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaManager.getTable(Unknown Source)
	at org.hsqldb.ParserDQL.readTableName(Unknown Source)
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source)
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source)
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source)
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 84 more
2012-11-09 11:41:01,260 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -5501, SQLState: 42501
2012-11-09 11:41:01,260 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - user lacks privilege or object not found: CLIENT
2012-11-09 11:41:01,260 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-09 11:41:01,261 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 11:41:01,261 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 11:41:01,261 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:01,261 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:01,262 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:01,262 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,272 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576612
2012-11-09 11:41:01,273 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:01,273 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:01,273 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:01,274 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:01,274 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:01,275 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-09 11:41:01,276 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["order",<126> previously: <41>,line=1,col=44,possibleID=true]
2012-11-09 11:41:01,276 [main] DEBUG org.hibernate.hql.internal.ast.HqlParser.weakKeywords(HqlParser.java:347) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=50,possibleID=true]
2012-11-09 11:41:01,279 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  |  \-[IDENT] Node: 'domain'
    |  |     |  |  \-[IDENT] Node: 'order'
    |  |     |  \-[IDENT] Node: 'Order'
    |  |     \-[ALIAS] Node: 'x'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[ROW_STAR] Node: '*'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'x'
          |  \-[IDENT] Node: 'orderCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2012-11-09 11:41:01,280 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:41:01,281 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 11:41:01,282 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.order.Order (x) -> order0_
2012-11-09 11:41:01,283 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x -> order0_.orderCode
2012-11-09 11:41:01,283 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : orderCode -> org.hibernate.type.StringType@16fda88
2012-11-09 11:41:01,284 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : x.orderCode -> order0_.orderCode
2012-11-09 11:41:01,284 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 11:41:01,285 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} SalesOrder order0_ ) ( where ( = ( order0_.orderCode order0_.orderCode orderCode ) ? ) ) )
2012-11-09 11:41:01,285 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [SalesOrder order0_]
2012-11-09 11:41:01,285 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 11:41:01,286 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SalesOrder)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SalesOrder order0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=SalesOrder,tableAlias=order0_,origin=null,columns={,className=com.emo.sample.domain.order.Order}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'order0_.orderCode' {propertyName=orderCode,dereferenceType=ALL,propertyPath=orderCode,path=x.orderCode,tableAlias=order0_,className=com.emo.sample.domain.order.Order,classAlias=x}
          |  +-[ALIAS_REF] IdentNode: 'order0_.orderCode' {alias=x, className=com.emo.sample.domain.order.Order, tableAlias=order0_}
          |  \-[IDENT] IdentNode: 'orderCode' {originalText=orderCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.StringType@16fda88}

2012-11-09 11:41:01,286 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:41:01,287 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select count(*) from com.emo.sample.domain.order.Order x where x.orderCode = :id
2012-11-09 11:41:01,287 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select count(*) as col_0_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:41:01,287 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:41:01,288 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - user lacks privilege or object not found: SALESORDER [n/a]
java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy42.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:147)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:145)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1720)
	at org.hibernate.loader.Loader.doQuery(Loader.java:828)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:289)
	at org.hibernate.loader.Loader.doList(Loader.java:2447)
	at org.hibernate.loader.Loader.doList(Loader.java:2433)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2263)
	at org.hibernate.loader.Loader.list(Loader.java:2258)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:470)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:355)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1161)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:101)
	at org.hibernate.ejb.QueryImpl.getSingleResult(QueryImpl.java:280)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.exists(SimpleJpaRepository.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:334)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:91)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy38.exists(Unknown Source)
	at com.emo.sample.handlers.order.NewOrderHandler.assertOrderDoesNotExist(NewOrderHandler.java:28)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:21)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:13)
	at com.emo.skeleton.framework.CommandDispatcher.processCommand(CommandDispatcher.java:29)
	at com.emo.acceptances.NewOrderTest.holdLines(NewOrderTest.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaManager.getTable(Unknown Source)
	at org.hsqldb.ParserDQL.readTableName(Unknown Source)
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source)
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source)
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source)
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 75 more
2012-11-09 11:41:01,290 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -5501, SQLState: 42501
2012-11-09 11:41:01,290 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - user lacks privilege or object not found: SALESORDER
2012-11-09 11:41:01,291 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-09 11:41:01,291 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 11:41:01,291 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 11:41:01,291 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:01,292 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:01,292 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:01,292 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,296 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576612
2012-11-09 11:41:01,296 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:01,296 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:01,296 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:01,297 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:01,297 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:01,298 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - user lacks privilege or object not found: SALESORDER [n/a]
java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy42.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:147)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:145)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1720)
	at org.hibernate.loader.Loader.doQuery(Loader.java:828)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:289)
	at org.hibernate.loader.Loader.doList(Loader.java:2447)
	at org.hibernate.loader.Loader.doList(Loader.java:2433)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2263)
	at org.hibernate.loader.Loader.list(Loader.java:2258)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:470)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:355)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1161)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:101)
	at org.hibernate.ejb.QueryImpl.getSingleResult(QueryImpl.java:280)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.exists(SimpleJpaRepository.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:334)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:84)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy38.exists(Unknown Source)
	at com.emo.sample.handlers.order.NewOrderHandler.assertOrderDoesNotExist(NewOrderHandler.java:28)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:21)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:13)
	at com.emo.skeleton.framework.CommandDispatcher.processCommand(CommandDispatcher.java:29)
	at com.emo.acceptances.NewOrderTest.payLines(NewOrderTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaManager.getTable(Unknown Source)
	at org.hsqldb.ParserDQL.readTableName(Unknown Source)
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source)
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source)
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source)
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 75 more
2012-11-09 11:41:01,300 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -5501, SQLState: 42501
2012-11-09 11:41:01,301 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - user lacks privilege or object not found: SALESORDER
2012-11-09 11:41:01,301 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-09 11:41:01,301 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 11:41:01,302 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 11:41:01,302 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:01,302 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:01,302 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:01,302 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,306 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576613
2012-11-09 11:41:01,306 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:01,306 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:01,307 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:01,307 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:01,307 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:01,308 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - user lacks privilege or object not found: SALESORDER [n/a]
java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy42.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:147)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:145)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1720)
	at org.hibernate.loader.Loader.doQuery(Loader.java:828)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:289)
	at org.hibernate.loader.Loader.doList(Loader.java:2447)
	at org.hibernate.loader.Loader.doList(Loader.java:2433)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2263)
	at org.hibernate.loader.Loader.list(Loader.java:2258)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:470)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:355)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1161)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:101)
	at org.hibernate.ejb.QueryImpl.getSingleResult(QueryImpl.java:280)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.exists(SimpleJpaRepository.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:334)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:84)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy38.exists(Unknown Source)
	at com.emo.sample.handlers.order.NewOrderHandler.assertOrderDoesNotExist(NewOrderHandler.java:28)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:21)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:13)
	at com.emo.skeleton.framework.CommandDispatcher.processCommand(CommandDispatcher.java:29)
	at com.emo.acceptances.NewOrderTest.orderCanBeFound(NewOrderTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaManager.getTable(Unknown Source)
	at org.hsqldb.ParserDQL.readTableName(Unknown Source)
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source)
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source)
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source)
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 75 more
2012-11-09 11:41:01,310 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -5501, SQLState: 42501
2012-11-09 11:41:01,310 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - user lacks privilege or object not found: SALESORDER
2012-11-09 11:41:01,310 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-09 11:41:01,311 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 11:41:01,311 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 11:41:01,311 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:01,311 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:01,311 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:01,312 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,317 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524576613
2012-11-09 11:41:01,317 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:41:01,318 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:41:01,318 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:41:01,318 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:41:01,318 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:41:01,319 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:139) - user lacks privilege or object not found: SALESORDER [n/a]
java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.Util.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.continueInvocation(ConnectionProxyHandler.java:138)
	at org.hibernate.engine.jdbc.internal.proxy.AbstractProxyHandler.invoke(AbstractProxyHandler.java:81)
	at $Proxy42.prepareStatement(Unknown Source)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:147)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:166)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:145)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1720)
	at org.hibernate.loader.Loader.doQuery(Loader.java:828)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:289)
	at org.hibernate.loader.Loader.doList(Loader.java:2447)
	at org.hibernate.loader.Loader.doList(Loader.java:2433)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2263)
	at org.hibernate.loader.Loader.list(Loader.java:2258)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:470)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:355)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:196)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1161)
	at org.hibernate.internal.QueryImpl.list(QueryImpl.java:101)
	at org.hibernate.ejb.QueryImpl.getSingleResult(QueryImpl.java:280)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.exists(SimpleJpaRepository.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:334)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.data.jpa.repository.support.LockModeRepositoryPostProcessor$LockModePopulatingMethodIntercceptor.invoke(LockModeRepositoryPostProcessor.java:84)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:90)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy38.exists(Unknown Source)
	at com.emo.sample.handlers.order.NewOrderHandler.assertOrderDoesNotExist(NewOrderHandler.java:28)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:21)
	at com.emo.sample.handlers.order.NewOrderHandler.handle(NewOrderHandler.java:13)
	at com.emo.skeleton.framework.CommandDispatcher.processCommand(CommandDispatcher.java:29)
	at com.emo.acceptances.NewOrderTest.failWhenOrderAlreadyExists(NewOrderTest.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.hsqldb.HsqlException: user lacks privilege or object not found: SALESORDER
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.error.Error.error(Unknown Source)
	at org.hsqldb.SchemaManager.getTable(Unknown Source)
	at org.hsqldb.ParserDQL.readTableName(Unknown Source)
	at org.hsqldb.ParserDQL.readTableOrSubquery(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableReference(Unknown Source)
	at org.hsqldb.ParserDQL.XreadFromClause(Unknown Source)
	at org.hsqldb.ParserDQL.XreadTableExpression(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQuerySpecification(Unknown Source)
	at org.hsqldb.ParserDQL.XreadSimpleTable(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryPrimary(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryTerm(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpressionBody(Unknown Source)
	at org.hsqldb.ParserDQL.XreadQueryExpression(Unknown Source)
	at org.hsqldb.ParserDQL.compileCursorSpecification(Unknown Source)
	at org.hsqldb.ParserCommand.compilePart(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 75 more
2012-11-09 11:41:01,321 [main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:143) - SQL Error: -5501, SQLState: 42501
2012-11-09 11:41:01,321 [main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:144) - user lacks privilege or object not found: SALESORDER
2012-11-09 11:41:01,322 [main] DEBUG org.hibernate.ejb.AbstractEntityManagerImpl.markAsRollback(AbstractEntityManagerImpl.java:1132) - Mark transaction for rollback
2012-11-09 11:41:01,322 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.rollback(AbstractTransactionImpl.java:203) - rolling back
2012-11-09 11:41:01,322 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doRollback(JdbcTransaction.java:164) - rolled JDBC Connection
2012-11-09 11:41:01,322 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:41:01,322 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:41:01,323 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:41:01,323 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:41:01,327 [Thread-1] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 11:41:01,333 [Thread-1] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 11:44:30,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:30,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:30,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:30,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@145c47f
2012-11-09 11:44:30,021 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c8fe2
2012-11-09 11:44:30,023 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c76b8d
2012-11-09 11:44:30,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:30,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:30,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:30,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:30,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:30,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:30,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:30,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:30,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:30,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:30,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:30,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:30,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:30,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:30,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:30,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:30,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:30,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:30,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:30,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:30,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:30,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:30,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:30,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:30,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:30,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:30,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:30,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:30,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:30,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:30,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:30,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:30,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:30,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:30,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:30,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:30,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191d41b
2012-11-09 11:44:30,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:30,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:30,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:30,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d8446c
2012-11-09 11:44:30,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:30,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:30,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:30,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:30,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:30,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:30,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:30,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:30,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:30,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:30,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f3d5f4
2012-11-09 11:44:30,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d9ae77
2012-11-09 11:44:30,105 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:30,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:30,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:30,108 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:30,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:30,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:30,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@15216b7
2012-11-09 11:44:30,113 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:30,114 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:30,114 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:30,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:30,117 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:30,117 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:30,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1a287d9
2012-11-09 11:44:30,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:30,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:30,133 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186a830
2012-11-09 11:44:30,141 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:30,141 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:30,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d4b575
2012-11-09 11:44:30,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@af6b7f
2012-11-09 11:44:30,155 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:30,155 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:30,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1da5b5b
2012-11-09 11:44:30,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a3db4b
2012-11-09 11:44:30,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1923700
2012-11-09 11:44:30,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@590ff7
2012-11-09 11:44:30,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@127507e
2012-11-09 11:44:30,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15aef2
2012-11-09 11:44:30,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15a2c79
2012-11-09 11:44:30,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11ddb66
2012-11-09 11:44:30,201 [main] INFO  org.hibernate.annotations.common.Version.<clinit>(Version.java:37) - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
2012-11-09 11:44:30,214 [main] INFO  org.hibernate.Version.logVersion(Version.java:41) - HHH000412: Hibernate Core {4.1.1}
2012-11-09 11:44:30,218 [main] INFO  org.hibernate.cfg.Environment.<clinit>(Environment.java:239) - HHH000206: hibernate.properties not found
2012-11-09 11:44:30,221 [main] INFO  org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) - HHH000021: Bytecode provider name : javassist
2012-11-09 11:44:30,246 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 11:44:30,247 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 11:44:30,250 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:30,250 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:30,256 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 11:44:30,258 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 11:44:30,261 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 11:44:30,262 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 11:44:30,264 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 11:44:30,265 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 11:44:30,267 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 11:44:30,268 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 11:44:30,269 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 11:44:30,271 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 11:44:30,273 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 11:44:30,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:30,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:30,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:30,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@145c47f
2012-11-09 11:44:30,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c8fe2
2012-11-09 11:44:30,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c76b8d
2012-11-09 11:44:30,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:30,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:30,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:30,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:30,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:30,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:30,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:30,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:30,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:30,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:30,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:30,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:30,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:30,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:30,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:30,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:30,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:30,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:30,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:30,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:30,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:30,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:30,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:30,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:30,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:30,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:30,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:30,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:30,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:30,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:30,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:30,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:30,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:30,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:30,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:30,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:30,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191d41b
2012-11-09 11:44:30,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:30,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:30,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:30,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d8446c
2012-11-09 11:44:30,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:30,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:30,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:30,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:30,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:30,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:30,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:30,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:30,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:30,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:30,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f3d5f4
2012-11-09 11:44:30,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d9ae77
2012-11-09 11:44:30,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:30,299 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:30,299 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:30,299 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:30,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:30,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:30,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@15216b7
2012-11-09 11:44:30,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:30,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:30,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:30,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:30,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:30,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:30,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1a287d9
2012-11-09 11:44:30,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:30,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:30,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186a830
2012-11-09 11:44:30,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:30,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:30,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d4b575
2012-11-09 11:44:30,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@af6b7f
2012-11-09 11:44:30,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:30,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:30,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@459270
2012-11-09 11:44:30,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@190f83a
2012-11-09 11:44:30,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@98bb1a
2012-11-09 11:44:30,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@123d14c
2012-11-09 11:44:30,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@820353
2012-11-09 11:44:30,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d1ead
2012-11-09 11:44:30,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@390a9d
2012-11-09 11:44:30,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e80a28
2012-11-09 11:44:30,309 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 11:44:30,309 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 11:44:30,310 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:30,310 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:30,310 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 11:44:30,311 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 11:44:30,311 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 11:44:30,311 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 11:44:30,312 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 11:44:30,312 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 11:44:30,312 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 11:44:30,313 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 11:44:30,313 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 11:44:30,313 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 11:44:30,314 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 11:44:30,316 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@e80a59
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@109afb8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@ef89c6
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 11:44:30,320 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 11:44:30,335 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 11:44:30,336 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 11:44:30,408 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 11:44:30,410 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 11:44:30,412 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 11:44:30,413 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 11:44:30,415 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 11:44:30,416 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 11:44:30,418 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 11:44:30,420 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 11:44:30,421 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 11:44:30,423 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.mains.WebMain
2012-11-09 11:44:30,424 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.CommandUtils
2012-11-09 11:44:30,425 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.EmbeddedServer
2012-11-09 11:44:30,462 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 11:44:30,463 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 11:44:30,505 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 11:44:30,522 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 11:44:30,563 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 11:44:30,564 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 11:44:30,571 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 11:44:30,615 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:30,629 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 11:44:30,637 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 11:44:30,676 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,683 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 11:44:30,692 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 11:44:30,695 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 11:44:30,703 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,703 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 11:44:30,704 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 11:44:30,704 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 11:44:30,704 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,705 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 11:44:30,705 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 11:44:30,706 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 11:44:30,707 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,707 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 11:44:30,707 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 11:44:30,708 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 11:44:30,708 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,709 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 11:44:30,709 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 11:44:30,709 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 11:44:30,710 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,710 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 11:44:30,711 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 11:44:30,711 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 11:44:30,714 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 11:44:30,714 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:30,715 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 11:44:30,715 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 11:44:30,742 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,743 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 11:44:30,743 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 11:44:30,744 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 11:44:30,744 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,745 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 11:44:30,746 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 11:44:30,746 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 11:44:30,747 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 11:44:30,748 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,751 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,769 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,770 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,772 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 11:44:30,775 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 11:44:30,775 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 11:44:30,776 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:30,782 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 11:44:30,782 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,783 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 11:44:30,786 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 11:44:30,786 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 11:44:30,787 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:30,787 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:30,787 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 11:44:30,788 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 11:44:30,794 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,795 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 11:44:30,795 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 11:44:30,796 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 11:44:30,797 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,798 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 11:44:30,798 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 11:44:30,798 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 11:44:30,799 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,799 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 11:44:30,800 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 11:44:30,800 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 11:44:30,800 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,805 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,806 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 11:44:30,806 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 11:44:30,807 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 11:44:30,807 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:30,808 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 11:44:30,808 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 11:44:30,809 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 11:44:30,809 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 11:44:30,810 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 11:44:30,811 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 11:44:30,811 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 11:44:30,812 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 11:44:30,812 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 11:44:30,812 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 11:44:30,812 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 11:44:30,813 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 11:44:30,813 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 11:44:30,814 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 11:44:30,814 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 11:44:30,814 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 11:44:30,815 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 11:44:30,815 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 11:44:30,816 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 11:44:30,818 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 11:44:30,819 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 11:44:30,819 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 11:44:30,819 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:30,820 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 11:44:30,821 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 11:44:30,830 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:30,831 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 11:44:30,831 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 11:44:30,832 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 11:44:30,832 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 11:44:30,876 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 11:44:30,919 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 11:44:30,920 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 11:44:30,920 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 11:44:30,959 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 11:44:30,998 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 11:44:30,998 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 11:44:30,999 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 11:44:30,999 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 11:44:30,999 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 11:44:30,999 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 11:44:31,000 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 11:44:31,000 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 11:44:31,001 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 11:44:31,005 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 11:44:31,006 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 11:44:31,006 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 11:44:31,006 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 11:44:31,007 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 11:44:31,010 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 11:44:31,011 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 11:44:31,012 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 11:44:31,012 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 11:44:31,012 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 11:44:31,013 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 11:44:31,015 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 11:44:31,015 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 11:44:31,016 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 11:44:31,016 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 11:44:31,016 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 11:44:31,017 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 11:44:31,017 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 11:44:31,017 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 11:44:31,018 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 11:44:31,037 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 11:44:31,049 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 11:44:31,050 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre7\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre7/bin/client;C:/Program Files/Java/jre7/bin;C:/Program Files/Java/jre7/lib/i386;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;D:\springsource\sts-2.8.1.RELEASE;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@ef89c6, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/418/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/416/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/417/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59279 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\Cedroic\AppData\Local\Temp\testNames2071556339940610994.txt, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 11:44:31,178 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:31,179 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:31,180 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:31,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 11:44:31,306 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 11:44:31,307 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_1_, order_.state as state1_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 11:44:31,307 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 11:44:31,307 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 11:44:31,308 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 11:44:31,313 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 11:44:31,313 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 11:44:31,314 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city0_, client_.countryCode as countryC3_0_, client_.name as name0_, client_.street as street0_, client_.zip as zip0_ from Client client_ where client_.clientCode=?
2012-11-09 11:44:31,314 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:44:31,315 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:31,315 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 11:44:31,325 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:31,326 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 11:44:31,326 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item2_, orderline_.lineId as lineId2_, orderline_.currencyCode as currency4_2_, orderline_.price as price2_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 11:44:31,327 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 11:44:31,327 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 11:44:31,327 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 11:44:31,328 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 11:44:31,339 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:31,340 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 11:44:31,340 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 11:44:31,341 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 11:44:31,373 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:31,374 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:31,375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,375 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,376 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,377 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,377 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,378 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,379 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,379 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode1_0_, order0_.forCustomerCode as forCusto2_1_0_, order0_.state as state1_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:31,390 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:31,391 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode1_1_, order0_.forCustomerCode as forCusto2_1_1_, order0_.state as state1_1_, lines1_.lines_orderCode as lines6_1_3_, lines1_.id as id3_, lines1_.id as id2_0_, lines1_.item as item2_0_, lines1_.lineId as lineId2_0_, lines1_.currencyCode as currency4_2_0_, lines1_.price as price2_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:31,391 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,392 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,393 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,393 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,394 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,395 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,395 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,396 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,396 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,397 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,398 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,398 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:31,399 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,400 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,400 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,401 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,402 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,402 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,403 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,403 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,404 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,405 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,405 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,406 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id2_0_, orderline0_.item as item2_0_, orderline0_.lineId as lineId2_0_, orderline0_.currencyCode as currency4_2_0_, orderline0_.price as price2_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:31,414 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_1_1_, lines0_.id as id1_, lines0_.id as id2_0_, lines0_.item as item2_0_, lines0_.lineId as lineId2_0_, lines0_.currencyCode as currency4_2_0_, lines0_.price as price2_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 11:44:31,454 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1dc1091
2012-11-09 11:44:31,454 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: 1d377d9a-9ba1-4221-9e09-79eb1ca50a39 (<unnamed>)
2012-11-09 11:44:31,454 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 11:44:31,455 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 11:44:31,455 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 11:44:31,455 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 11:44:31,468 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 11:44:31,535 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:55) - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@134a74a
2012-11-09 11:44:31,536 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 11:44:31,879 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578718
2012-11-09 11:44:31,890 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578718
2012-11-09 11:44:31,977 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 11:44:31,999 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578719
2012-11-09 11:44:32,000 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578720
2012-11-09 11:44:32,010 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 11:44:32,022 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 11:44:32,403 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578724
2012-11-09 11:44:32,409 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:32,469 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:32,489 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'clientCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-09 11:44:32,490 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:44:32,527 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 11:44:32,556 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (generatedAlias0) -> client0_
2012-11-09 11:44:32,557 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 11:44:32,562 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 11:44:32,565 [main] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : clientCode -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:32,566 [main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.clientCode -> client0_.clientCode
2012-11-09 11:44:32,570 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 11:44:32,571 [main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} client0_.clientCode ) ( FromClause{level=1} Client client0_ ) ( where ( = ( client0_.clientCode client0_.clientCode clientCode ) ? ) ) )
2012-11-09 11:44:32,693 [main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 11:44:32,694 [main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 11:44:32,696 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode as clientCode0_' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.clientCode' {propertyName=clientCode,dereferenceType=ALL,propertyPath=clientCode,path=generatedAlias0.clientCode,tableAlias=client0_,className=com.emo.sample.domain.Client,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'clientCode' {originalText=clientCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@f02bf7}

2012-11-09 11:44:32,696 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:44:32,706 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:32,706 [main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:32,707 [main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:44:32,760 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:32,761 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:32,774 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:32,825 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:32,831 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:32,831 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:32,832 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:32,836 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578728
2012-11-09 11:44:32,840 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:32,840 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:32,841 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:32,841 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:32,842 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:32,861 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#newClient1234567]
2012-11-09 11:44:32,862 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:32,863 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:32,864 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:44:32,875 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: newClient1234567, using strategy: org.hibernate.id.Assigned
2012-11-09 11:44:32,887 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:32,888 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:32,889 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:32,892 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:44:32,893 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:32,896 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:32,897 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=newClient1234567, street=23 rue du machin, name=Cedric Bou, countryCode=FRA, city=Lille}
2012-11-09 11:44:32,912 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:44:32,916 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:32,916 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:32,918 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:32,918 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:32,918 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:32,919 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:32,919 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578729
2012-11-09 11:44:32,920 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:32,921 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:32,921 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:32,922 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:32,924 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:32,928 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#newClient1234567]
2012-11-09 11:44:32,932 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#newClient1234567]
2012-11-09 11:44:32,933 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#newClient1234567]
2012-11-09 11:44:32,934 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:32,934 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:32,934 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:32,935 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:32,937 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578729
2012-11-09 11:44:32,938 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:32,939 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:32,940 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:32,940 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:32,941 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:32,942 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:32,942 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:32,943 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:32,943 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578729
2012-11-09 11:44:32,944 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:32,944 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:32,945 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:32,945 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:32,945 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:32,946 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#newClient123456]
2012-11-09 11:44:32,947 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_0_, client0_.city as city0_0_, client0_.countryCode as countryC3_0_0_, client0_.name as name0_0_, client0_.street as street0_0_, client0_.zip as zip0_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:32,948 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:32,949 [main] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:44:32,949 [main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: newClient123456, using strategy: org.hibernate.id.Assigned
2012-11-09 11:44:32,950 [main] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:32,950 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:32,950 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:32,951 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:44:32,951 [main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:32,951 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:32,951 [main] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=newClient123456, street=23 rue du machin, name=Cedric Bou, countryCode=FRA, city=Lille}
2012-11-09 11:44:32,952 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:44:32,953 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:32,953 [main] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:32,954 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:32,954 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:32,954 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:32,954 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:32,955 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578729
2012-11-09 11:44:32,956 [main] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:32,956 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:32,957 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:32,958 [main] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode0_, client0_.city as city0_, client0_.countryCode as countryC3_0_, client0_.name as name0_, client0_.street as street0_, client0_.zip as zip0_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:32,959 [main] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:32,960 [main] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#newClient123456]
2012-11-09 11:44:32,961 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#newClient123456]
2012-11-09 11:44:32,961 [main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#newClient123456]
2012-11-09 11:44:32,962 [main] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:32,962 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:32,962 [main] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:32,962 [main] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:35,817 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:35,817 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:35,818 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:35,818 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@145c47f
2012-11-09 11:44:35,818 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c8fe2
2012-11-09 11:44:35,818 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c76b8d
2012-11-09 11:44:35,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:35,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:35,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:35,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:35,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:35,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:35,820 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:35,821 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:35,821 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:35,821 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:35,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:35,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:35,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:35,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:35,823 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:35,823 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:35,823 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:35,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:35,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:35,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:35,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:35,825 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:35,825 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:35,825 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:35,825 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:35,826 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:35,826 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:35,826 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:35,827 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:35,827 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:35,827 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:35,828 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:35,828 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:35,828 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:35,828 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:35,829 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:35,829 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191d41b
2012-11-09 11:44:35,829 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:35,830 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:35,830 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:35,830 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d8446c
2012-11-09 11:44:35,830 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:35,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:35,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:35,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:35,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:35,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:35,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:35,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:35,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:35,833 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:35,834 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f3d5f4
2012-11-09 11:44:35,834 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d9ae77
2012-11-09 11:44:35,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:35,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:35,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:35,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:35,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:35,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:35,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@15216b7
2012-11-09 11:44:35,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:35,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:35,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:35,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:35,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:35,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:35,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1a287d9
2012-11-09 11:44:35,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:35,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:35,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186a830
2012-11-09 11:44:35,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:35,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:35,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d4b575
2012-11-09 11:44:35,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@af6b7f
2012-11-09 11:44:35,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:35,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:35,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f2a6f
2012-11-09 11:44:35,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4aed05
2012-11-09 11:44:35,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10eedab
2012-11-09 11:44:35,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11597f2
2012-11-09 11:44:35,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@aa9586
2012-11-09 11:44:35,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13ec619
2012-11-09 11:44:35,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f9f3b
2012-11-09 11:44:35,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@eee7f3
2012-11-09 11:44:35,844 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 11:44:35,844 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 11:44:35,844 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:35,844 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:35,845 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 11:44:35,845 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 11:44:35,845 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 11:44:35,846 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 11:44:35,846 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 11:44:35,846 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 11:44:35,847 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 11:44:35,847 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 11:44:35,848 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 11:44:35,848 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 11:44:35,848 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 11:44:35,849 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: EnvironmentClassLoader[web-app:production/webapp/default/ROOT]
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@be26e6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@1cc184b
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 11:44:35,849 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 11:44:35,850 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 11:44:35,852 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 11:44:35,853 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 11:44:35,854 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 11:44:35,856 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 11:44:35,857 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 11:44:35,858 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 11:44:35,859 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 11:44:35,860 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 11:44:35,861 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 11:44:35,862 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 11:44:35,864 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.mains.WebMain
2012-11-09 11:44:35,865 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.CommandUtils
2012-11-09 11:44:35,866 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.EmbeddedServer
2012-11-09 11:44:35,867 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 11:44:35,868 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 11:44:35,870 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 11:44:35,871 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 11:44:35,871 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 11:44:35,872 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 11:44:35,872 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 11:44:35,873 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:35,873 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 11:44:35,873 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 11:44:35,875 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,875 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 11:44:35,876 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 11:44:35,876 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 11:44:35,877 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,877 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 11:44:35,878 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 11:44:35,878 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 11:44:35,879 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,879 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 11:44:35,880 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 11:44:35,880 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 11:44:35,880 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,881 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 11:44:35,881 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 11:44:35,882 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 11:44:35,882 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,883 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 11:44:35,883 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 11:44:35,883 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 11:44:35,884 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,884 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 11:44:35,884 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 11:44:35,885 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 11:44:35,885 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 11:44:35,886 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:35,886 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 11:44:35,887 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 11:44:35,888 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,888 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 11:44:35,889 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 11:44:35,890 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 11:44:35,890 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,891 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 11:44:35,891 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 11:44:35,892 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 11:44:35,893 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 11:44:35,893 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,894 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,894 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,895 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,896 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 11:44:35,896 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 11:44:35,897 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 11:44:35,897 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:35,898 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 11:44:35,898 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,899 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 11:44:35,900 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 11:44:35,900 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 11:44:35,901 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:35,901 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:35,902 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 11:44:35,902 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 11:44:35,903 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,904 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 11:44:35,904 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 11:44:35,904 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 11:44:35,905 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,905 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 11:44:35,906 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 11:44:35,906 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 11:44:35,906 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,907 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 11:44:35,907 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 11:44:35,907 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 11:44:35,908 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,909 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,909 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 11:44:35,910 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 11:44:35,911 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 11:44:35,911 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:35,912 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 11:44:35,912 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 11:44:35,912 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 11:44:35,913 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 11:44:35,914 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 11:44:35,914 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 11:44:35,915 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 11:44:35,915 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 11:44:35,915 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 11:44:35,915 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 11:44:35,915 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 11:44:35,916 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 11:44:35,916 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 11:44:35,916 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 11:44:35,916 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 11:44:35,917 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 11:44:35,917 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 11:44:35,917 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 11:44:35,945 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 11:44:35,945 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 11:44:35,946 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 11:44:35,946 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 11:44:35,946 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:35,946 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 11:44:35,947 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 11:44:35,947 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:35,948 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 11:44:35,948 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 11:44:35,948 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 11:44:35,948 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 11:44:35,950 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 11:44:35,951 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 11:44:35,952 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 11:44:35,952 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 11:44:35,955 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 11:44:35,956 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 11:44:35,957 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 11:44:35,957 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 11:44:35,957 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 11:44:35,957 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 11:44:35,958 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 11:44:35,958 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 11:44:35,958 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 11:44:35,958 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 11:44:35,959 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 11:44:35,959 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 11:44:35,959 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 11:44:35,959 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 11:44:35,960 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 11:44:35,960 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 11:44:35,960 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 11:44:35,961 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 11:44:35,961 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 11:44:35,961 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 11:44:35,961 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 11:44:35,962 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 11:44:35,962 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 11:44:35,962 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 11:44:35,963 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 11:44:35,963 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 11:44:35,963 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 11:44:35,963 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 11:44:35,964 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 11:44:35,964 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 11:44:35,964 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 11:44:35,964 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 11:44:35,965 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre7\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre7/bin/client;C:/Program Files/Java/jre7/bin;C:/Program Files/Java/jre7/lib/i386;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;D:\springsource\sts-2.8.1.RELEASE;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@1cc184b, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/418/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/416/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/417/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59279 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\Cedroic\AppData\Local\Temp\testNames2071556339940610994.txt, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 11:44:35,969 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:35,970 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:35,970 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:35,973 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 11:44:35,973 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 11:44:35,974 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_7_, order_.state as state7_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 11:44:35,974 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 11:44:35,974 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 11:44:35,974 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 11:44:35,976 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 11:44:35,977 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 11:44:35,977 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city6_, client_.countryCode as countryC3_6_, client_.name as name6_, client_.street as street6_, client_.zip as zip6_ from Client client_ where client_.clientCode=?
2012-11-09 11:44:35,977 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:44:35,978 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:35,978 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 11:44:35,980 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:35,981 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 11:44:35,981 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item8_, orderline_.lineId as lineId8_, orderline_.currencyCode as currency4_8_, orderline_.price as price8_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 11:44:35,981 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 11:44:35,982 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 11:44:35,982 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 11:44:35,982 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 11:44:35,983 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:35,983 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 11:44:35,983 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 11:44:35,983 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 11:44:35,984 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:35,985 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:35,986 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,986 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,987 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,987 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,988 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,988 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,989 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,989 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode7_0_, order0_.forCustomerCode as forCusto2_7_0_, order0_.state as state7_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:35,990 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:35,991 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode7_1_, order0_.forCustomerCode as forCusto2_7_1_, order0_.state as state7_1_, lines1_.lines_orderCode as lines6_7_3_, lines1_.id as id3_, lines1_.id as id8_0_, lines1_.item as item8_0_, lines1_.lineId as lineId8_0_, lines1_.currencyCode as currency4_8_0_, lines1_.price as price8_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:35,991 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,992 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,993 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,993 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,994 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,994 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,995 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,995 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,996 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,996 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,997 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,997 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:35,998 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [NONE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:35,998 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [READ]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:35,999 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:35,999 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [UPGRADE_NOWAIT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,000 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [FORCE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,001 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_READ]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,001 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_WRITE]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,002 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [PESSIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,002 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,003 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.OrderLine [OPTIMISTIC_FORCE_INCREMENT]: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,003 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,004 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.OrderLine: select orderline0_.id as id8_0_, orderline0_.item as item8_0_, orderline0_.lineId as lineId8_0_, orderline0_.currencyCode as currency4_8_0_, orderline0_.price as price8_0_ from OrderLine orderline0_ where orderline0_.id=?
2012-11-09 11:44:36,004 [main] DEBUG org.hibernate.loader.collection.OneToManyLoader.<init>(OneToManyLoader.java:82) - Static select for one-to-many com.emo.sample.domain.order.Order.lines: select lines0_.lines_orderCode as lines6_7_1_, lines0_.id as id1_, lines0_.id as id8_0_, lines0_.item as item8_0_, lines0_.lineId as lineId8_0_, lines0_.currencyCode as currency4_8_0_, lines0_.price as price8_0_ from OrderLine lines0_ where lines0_.lines_orderCode=?
2012-11-09 11:44:36,005 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) - Registering SessionFactory: ab887a93-0d9d-4100-92a7-645e5218a13c (<unnamed>)
2012-11-09 11:44:36,005 [main] DEBUG org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) - Not binding SessionFactory to JNDI, no JNDI name configured
2012-11-09 11:44:36,005 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:487) - Instantiated session factory
2012-11-09 11:44:36,006 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1119) - Checking 0 named HQL queries
2012-11-09 11:44:36,006 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1142) - Checking 0 named SQL queries
2012-11-09 11:44:36,006 [main] DEBUG org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) - Statistics initialized [enabled=false]
2012-11-09 11:44:36,010 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:65) - Registering EntityManagerFactory: sample 
2012-11-09 11:44:36,011 [main] WARN  org.hibernate.ejb.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:79) - HHH000436: Entity manager factory name (sample) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
2012-11-09 11:44:36,042 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578760
2012-11-09 11:44:36,044 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578760
2012-11-09 11:44:36,052 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 11:44:36,062 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578760
2012-11-09 11:44:36,064 [main] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578760
2012-11-09 11:44:36,072 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRES_NEW,ISOLATION_DEFAULT; ''
2012-11-09 11:44:36,075 [main] DEBUG org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'handle' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2012-11-09 11:44:36,405 [resin-port-8080-20] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578764
2012-11-09 11:44:36,406 [resin-port-8080-20] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:36,407 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:265) - parse() - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:36,413 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:283) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'emo'
    |  |     |  |  |  \-[IDENT] Node: 'sample'
    |  |     |  |  \-[IDENT] Node: 'domain'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'clientCode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2012-11-09 11:44:36,413 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:44:36,414 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:109) - select << begin [level=1, statement=select]
2012-11-09 11:44:36,414 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} : com.emo.sample.domain.Client (generatedAlias0) -> client0_
2012-11-09 11:44:36,415 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 11:44:36,416 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0 -> client0_.clientCode
2012-11-09 11:44:36,416 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:599) - getDataType() : clientCode -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:36,417 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode.setResolved(FromReferenceNode.java:74) - Resolved : generatedAlias0.clientCode -> client0_.clientCode
2012-11-09 11:44:36,417 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:113) - select : finishing up [level=1, statement=select]
2012-11-09 11:44:36,417 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker.processQuery(HqlSqlWalker.java:631) - processQuery() :  ( SELECT ( {select clause} client0_.clientCode ) ( FromClause{level=1} Client client0_ ) ( where ( = ( client0_.clientCode client0_.clientCode clientCode ) ? ) ) )
2012-11-09 11:44:36,418 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor.addJoinNodes(JoinProcessor.java:175) - Using FROM fragment [Client client0_]
2012-11-09 11:44:36,418 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:117) - select >> end [level=1, statement=select]
2012-11-09 11:44:36,419 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:252) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode as clientCode6_' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.emo.sample.domain.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.clientCode' {propertyName=clientCode,dereferenceType=ALL,propertyPath=clientCode,path=generatedAlias0.clientCode,tableAlias=client0_,className=com.emo.sample.domain.Client,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'client0_.clientCode' {alias=generatedAlias0, className=com.emo.sample.domain.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'clientCode' {originalText=clientCode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@f02bf7}

2012-11-09 11:44:36,420 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:44:36,420 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:235) - HQL: select generatedAlias0 from com.emo.sample.domain.Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:36,421 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl.generate(QueryTranslatorImpl.java:236) - SQL: select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:36,421 [resin-port-8080-20] DEBUG org.hibernate.hql.internal.ast.ErrorCounter.throwQueryException(ErrorCounter.java:82) - throwQueryException() : no errors
2012-11-09 11:44:36,428 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:36,429 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:36,430 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:36,431 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:36,431 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:36,432 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:36,432 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:36,433 [resin-port-8080-20] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578764
2012-11-09 11:44:36,433 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:36,433 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:36,434 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:36,434 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:36,434 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:36,435 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2030) - Loading entity: [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:36,436 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_0_, client0_.city as city6_0_, client0_.countryCode as countryC3_6_0_, client0_.name as name6_0_, client0_.street as street6_0_, client0_.zip as zip6_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:36,437 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:36,437 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.loadEntity(Loader.java:2054) - Done entity load
2012-11-09 11:44:36,438 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:131) - Generated identifier: 1234, using strategy: org.hibernate.id.Assigned
2012-11-09 11:44:36,438 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:36,438 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:36,439 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:36,439 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:44:36,439 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:36,440 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:36,440 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=1 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 11:44:36,441 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:44:36,442 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:36,442 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:36,442 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:36,443 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:36,443 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:36,443 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:36,458 [resin-port-8080-20] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578764
2012-11-09 11:44:36,458 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:36,458 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:36,459 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:36,459 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:36,459 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:36,460 [resin-port-8080-20] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:36,461 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:36,462 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:36,463 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 11:44:36,464 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:36,465 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:36,465 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:36,465 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:36,466 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:36,466 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:36,468 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 11:44:36,469 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:36,469 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:36,469 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 11:44:36,470 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:36,474 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:36,474 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:36,474 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:36,475 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:36,475 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:36,475 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:38,041 [resin-port-8080-25] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578780
2012-11-09 11:44:38,041 [resin-port-8080-25] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:38,042 [resin-port-8080-25] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:38,042 [resin-port-8080-25] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:38,042 [resin-port-8080-25] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:38,043 [resin-port-8080-25] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:38,043 [resin-port-8080-25] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:38,044 [resin-port-8080-25] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:38,045 [resin-port-8080-25] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:38,046 [resin-port-8080-25] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,047 [resin-port-8080-25] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,047 [resin-port-8080-25] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,048 [resin-port-8080-25] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:38,048 [resin-port-8080-25] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:38,048 [resin-port-8080-25] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:38,048 [resin-port-8080-25] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:38,049 [resin-port-8080-25] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:44:38,049 [resin-port-8080-25] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:38,049 [resin-port-8080-25] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:38,049 [resin-port-8080-25] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 11:44:38,050 [resin-port-8080-25] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:38,050 [resin-port-8080-25] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:38,050 [resin-port-8080-25] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:38,050 [resin-port-8080-25] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:38,051 [resin-port-8080-25] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:38,435 [resin-port-8080-18] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578784
2012-11-09 11:44:38,436 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:38,436 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:38,437 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:38,437 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:38,437 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:38,438 [resin-port-8080-18] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:38,439 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:38,440 [resin-port-8080-18] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:38,440 [resin-port-8080-18] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,442 [resin-port-8080-18] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,442 [resin-port-8080-18] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,442 [resin-port-8080-18] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:38,443 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:38,443 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:38,443 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:38,443 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2012-11-09 11:44:38,444 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:38,444 [resin-port-8080-18] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:38,444 [resin-port-8080-18] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 11:44:38,444 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:38,444 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:38,445 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:38,445 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:38,445 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:38,446 [resin-port-8080-18] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578784
2012-11-09 11:44:38,446 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:38,446 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:38,447 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:38,447 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:38,447 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:38,448 [resin-port-8080-18] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:38,449 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:38,451 [resin-port-8080-18] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:38,451 [resin-port-8080-18] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,452 [resin-port-8080-18] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,452 [resin-port-8080-18] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,452 [resin-port-8080-18] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:38,453 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:38,453 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:38,453 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:38,453 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 11:44:38,454 [resin-port-8080-18] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:38,454 [resin-port-8080-18] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:38,454 [resin-port-8080-18] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=11531, clientCode=1234, street=23 rue 4733e665-9f64-4f36-ab34-c71a580fc467, name=toto, countryCode=733, city=665-9f64-}
2012-11-09 11:44:38,455 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:38,455 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:38,456 [resin-port-8080-18] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:38,456 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:38,456 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:38,457 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:38,457 [resin-port-8080-18] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:38,462 [resin-port-8080-20] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578784
2012-11-09 11:44:38,463 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:38,463 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:38,464 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:38,464 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:38,465 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:38,465 [resin-port-8080-20] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:38,467 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:38,468 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:38,468 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,469 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,470 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,470 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:38,471 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:38,471 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:38,471 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:38,471 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 11:44:38,472 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:38,472 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:38,473 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=59000, clientCode=1234, street=4 rue de machin, name=toto, countryCode=FRA, city=Lille}
2012-11-09 11:44:38,473 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:38,475 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:38,475 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:38,475 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:38,476 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:38,476 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:38,476 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:38,477 [resin-port-8080-20] DEBUG org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:253) - Opened session at timestamp: 13524578784
2012-11-09 11:44:38,478 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.begin(AbstractTransactionImpl.java:158) - begin
2012-11-09 11:44:38,478 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:295) - Obtaining JDBC connection
2012-11-09 11:44:38,478 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.obtainConnection(LogicalConnectionImpl.java:301) - Obtained JDBC connection
2012-11-09 11:44:38,479 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:69) - initial autocommit status: true
2012-11-09 11:44:38,479 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doBegin(JdbcTransaction.java:71) - disabling autocommit
2012-11-09 11:44:38,479 [resin-port-8080-20] DEBUG org.hibernate.ejb.criteria.CriteriaQueryCompiler.compile(CriteriaQueryCompiler.java:218) - Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0 where generatedAlias0.clientCode=:param0
2012-11-09 11:44:38,481 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - select client0_.clientCode as clientCode6_, client0_.city as city6_, client0_.countryCode as countryC3_6_, client0_.name as name6_, client0_.street as street6_, client0_.zip as zip6_ from Client client0_ where client0_.clientCode=? limit ?
2012-11-09 11:44:38,482 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.doQuery(Loader.java:849) - Result set row: 0
2012-11-09 11:44:38,482 [resin-port-8080-20] DEBUG org.hibernate.loader.Loader.getRow(Loader.java:1344) - Result row: EntityKey[com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,483 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:140) - Resolving associations for [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,483 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.TwoPhaseLoad.initializeEntity(TwoPhaseLoad.java:271) - Done materializing entity [com.emo.sample.domain.Client#1234]
2012-11-09 11:44:38,483 [resin-port-8080-20] DEBUG org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:923) - Initializing non-lazy collections
2012-11-09 11:44:38,484 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.spi.AbstractTransactionImpl.commit(AbstractTransactionImpl.java:173) - committing
2012-11-09 11:44:38,484 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:143) - Processing flush-time cascades
2012-11-09 11:44:38,484 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:183) - Dirty checking collections
2012-11-09 11:44:38,484 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:117) - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2012-11-09 11:44:38,485 [resin-port-8080-20] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:124) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2012-11-09 11:44:38,485 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:114) - Listing entities:
2012-11-09 11:44:38,485 [resin-port-8080-20] DEBUG org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:121) - com.emo.sample.domain.Client{zip=25746, clientCode=1234, street=23 rue 588874fe-7206-4991-94a4-292d2f0b5f96, name=toto, countryCode=888, city=4fe-7206}
2012-11-09 11:44:38,486 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:104) - update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:38,487 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.doCommit(JdbcTransaction.java:113) - committed JDBC Connection
2012-11-09 11:44:38,487 [resin-port-8080-20] DEBUG org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction.releaseManagedConnection(JdbcTransaction.java:126) - re-enabling autocommit
2012-11-09 11:44:38,487 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:138) - HHH000420: Closing un-released batch
2012-11-09 11:44:38,487 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:314) - Releasing JDBC connection
2012-11-09 11:44:38,488 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.releaseConnection(LogicalConnectionImpl.java:332) - Released JDBC connection
2012-11-09 11:44:38,488 [resin-port-8080-20] DEBUG org.hibernate.engine.jdbc.internal.proxy.ConnectionProxyHandler.physicalConnectionReleased(ConnectionProxyHandler.java:219) - HHH000163: Logical connection releasing its physical connection
2012-11-09 11:44:38,758 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1408) - HHH000031: Closing
2012-11-09 11:44:38,758 [main] DEBUG org.hibernate.ejb.internal.EntityManagerFactoryRegistry.removeEntityManagerFactory(EntityManagerFactoryRegistry.java:107) - Remove: name=sample
2012-11-09 11:44:38,993 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:38,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:38,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9a5c34
2012-11-09 11:44:38,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@145c47f
2012-11-09 11:44:38,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c8fe2
2012-11-09 11:44:38,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c76b8d
2012-11-09 11:44:38,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:38,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:38,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ef9bd
2012-11-09 11:44:38,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:38,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:38,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1966b77
2012-11-09 11:44:38,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:38,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:38,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@19204f4
2012-11-09 11:44:38,998 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:38,998 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration int -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:38,998 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10fec75
2012-11-09 11:44:38,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:38,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:38,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@174257f
2012-11-09 11:44:39,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:39,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:39,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@126b9db
2012-11-09 11:44:39,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:39,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:39,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@dc5f76
2012-11-09 11:44:39,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:39,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16704b6
2012-11-09 11:44:39,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:39,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a2a094
2012-11-09 11:44:39,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration string -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:39,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.String -> org.hibernate.type.StringType@f02bf7
2012-11-09 11:44:39,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration url -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:39,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@136dac0
2012-11-09 11:44:39,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:39,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1875b76
2012-11-09 11:44:39,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:39,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e28c99
2012-11-09 11:44:39,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:39,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:39,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1378b97
2012-11-09 11:44:39,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191d41b
2012-11-09 11:44:39,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:39,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:39,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@99c2aa
2012-11-09 11:44:39,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d8446c
2012-11-09 11:44:39,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:39,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c4c624
2012-11-09 11:44:39,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:39,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19f2397
2012-11-09 11:44:39,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:39,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@342c15
2012-11-09 11:44:39,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:39,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b243a2
2012-11-09 11:44:39,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:39,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9867
2012-11-09 11:44:39,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f3d5f4
2012-11-09 11:44:39,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d9ae77
2012-11-09 11:44:39,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration binary -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:39,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:39,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [B -> org.hibernate.type.BinaryType@6c6cf3
2012-11-09 11:44:39,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:39,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:39,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@79819a
2012-11-09 11:44:39,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration image -> org.hibernate.type.ImageType@15216b7
2012-11-09 11:44:39,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration characters -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:39,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration char[] -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:39,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [C -> org.hibernate.type.CharArrayType@1f47e63
2012-11-09 11:44:39,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:39,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:39,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@34160
2012-11-09 11:44:39,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration text -> org.hibernate.type.TextType@1a287d9
2012-11-09 11:44:39,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:39,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@178069d
2012-11-09 11:44:39,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@186a830
2012-11-09 11:44:39,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:39,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a084c
2012-11-09 11:44:39,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d4b575
2012-11-09 11:44:39,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration serializable -> org.hibernate.type.SerializableType@af6b7f
2012-11-09 11:44:39,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:39,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cd3fb8
2012-11-09 11:44:39,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18e188a
2012-11-09 11:44:39,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ed3c02
2012-11-09 11:44:39,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1feb5a0
2012-11-09 11:44:39,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14656de
2012-11-09 11:44:39,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f13595
2012-11-09 11:44:39,016 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f4efa3
2012-11-09 11:44:39,016 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a0c7bf
2012-11-09 11:44:39,016 [main] DEBUG org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:143) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@99f98a
2012-11-09 11:44:39,016 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2012-11-09 11:44:39,017 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2012-11-09 11:44:39,017 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:39,017 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2012-11-09 11:44:39,017 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2012-11-09 11:44:39,018 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2012-11-09 11:44:39,018 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2012-11-09 11:44:39,018 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2012-11-09 11:44:39,018 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2012-11-09 11:44:39,019 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2012-11-09 11:44:39,019 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2012-11-09 11:44:39,019 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2012-11-09 11:44:39,019 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2012-11-09 11:44:39,020 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2012-11-09 11:44:39,020 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2012-11-09 11:44:39,020 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:525) - Processing PersistenceUnitInfo [
	name: sample
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@e80a59
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@ce12ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@6e956d
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.emo.sample.domain.Client
		com.emo.sample.domain.order.Order
		com.emo.sample.domain.order.OrderLine
		com.emo.sample.domain.order.Price]
	Mapping files names []
	Properties []
2012-11-09 11:44:39,021 [main] DEBUG org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(Ejb3Configuration.java:841) - Detect class: true; detect hbm: true
2012-11-09 11:44:39,022 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(AbstractJarVisitor.java:125) - Searching mapped entities in jar/par: file:/C:/Users/Cedroic/workspaces/smsoip/ws-skeleton/target/test-classes/
2012-11-09 11:44:39,023 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.ClientIsMovingTest
2012-11-09 11:44:39,024 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewClientTest
2012-11-09 11:44:39,025 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.acceptances.NewOrderTest
2012-11-09 11:44:39,027 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.CommandDispatcherTest
2012-11-09 11:44:39,028 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.framework.HandlerBeanProcessorTest
2012-11-09 11:44:39,029 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.ClientIsMovingTest
2012-11-09 11:44:39,030 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunBatchRestCalls
2012-11-09 11:44:39,031 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunHessianCalls
2012-11-09 11:44:39,032 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest$RunRestCalls
2012-11-09 11:44:39,033 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.integration.PerformanceTest
2012-11-09 11:44:39,035 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.mains.WebMain
2012-11-09 11:44:39,036 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.CommandUtils
2012-11-09 11:44:39,036 [main] DEBUG org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(AbstractJarVisitor.java:171) - Filtering: com.emo.utils.EmbeddedServer
2012-11-09 11:44:39,038 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2012-11-09 11:44:39,038 [main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
2012-11-09 11:44:39,040 [main] DEBUG org.hibernate.ejb.util.NamingHelper.bind(NamingHelper.java:50) - No JNDI name configured for binding Ejb3Configuration
2012-11-09 11:44:39,041 [main] DEBUG org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1725) - Preparing to build session factory with filters : {}
2012-11-09 11:44:39,041 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3391) - Processing hbm.xml files
2012-11-09 11:44:39,041 [main] DEBUG org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3421) - Process annotated classes
2012-11-09 11:44:39,042 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.Client
2012-11-09 11:44:39,042 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:39,042 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Client
2012-11-09 11:44:39,043 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.Client on table Client
2012-11-09 11:44:39,044 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=clientCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,044 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property clientCode with lazy=false
2012-11-09 11:44:39,045 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for clientCode
2012-11-09 11:44:39,045 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property clientCode
2012-11-09 11:44:39,046 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=city, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,046 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property city with lazy=false
2012-11-09 11:44:39,046 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for city
2012-11-09 11:44:39,047 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property city
2012-11-09 11:44:39,047 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=countryCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,047 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property countryCode with lazy=false
2012-11-09 11:44:39,048 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for countryCode
2012-11-09 11:44:39,048 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property countryCode
2012-11-09 11:44:39,048 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,049 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property name with lazy=false
2012-11-09 11:44:39,049 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for name
2012-11-09 11:44:39,049 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property name
2012-11-09 11:44:39,050 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=street, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,050 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property street with lazy=false
2012-11-09 11:44:39,050 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for street
2012-11-09 11:44:39,051 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property street
2012-11-09 11:44:39,051 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=zip, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,051 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property zip with lazy=false
2012-11-09 11:44:39,052 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for zip
2012-11-09 11:44:39,052 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property zip
2012-11-09 11:44:39,052 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.Order
2012-11-09 11:44:39,052 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:39,053 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
2012-11-09 11:44:39,053 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.Order on table SalesOrder
2012-11-09 11:44:39,054 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=orderCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,055 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property orderCode with lazy=false
2012-11-09 11:44:39,055 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for orderCode
2012-11-09 11:44:39,056 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property orderCode
2012-11-09 11:44:39,056 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=forCustomerCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,056 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property forCustomerCode with lazy=false
2012-11-09 11:44:39,057 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for forCustomerCode
2012-11-09 11:44:39,057 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property forCustomerCode
2012-11-09 11:44:39,057 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2012-11-09 11:44:39,058 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,058 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=null, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,058 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=element, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,059 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=lines_KEY, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,059 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='lines_KEY', referencedColumn='null', mappedBy='null'}
2012-11-09 11:44:39,059 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 11:44:39,060 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2012-11-09 11:44:39,060 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bind(CollectionBinder.java:402) - Collection role: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:39,061 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lines
2012-11-09 11:44:39,061 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(SalesOrder), mappingColumn=state, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,061 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property state with lazy=false
2012-11-09 11:44:39,062 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for state
2012-11-09 11:44:39,062 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property state
2012-11-09 11:44:39,062 [main] DEBUG org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:530) - Binding entity from annotated class: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:39,063 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2012-11-09 11:44:39,063 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderLine
2012-11-09 11:44:39,064 [main] DEBUG org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:534) - Bind entity com.emo.sample.domain.order.OrderLine on table OrderLine
2012-11-09 11:44:39,065 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=id, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,065 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property internalId with lazy=false
2012-11-09 11:44:39,066 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for internalId
2012-11-09 11:44:39,066 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property internalId
2012-11-09 11:44:39,066 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=item, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,067 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property item with lazy=false
2012-11-09 11:44:39,067 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for item
2012-11-09 11:44:39,067 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property item
2012-11-09 11:44:39,068 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=lineId, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,068 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property lineId with lazy=false
2012-11-09 11:44:39,068 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for lineId
2012-11-09 11:44:39,069 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property lineId
2012-11-09 11:44:39,069 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,070 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=currencyCode, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,070 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property currencyCode with lazy=false
2012-11-09 11:44:39,071 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for currencyCode
2012-11-09 11:44:39,071 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property currencyCode
2012-11-09 11:44:39,071 [main] DEBUG org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:196) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderLine), mappingColumn=price, insertable=true, updatable=true, unique=false}
2012-11-09 11:44:39,072 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:178) - MetadataSourceProcessor property price with lazy=false
2012-11-09 11:44:39,072 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:304) - building SimpleValue for price
2012-11-09 11:44:39,072 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 11:44:39,073 [main] DEBUG org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:258) - Building property price
2012-11-09 11:44:39,073 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for clientCode
2012-11-09 11:44:39,073 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for city
2012-11-09 11:44:39,074 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for countryCode
2012-11-09 11:44:39,074 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for name
2012-11-09 11:44:39,074 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for street
2012-11-09 11:44:39,074 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for zip
2012-11-09 11:44:39,075 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for orderCode
2012-11-09 11:44:39,075 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for forCustomerCode
2012-11-09 11:44:39,075 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for state
2012-11-09 11:44:39,075 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for internalId
2012-11-09 11:44:39,076 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for item
2012-11-09 11:44:39,076 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for lineId
2012-11-09 11:44:39,076 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for currencyCode
2012-11-09 11:44:39,076 [main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:342) - Setting SimpleValue typeName for price
2012-11-09 11:44:39,077 [main] DEBUG org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1403) - Processing fk mappings (*ToOne and JoinedSubclass)
2012-11-09 11:44:39,077 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1579) - Processing extends queue
2012-11-09 11:44:39,077 [main] DEBUG org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1633) - Processing extends queue
2012-11-09 11:44:39,078 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1582) - Processing collection mappings
2012-11-09 11:44:39,078 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:64) - Second pass for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:39,078 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:761) - Binding a OneToMany: com.emo.sample.domain.order.Order.lines through a foreign key
2012-11-09 11:44:39,078 [main] DEBUG org.hibernate.cfg.annotations.CollectionBinder.bindOneToManySecondPass(CollectionBinder.java:790) - Mapping collection: com.emo.sample.domain.order.Order.lines -> OrderLine
2012-11-09 11:44:39,079 [main] DEBUG org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:80) - Mapped collection key: lines_orderCode, one-to-many: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:39,079 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1592) - Processing native query and ResultSetMapping mappings
2012-11-09 11:44:39,079 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1600) - Processing association property references
2012-11-09 11:44:39,080 [main] DEBUG org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1622) - Processing foreign key constraints
2012-11-09 11:44:39,080 [main] DEBUG org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1690) - Resolving reference to class: com.emo.sample.domain.order.Order
2012-11-09 11:44:39,081 [main] INFO  org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(ConnectionProviderInitiator.java:188) - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
2012-11-09 11:44:39,082 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) - Database ->
       name : HSQL Database Engine
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 11:44:39,083 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) - Driver ->
       name : HSQL Database Engine Driver
    version : 2.2.8
      major : 2
      minor : 2
2012-11-09 11:44:39,083 [main] DEBUG org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) - JDBC version : 4.0
2012-11-09 11:44:39,086 [main] INFO  org.hibernate.dialect.Dialect.<init>(Dialect.java:122) - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
2012-11-09 11:44:39,087 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:100) - Automatic flush during beforeCompletion(): disabled
2012-11-09 11:44:39,087 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:106) - Automatic session close at end of transaction: disabled
2012-11-09 11:44:39,087 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:117) - JDBC batch size: 15
2012-11-09 11:44:39,088 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:123) - JDBC batch updates for versioned data: disabled
2012-11-09 11:44:39,088 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:133) - Scrollable result sets: enabled
2012-11-09 11:44:39,088 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:139) - Wrap result sets: disabled
2012-11-09 11:44:39,088 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:145) - JDBC3 getGeneratedKeys(): enabled
2012-11-09 11:44:39,089 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:157) - Connection release mode: auto
2012-11-09 11:44:39,089 [main] INFO  org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:73) - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
2012-11-09 11:44:39,089 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:194) - Default batch fetch size: 1
2012-11-09 11:44:39,089 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:200) - Generate SQL with comments: disabled
2012-11-09 11:44:39,090 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - Order SQL updates by primary key: disabled
2012-11-09 11:44:39,090 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:212) - Order SQL inserts for batching: disabled
2012-11-09 11:44:39,090 [main] DEBUG org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:443) - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2012-11-09 11:44:39,090 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) - HHH000397: Using ASTQueryTranslatorFactory
2012-11-09 11:44:39,091 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:222) - Query language substitutions: {}
2012-11-09 11:44:39,091 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:228) - JPA-QL strict compliance: enabled
2012-11-09 11:44:39,091 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) - Second-level cache: enabled
2012-11-09 11:44:39,091 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) - Query cache: disabled
2012-11-09 11:44:39,092 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:383) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2012-11-09 11:44:39,092 [main] DEBUG org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:393) - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2012-11-09 11:44:39,092 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:257) - Optimize cache for minimal puts: disabled
2012-11-09 11:44:39,093 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:272) - Structured second-level cache entries: disabled
2012-11-09 11:44:39,093 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:281) - Statistics: disabled
2012-11-09 11:44:39,093 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:287) - Deleted entity synthetic identifier rollback: disabled
2012-11-09 11:44:39,093 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:311) - Default entity-mode: pojo
2012-11-09 11:44:39,097 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:317) - Named query checking : enabled
2012-11-09 11:44:39,098 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2012-11-09 11:44:39,101 [main] DEBUG org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:329) - multi-tenancy strategy : NONE
2012-11-09 11:44:39,101 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:226) - Building session factory
2012-11-09 11:44:39,101 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276) - Session factory constructed with filter configurations : {}
2012-11-09 11:44:39,102 [main] DEBUG org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=21.1-b02, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_01-b08, hibernate.ejb.discard_pc_on_close=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, hibernate.connection.autocommit=true, java.io.tmpdir=C:\Users\Cedroic\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=C:\Program Files\Java\jre7\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:/Program Files/Java/jre7/bin/client;C:/Program Files/Java/jre7/bin;C:/Program Files/Java/jre7/lib/i386;D:\vertx\vert.x-1.2.3-final\bin;D:\apache-maven-3.0.4\bin;D:\spring-roo-1.2.0.RC1\bin;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files\Mercurial\;C:\Program Files\Git\cmd;D:\springsource\sts-2.8.1.RELEASE;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.SimpleDriverDataSource@6e956d, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, os.version=6.1, user.home=C:\Users\Cedroic, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=auto, java.specification.version=1.7, file.encoding=Cp1252, user.name=Cedroic, java.class.path=C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\test-classes;C:\Users\Cedroic\workspaces\smsoip\ws-skeleton\target\classes;C:\Users\Cedroic\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Cedroic\.m2\repository\com\jayway\restassured\rest-assured\1.6.2\rest-assured-1.6.2.jar;C:\Users\Cedroic\.m2\repository\org\codehaus\groovy\groovy\1.8.4\groovy-1.8.4.jar;C:\Users\Cedroic\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Cedroic\.m2\repository\asm\asm-commons\3.2\asm-commons-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-util\3.2\asm-util-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-analysis\3.2\asm-analysis-3.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm-tree\3.2\asm-tree-3.2.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpclient\4.1.3\httpclient-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpcore\4.1.4\httpcore-4.1.4.jar;C:\Users\Cedroic\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Cedroic\.m2\repository\org\apache\httpcomponents\httpmime\4.1.3\httpmime-4.1.3.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-library\1.2.1\hamcrest-library-1.2.1.jar;C:\Users\Cedroic\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Cedroic\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Cedroic\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Cedroic\.m2\repository\org\hamcrest\hamcrest-all\1.3\hamcrest-all-1.3.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-aop\3.1.2.RELEASE\spring-aop-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\spring-test\3.1.2.RELEASE\spring-test-3.1.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-entitymanager\4.1.1.Final\hibernate-entitymanager-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\hibernate-core\4.1.1.Final\hibernate-core-4.1.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Cedroic\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Cedroic\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\Cedroic\.m2\repository\net\sf\oval\oval\1.81\oval-1.81.jar;C:\Users\Cedroic\.m2\repository\org\hsqldb\hsqldb\2.2.8\hsqldb-2.2.8.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-log4j12\1.6.6\slf4j-log4j12-1.6.6.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\slf4j-api\1.6.6\slf4j-api-1.6.6.jar;C:\Users\Cedroic\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Cedroic\.m2\repository\cglib\cglib\2.2.2\cglib-2.2.2.jar;C:\Users\Cedroic\.m2\repository\asm\asm\3.3.1\asm-3.3.1.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-jpa\1.1.1.RELEASE\spring-data-jpa-1.1.1.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\springframework\data\spring-data-commons-core\1.3.2.RELEASE\spring-data-commons-core-1.3.2.RELEASE.jar;C:\Users\Cedroic\.m2\repository\org\slf4j\jcl-over-slf4j\1.6.1\jcl-over-slf4j-1.6.1.jar;C:\Users\Cedroic\.m2\repository\org\aspectj\aspectjrt\1.6.12\aspectjrt-1.6.12.jar;C:\Users\Cedroic\.m2\repository\com\yammer\metrics\metrics-core\2.1.3\metrics-core-2.1.3.jar;C:\Users\Cedroic\.m2\repository\javolution\javolution\5.5.1\javolution-5.5.1.jar;C:\Users\Cedroic\.m2\repository\commons-lang\commons-lang\2.6\commons-lang-2.6.jar;C:\Users\Cedroic\.m2\repository\it\unimi\dsi\fastutil\6.4.1\fastutil-6.4.1.jar;C:\Users\Cedroic\.m2\repository\net\minidev\json-smart\2.0-RC2\json-smart-2.0-RC2.jar;C:\Users\Cedroic\.m2\repository\net\minidev\asm\1.0-RC1\asm-1.0-RC1.jar;C:\Users\Cedroic\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar;C:\Users\Cedroic\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\Cedroic\.m2\repository\com\googlecode\disruptor\disruptor\2.10.3\disruptor-2.10.3.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin\4.0.30\resin-4.0.30.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-javaee16\4.0.30\resin-javaee16-4.0.30.jar;C:\Users\Cedroic\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Cedroic\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;C:\Users\Cedroic\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Cedroic\.m2\repository\com\caucho\resin-hessian\4.0.30\resin-hessian-4.0.30.jar;C:\Users\Cedroic\.m2\repository\commons-beanutils\commons-beanutils\1.8.3\commons-beanutils-1.8.3.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-core\6.2.0\wicket-core-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-util\6.2.0\wicket-util-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-request\6.2.0\wicket-request-6.2.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-spring\6.1.0\wicket-spring-6.1.0.jar;C:\Users\Cedroic\.m2\repository\org\apache\wicket\wicket-ioc\6.1.0\wicket-ioc-6.1.0.jar;C:\Users\Cedroic\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/418/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/416/1/.cp/;/D:/springsource/sts-2.8.1.RELEASE/configuration/org.eclipse.osgi/bundles/417/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.use_identifier_rollback=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59279 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -testNameFile C:\Users\Cedroic\AppData\Local\Temp\testNames2071556339940610994.txt, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.specification.vendor=Oracle Corporation, user.language=fr, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_01, hibernate.transaction.flush_before_completion=false, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.query.jpaql_strict_compliance=true, sun.desktop=windows, sun.cpu.isalist=}
2012-11-09 11:44:39,106 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:39,106 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:39,107 [main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) - Setting dialect [org.hibernate.dialect.HSQLDialect]
2012-11-09 11:44:39,108 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.Order
2012-11-09 11:44:39,109 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select orderCode from SalesOrder where orderCode =?
2012-11-09 11:44:39,109 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select order_.orderCode, order_.forCustomerCode as forCusto2_13_, order_.state as state13_ from SalesOrder order_ where order_.orderCode=?
2012-11-09 11:44:39,109 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into SalesOrder (forCustomerCode, state, orderCode) values (?, ?, ?)
2012-11-09 11:44:39,110 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update SalesOrder set forCustomerCode=?, state=? where orderCode=?
2012-11-09 11:44:39,110 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from SalesOrder where orderCode=?
2012-11-09 11:44:39,111 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.Client
2012-11-09 11:44:39,112 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select clientCode from Client where clientCode =?
2012-11-09 11:44:39,112 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select client_.clientCode, client_.city as city12_, client_.countryCode as countryC3_12_, client_.name as name12_, client_.street as street12_, client_.zip as zip12_ from Client client_ where client_.clientCode=?
2012-11-09 11:44:39,112 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into Client (city, countryCode, name, street, zip, clientCode) values (?, ?, ?, ?, ?, ?)
2012-11-09 11:44:39,113 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update Client set city=?, countryCode=?, name=?, street=?, zip=? where clientCode=?
2012-11-09 11:44:39,113 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from Client where clientCode=?
2012-11-09 11:44:39,115 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3381) - Static SQL for entity: com.emo.sample.domain.order.OrderLine
2012-11-09 11:44:39,116 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3383) -  Version select: select id from OrderLine where id =?
2012-11-09 11:44:39,116 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3384) -  Snapshot select: select orderline_.id, orderline_.item as item14_, orderline_.lineId as lineId14_, orderline_.currencyCode as currency4_14_, orderline_.price as price14_ from OrderLine orderline_ where orderline_.id=?
2012-11-09 11:44:39,116 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3386) -  Insert 0: insert into OrderLine (item, lineId, currencyCode, price, id) values (?, ?, ?, ?, ?)
2012-11-09 11:44:39,116 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3387) -  Update 0: update OrderLine set item=?, lineId=?, currencyCode=?, price=? where id=?
2012-11-09 11:44:39,117 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3388) -  Delete 0: delete from OrderLine where id=?
2012-11-09 11:44:39,117 [main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3390) -  Identity insert: insert into OrderLine (id, item, lineId, currencyCode, price) values (default, ?, ?, ?, ?)
2012-11-09 11:44:39,117 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:613) - Static SQL for collection: com.emo.sample.domain.order.Order.lines
2012-11-09 11:44:39,118 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:614) -  Row insert: update OrderLine set lines_orderCode=? where id=?
2012-11-09 11:44:39,118 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:616) -  Row delete: update OrderLine set lines_orderCode=null where lines_orderCode=? and id=?
2012-11-09 11:44:39,118 [main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister.logStaticSQL(AbstractCollectionPersister.java:617) -  One-shot delete: update OrderLine set lines_orderCode=null where lines_orderCode=?
2012-11-09 11:44:39,119 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [NONE]: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:39,120 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [READ]: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:39,120 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,121 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [UPGRADE_NOWAIT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,121 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [FORCE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,122 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_READ]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,122 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_WRITE]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,123 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,123 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,124 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.order.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.orderCode as orderCode13_0_, order0_.forCustomerCode as forCusto2_13_0_, order0_.state as state13_0_ from SalesOrder order0_ where order0_.orderCode=?
2012-11-09 11:44:39,124 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:39,125 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.order.Order: select order0_.orderCode as orderCode13_1_, order0_.forCustomerCode as forCusto2_13_1_, order0_.state as state13_1_, lines1_.lines_orderCode as lines6_13_3_, lines1_.id as id3_, lines1_.id as id14_0_, lines1_.item as item14_0_, lines1_.lineId as lineId14_0_, lines1_.currencyCode as currency4_14_0_, lines1_.price as price14_0_ from SalesOrder order0_ left outer join OrderLine lines1_ on order0_.orderCode=lines1_.lines_orderCode where order0_.orderCode=?
2012-11-09 11:44:39,126 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [NONE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,126 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [READ]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,127 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,127 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [UPGRADE_NOWAIT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,128 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [FORCE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,128 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_READ]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,129 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_WRITE]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,129 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,130 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,131 [main] DEBUG org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.emo.sample.domain.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,131 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
2012-11-09 11:44:39,132 [main] DEBUG org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.emo.sample.domain.Client: select client0_.clientCode as clientCode12_0_, client0_.city as city12_0_, client0_.countryCode as countryC3_12_0_, client0_.name as name12_0_, client0_.street as street12_0_, client0_.zip as zip12_0_ from Client client0_ where client0_.clientCode=?
